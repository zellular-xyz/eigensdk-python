{"abi":[{"type":"function","name":"REQUIRED_BALANCE_GWEI","inputs":[],"outputs":[{"name":"","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"REQUIRED_BALANCE_WEI","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"eigenPodManager","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IEigenPodManager_DeprecatedM1"}],"stateMutability":"view"},{"type":"function","name":"hasRestaked","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"initialize","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mostRecentWithdrawalBlockNumber","inputs":[],"outputs":[{"name":"","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"podOwner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"provenPartialWithdrawal","inputs":[{"name":"validatorIndex","type":"uint40","internalType":"uint40"},{"name":"slot","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"restakedExecutionLayerGwei","inputs":[],"outputs":[{"name":"","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"stake","inputs":[{"name":"pubkey","type":"bytes","internalType":"bytes"},{"name":"signature","type":"bytes","internalType":"bytes"},{"name":"depositDataRoot","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"validatorStatus","inputs":[{"name":"validatorIndex","type":"uint40","internalType":"uint40"}],"outputs":[{"name":"","type":"uint8","internalType":"enum IEigenPod_DeprecatedM1.VALIDATOR_STATUS"}],"stateMutability":"view"},{"type":"function","name":"verifyAndProcessWithdrawal","inputs":[{"name":"withdrawalProofs","type":"tuple","internalType":"struct BeaconChainProofs_DeprecatedM1.WithdrawalProofs","components":[{"name":"blockHeaderProof","type":"bytes","internalType":"bytes"},{"name":"withdrawalProof","type":"bytes","internalType":"bytes"},{"name":"slotProof","type":"bytes","internalType":"bytes"},{"name":"executionPayloadProof","type":"bytes","internalType":"bytes"},{"name":"blockNumberProof","type":"bytes","internalType":"bytes"},{"name":"blockHeaderRootIndex","type":"uint64","internalType":"uint64"},{"name":"withdrawalIndex","type":"uint64","internalType":"uint64"},{"name":"blockHeaderRoot","type":"bytes32","internalType":"bytes32"},{"name":"blockBodyRoot","type":"bytes32","internalType":"bytes32"},{"name":"slotRoot","type":"bytes32","internalType":"bytes32"},{"name":"blockNumberRoot","type":"bytes32","internalType":"bytes32"},{"name":"executionPayloadRoot","type":"bytes32","internalType":"bytes32"}]},{"name":"validatorFieldsProof","type":"bytes","internalType":"bytes"},{"name":"validatorFields","type":"bytes32[]","internalType":"bytes32[]"},{"name":"withdrawalFields","type":"bytes32[]","internalType":"bytes32[]"},{"name":"beaconChainETHStrategyIndex","type":"uint256","internalType":"uint256"},{"name":"oracleBlockNumber","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"verifyOvercommittedStake","inputs":[{"name":"validatorIndex","type":"uint40","internalType":"uint40"},{"name":"proofs","type":"tuple","internalType":"struct BeaconChainProofs_DeprecatedM1.ValidatorFieldsAndBalanceProofs","components":[{"name":"validatorFieldsProof","type":"bytes","internalType":"bytes"},{"name":"validatorBalanceProof","type":"bytes","internalType":"bytes"},{"name":"balanceRoot","type":"bytes32","internalType":"bytes32"}]},{"name":"validatorFields","type":"bytes32[]","internalType":"bytes32[]"},{"name":"beaconChainETHStrategyIndex","type":"uint256","internalType":"uint256"},{"name":"oracleBlockNumber","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"verifyWithdrawalCredentialsAndBalance","inputs":[{"name":"oracleBlockNumber","type":"uint64","internalType":"uint64"},{"name":"validatorIndex","type":"uint40","internalType":"uint40"},{"name":"proofs","type":"tuple","internalType":"struct BeaconChainProofs_DeprecatedM1.ValidatorFieldsAndBalanceProofs","components":[{"name":"validatorFieldsProof","type":"bytes","internalType":"bytes"},{"name":"validatorBalanceProof","type":"bytes","internalType":"bytes"},{"name":"balanceRoot","type":"bytes32","internalType":"bytes32"}]},{"name":"validatorFields","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"withdrawBeforeRestaking","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"withdrawRestakedBeaconChainETH","inputs":[{"name":"recipient","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"REQUIRED_BALANCE_GWEI()":"517355dd","REQUIRED_BALANCE_WEI()":"32b58cd7","eigenPodManager()":"4665bcda","hasRestaked()":"3106ab53","initialize(address)":"c4d66de8","mostRecentWithdrawalBlockNumber()":"ef801571","podOwner()":"0b18ff66","provenPartialWithdrawal(uint40,uint64)":"ddf4639a","restakedExecutionLayerGwei()":"1e415863","stake(bytes,bytes,bytes32)":"9b4e4634","validatorStatus(uint40)":"b18a69f6","verifyAndProcessWithdrawal((bytes,bytes,bytes,bytes,bytes,uint64,uint64,bytes32,bytes32,bytes32,bytes32,bytes32),bytes,bytes32[],bytes32[],uint256,uint64)":"507fa7f6","verifyOvercommittedStake(uint40,(bytes,bytes,bytes32),bytes32[],uint256,uint64)":"b08b4198","verifyWithdrawalCredentialsAndBalance(uint64,uint40,(bytes,bytes,bytes32),bytes32[])":"51f07208","withdrawBeforeRestaking()":"baa7145a","withdrawRestakedBeaconChainETH(address,uint256)":"c4907442"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"REQUIRED_BALANCE_GWEI\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REQUIRED_BALANCE_WEI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eigenPodManager\",\"outputs\":[{\"internalType\":\"contract IEigenPodManager_DeprecatedM1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasRestaked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mostRecentWithdrawalBlockNumber\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"podOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint40\",\"name\":\"validatorIndex\",\"type\":\"uint40\"},{\"internalType\":\"uint64\",\"name\":\"slot\",\"type\":\"uint64\"}],\"name\":\"provenPartialWithdrawal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"restakedExecutionLayerGwei\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"pubkey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"depositDataRoot\",\"type\":\"bytes32\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint40\",\"name\":\"validatorIndex\",\"type\":\"uint40\"}],\"name\":\"validatorStatus\",\"outputs\":[{\"internalType\":\"enum IEigenPod_DeprecatedM1.VALIDATOR_STATUS\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"blockHeaderProof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"withdrawalProof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"slotProof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"executionPayloadProof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"blockNumberProof\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"blockHeaderRootIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"withdrawalIndex\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"blockHeaderRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockBodyRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"slotRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"blockNumberRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"executionPayloadRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct BeaconChainProofs_DeprecatedM1.WithdrawalProofs\",\"name\":\"withdrawalProofs\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"validatorFieldsProof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"validatorFields\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"withdrawalFields\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"beaconChainETHStrategyIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"oracleBlockNumber\",\"type\":\"uint64\"}],\"name\":\"verifyAndProcessWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint40\",\"name\":\"validatorIndex\",\"type\":\"uint40\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"validatorFieldsProof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"validatorBalanceProof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"balanceRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct BeaconChainProofs_DeprecatedM1.ValidatorFieldsAndBalanceProofs\",\"name\":\"proofs\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"validatorFields\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256\",\"name\":\"beaconChainETHStrategyIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"oracleBlockNumber\",\"type\":\"uint64\"}],\"name\":\"verifyOvercommittedStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"oracleBlockNumber\",\"type\":\"uint64\"},{\"internalType\":\"uint40\",\"name\":\"validatorIndex\",\"type\":\"uint40\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"validatorFieldsProof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"validatorBalanceProof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"balanceRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct BeaconChainProofs_DeprecatedM1.ValidatorFieldsAndBalanceProofs\",\"name\":\"proofs\",\"type\":\"tuple\"},{\"internalType\":\"bytes32[]\",\"name\":\"validatorFields\",\"type\":\"bytes32[]\"}],\"name\":\"verifyWithdrawalCredentialsAndBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawBeforeRestaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawRestakedBeaconChainETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"details\":\"Note that all beacon chain balances are stored as gwei within the beacon chain datastructures. We choose   to account balances in terms of gwei in the EigenPod contract and convert to wei when making calls to other contracts\",\"kind\":\"dev\",\"methods\":{\"verifyAndProcessWithdrawal((bytes,bytes,bytes,bytes,bytes,uint64,uint64,bytes32,bytes32,bytes32,bytes32,bytes32),bytes,bytes32[],bytes32[],uint256,uint64)\":{\"params\":{\"beaconChainETHStrategyIndex\":\"is the index of the beaconChainETHStrategy for the pod owner for the callback to        the EigenPodManager to the StrategyManager in case it must be removed from the podOwner's list of strategies\",\"validatorFields\":\"are the fields of the validator being proven\",\"validatorFieldsProof\":\"is the proof of the validator's fields in the validator tree\",\"withdrawalFields\":\"are the fields of the withdrawal being proven\",\"withdrawalProofs\":\"is the information needed to check the veracity of the block number and withdrawal being proven\"}},\"verifyOvercommittedStake(uint40,(bytes,bytes,bytes32),bytes32[],uint256,uint64)\":{\"details\":\"For more details on the Beacon Chain spec, see: https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/beacon-chain.md#validator\",\"params\":{\"beaconChainETHStrategyIndex\":\"is the index of the beaconChainETHStrategy for the pod owner for the callback to                                    the StrategyManager in case it must be removed from the list of the podOwners strategies\",\"oracleBlockNumber\":\"The oracleBlockNumber whose state root the `proof` will be proven against.        Must be within `VERIFY_OVERCOMMITTED_WINDOW_BLOCKS` of the current block.\",\"proofs\":\"is the proof of the validator's balance and validatorFields in the balance tree and the balanceRoot to prove for\",\"validatorFields\":\"are the fields of the \\\"Validator Container\\\", refer to consensus specs\",\"validatorIndex\":\"is the index of the validator being proven, refer to consensus specs\"}},\"verifyWithdrawalCredentialsAndBalance(uint64,uint40,(bytes,bytes,bytes32),bytes32[])\":{\"params\":{\"oracleBlockNumber\":\"is the Beacon Chain blockNumber whose state root the `proof` will be proven against.\",\"proofs\":\"is the bytes that prove the ETH validator's balance and withdrawal credentials against a beacon chain state root\",\"validatorFields\":\"are the fields of the \\\"Validator Container\\\", refer to consensus specs for details: https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/beacon-chain.md#validator\",\"validatorIndex\":\"is the index of the validator being proven, refer to consensus specs\"}},\"withdrawRestakedBeaconChainETH(address,uint256)\":{\"details\":\"Called during withdrawal or slashing.Note that this function is marked as non-reentrant to prevent the recipient calling back into it\"}},\"title\":\"The implementation contract used for restaking beacon chain ETH on EigenLayer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"REQUIRED_BALANCE_GWEI()\":{\"notice\":\"The amount of eth, in gwei, that is restaked per validator\"},\"REQUIRED_BALANCE_WEI()\":{\"notice\":\"The amount of eth, in wei, that is restaked per validator\"},\"eigenPodManager()\":{\"notice\":\"The single EigenPodManager for EigenLayer\"},\"hasRestaked()\":{\"notice\":\"an indicator of whether or not the podOwner has ever \\\"fully restaked\\\" by successfully calling `verifyCorrectWithdrawalCredentials`.\"},\"initialize(address)\":{\"notice\":\"Used to initialize the pointers to contracts crucial to the pod's functionality, in beacon proxy construction from EigenPodManager\"},\"mostRecentWithdrawalBlockNumber()\":{\"notice\":\"block number of the most recent withdrawal\"},\"podOwner()\":{\"notice\":\"The owner of this EigenPod\"},\"provenPartialWithdrawal(uint40,uint64)\":{\"notice\":\"mapping that tracks proven partial withdrawals\"},\"restakedExecutionLayerGwei()\":{\"notice\":\"the amount of execution layer ETH in this contract that is staked in EigenLayer (i.e. withdrawn from beaconchain but not EigenLayer),\"},\"stake(bytes,bytes,bytes32)\":{\"notice\":\"Called by EigenPodManager when the owner wants to create another ETH validator.\"},\"validatorStatus(uint40)\":{\"notice\":\"this is a mapping of validator indices to a Validator struct containing pertinent info about the validator\"},\"verifyAndProcessWithdrawal((bytes,bytes,bytes,bytes,bytes,uint64,uint64,bytes32,bytes32,bytes32,bytes32,bytes32),bytes,bytes32[],bytes32[],uint256,uint64)\":{\"notice\":\"This function records a full withdrawal on behalf of one of the Ethereum validators for this EigenPod\"},\"verifyOvercommittedStake(uint40,(bytes,bytes,bytes32),bytes32[],uint256,uint64)\":{\"notice\":\"This function records an overcommitment of stake to EigenLayer on behalf of a certain ETH validator.         If successful, the overcommitted balance is penalized (available for withdrawal whenever the pod's balance allows).         The ETH validator's shares in the enshrined beaconChainETH strategy are also removed from the StrategyManager and undelegated.\"},\"verifyWithdrawalCredentialsAndBalance(uint64,uint40,(bytes,bytes,bytes32),bytes32[])\":{\"notice\":\"This function verifies that the withdrawal credentials of the podOwner are pointed to this contract. It also verifies the current (not effective) balance  of the validator.  It verifies the provided proof of the ETH validator against the beacon chain state root, marks the validator as 'active' in EigenLayer, and credits the restaked ETH in Eigenlayer.\"},\"withdrawBeforeRestaking()\":{\"notice\":\"Called by the pod owner to withdraw the balance of the pod when `hasRestaked` is set to false\"},\"withdrawRestakedBeaconChainETH(address,uint256)\":{\"notice\":\"Transfers `amountWei` in ether from this contract to the specified `recipient` addressCalled by EigenPodManager to withdrawBeaconChainETH that has been added to the EigenPod's balance due to a withdrawal from the beacon chain.\"}},\"notice\":\"DEPRECATED INTERFACE at commit hash https://github.com/Layr-Labs/eigenlayer-contracts/tree/0139d6213927c0a7812578899ddd3dda58051928Terms of Service: https://docs.eigenlayer.xyz/overview/terms-of-serviceThe main functionalities are: - creating new ETH validators with their withdrawal credentials pointed to this contract - proving from beacon chain state roots that withdrawal credentials are pointed to this contract - proving from beacon chain state roots the balances of ETH validators with their withdrawal credentials   pointed to this contract - updating aggregate balances in the EigenPodManager - withdrawing eth when withdrawals are initiated\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/test/integration/deprecatedInterfaces/mainnet/IEigenPod.sol\":\"IEigenPod_DeprecatedM1\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/\",\":zeus-templates/=lib/zeus-templates/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c\",\"dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0xd8a2913e40e1cb3e97eb3ddabd26dab72854de8b47c0fd438808b5bd2be2ca20\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://26d520cecf61b994a11ad8a009570e71736daeb3f73e1983d2f85ff6a725ab82\",\"dweb:/ipfs/QmWjQbNJJaW1H3e3GYcoATfoSjYMoZcjjrc7eA3nHDWYDf\"]},\"src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0x3d4118c7aa962ea8cfe15fd8b1b0ee160421506e036d96a8b09c9cc957fff31c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://51e444895bea318e1c0f6d8d5b092330d0c42b52a95e1935d868e599abd1795e\",\"dweb:/ipfs/Qmd8ozg2SXqSM72ddFmSZm5yqKMcaxQ31ifAhqWrUazWwj\"]},\"src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0xa2e18dbfd63c3211158f916b669bd74066388564a2f019e952953bc5390e1466\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c86e9d4426aa20892ffc660793e8ce6e881de02cc6a0b483efaa06f14a7df864\",\"dweb:/ipfs/QmQbvkto6g9EeRMfU4bPcuAh1Tz3ohGFpHyHS8GA8mZiFN\"]},\"src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8\",\"dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc\"]},\"src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72\",\"dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD\"]},\"src/contracts/interfaces/ISemVerMixin.sol\":{\"keccak256\":\"0xcb910d9afbaf14c2ec32828e28ca72f1dba35c7371f487505d2a73da2c576009\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d801fbeeb84ce1dde84dcfa85d519b726f8ba928c76dc4b24d9317299a7a1ab0\",\"dweb:/ipfs/QmfAVYxxJry6GTML7jtQfoR4H1ZFpF6XYSpFZHZ8QTC61B\"]},\"src/contracts/interfaces/IShareManager.sol\":{\"keccak256\":\"0xa331e73e99af7eb38befbd7e1d1024d7d9b2c6cc2534313672d1f937ee9fdaaa\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://77fada64905d51779609546ba527834aff7d4478ff26df6f33abfe4a57ba028c\",\"dweb:/ipfs/QmerLh58EpALrjvbgdVAbXJz9uCHukBKyS1MeVsEPo1ytS\"]},\"src/contracts/interfaces/ISignatureUtilsMixin.sol\":{\"keccak256\":\"0x5223940241400e601b40ef9b544569262aa96cd9b05efd41fdaa4eb815d1b95b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c993c65dbb74ecf6428aa73535a01a5663f4f4f536611e070b2e78937c19af10\",\"dweb:/ipfs/QmaDsP63uGvoXjrGPYtbcZyUPEEspq9QChZeP1BYrn6FcE\"]},\"src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xbf084857bc21f2e3752072df667a3025ba73431eaa56852562b0dc3594361d75\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8a5eb881299b8949063e8d7eecdadbae92f3c84a129aa58b2e5f995714fb3b23\",\"dweb:/ipfs/QmRsG6BgSS3UcXMDjjucKaNvzGjHa85ph22atnz6hzW9xo\"]},\"src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0x9989483e1c623b3d62b3fe28ca6255577552d85f8ab916fd35559bbad6898a2f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://97084919a9b4c2e30cd1c529c7c21b6274d3ebf2e52e29e612709f6ea8a8ee8f\",\"dweb:/ipfs/QmbdvS23Qe3RLuzPmFndHzmRdnRWtPYiwEBLKwWdUeYkiF\"]},\"src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0xff027b027df59b9d66f69951ff7a52f77ea3a30cda6c8f9b80f02680925484db\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0660cd206c833fdbd84837479e77e69bd29afa34707ed5819604c8d37d9aa828\",\"dweb:/ipfs/QmcUxK7pNDL4ZN2r913fG446hF8snEEVzWJZisedd2zxGc\"]},\"src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0xe8ec0e6bef36311170e2447bdd2fe8b19aad7244024926243428ffe02754b136\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a628118c581ef8393ff09e50d0db45470bed040c45ed463f71144ef344fee48e\",\"dweb:/ipfs/QmUz7nTJfzXKL2Sy175LPHNeUfKFHGarWvJFeCG4ZBqRuX\"]},\"src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0xf6ef9925d5a6db7de81efac1e85b2a4ec64249abc13d4a2ff3ff73e41c8df436\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d3e5dc3ef9a117ac18ac2c0371d34b948d3e1e93c0eba6dbb7a75a1e15abfc6\",\"dweb:/ipfs/QmT4PrXoTJpnTNUxvXk3r4tzrfzSUYg4Lr2GyWNWeVXhAk\"]},\"src/contracts/libraries/SlashingLib.sol\":{\"keccak256\":\"0xe73a53cfd201425b8230c1a9ba91ea7b12315828715c93216d3c9de0d64e0e04\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://615749ec37dc7311a76f51519892e3f4a8c56a90d6f7283d8eec79628385b071\",\"dweb:/ipfs/QmdGVLsmXASwLVVNK9uyHpuN816M7YFqEP4TWCUVu1HXLG\"]},\"src/test/integration/deprecatedInterfaces/mainnet/BeaconChainProofs.sol\":{\"keccak256\":\"0xcf461275ee0d07c442d724850cbf1084bb9da81776752ee75ecbd1e6c0ff5207\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5eb4ab14da3cb5dff32ad541d0c18959c7c62fe8ee352999e92c83fdbfa0423b\",\"dweb:/ipfs/QmfALroMG1mLr9Amh348c3ZR65ZEHQY2AEjEWKDhbH21Z9\"]},\"src/test/integration/deprecatedInterfaces/mainnet/IBeaconChainOracle.sol\":{\"keccak256\":\"0x6aded90744e98879f11d69321291517b2b4a6226c83d66b9f6431cf89bad936c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://16e97a44ef5bff6d017d409c062d4399edfd500ca9a66058ab9910577f5fcb6a\",\"dweb:/ipfs/QmfKLitduUfFgRTmhdQqbbrKK7FzESdw7SCkXWLvxQe3Td\"]},\"src/test/integration/deprecatedInterfaces/mainnet/IEigenPod.sol\":{\"keccak256\":\"0x6f9b973f5ab1e36ac073b6af55dcbab70ca51284a2474895f5293a0ada38eacb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c96497bf15b68fcba38bbbf7754dc6488826d68f05612154a6a1361660831d0c\",\"dweb:/ipfs/QmPUAuaKkv7CrcFozHkER3svNFht63nN4UE978qysxDHvZ\"]},\"src/test/integration/deprecatedInterfaces/mainnet/IEigenPodManager.sol\":{\"keccak256\":\"0x59b9b97191107fd95809f1fda35ee5acc1d56103a6cca146ae44114b75aaf8e1\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://be697616ff4b2b449794966f990e96049e81ea5db51775b12de30b82878f3e04\",\"dweb:/ipfs/QmRS15kqagYKkXe6EBLzKq92X3s5dqeMwdEnhTSdXraUcK\"]},\"src/test/integration/deprecatedInterfaces/mainnet/IStrategyManager.sol\":{\"keccak256\":\"0x5286c72a2f6a1f218de7ea0858dcb12dab3823d0c690cca65686cae893042ee5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4f4f17991559f981489d124c22d370053f51e5a3b443d728cda70fa2ff3f61fe\",\"dweb:/ipfs/QmSukKEG7DEwZMhJWgSpxA6r2AkCwwv7y1Zj1aKk2zCpHi\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"view","type":"function","name":"REQUIRED_BALANCE_GWEI","outputs":[{"internalType":"uint64","name":"","type":"uint64"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"REQUIRED_BALANCE_WEI","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"eigenPodManager","outputs":[{"internalType":"contract IEigenPodManager_DeprecatedM1","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"hasRestaked","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"initialize"},{"inputs":[],"stateMutability":"view","type":"function","name":"mostRecentWithdrawalBlockNumber","outputs":[{"internalType":"uint64","name":"","type":"uint64"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"podOwner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"uint40","name":"validatorIndex","type":"uint40"},{"internalType":"uint64","name":"slot","type":"uint64"}],"stateMutability":"view","type":"function","name":"provenPartialWithdrawal","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"restakedExecutionLayerGwei","outputs":[{"internalType":"uint64","name":"","type":"uint64"}]},{"inputs":[{"internalType":"bytes","name":"pubkey","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes32","name":"depositDataRoot","type":"bytes32"}],"stateMutability":"payable","type":"function","name":"stake"},{"inputs":[{"internalType":"uint40","name":"validatorIndex","type":"uint40"}],"stateMutability":"view","type":"function","name":"validatorStatus","outputs":[{"internalType":"enum IEigenPod_DeprecatedM1.VALIDATOR_STATUS","name":"","type":"uint8"}]},{"inputs":[{"internalType":"struct BeaconChainProofs_DeprecatedM1.WithdrawalProofs","name":"withdrawalProofs","type":"tuple","components":[{"internalType":"bytes","name":"blockHeaderProof","type":"bytes"},{"internalType":"bytes","name":"withdrawalProof","type":"bytes"},{"internalType":"bytes","name":"slotProof","type":"bytes"},{"internalType":"bytes","name":"executionPayloadProof","type":"bytes"},{"internalType":"bytes","name":"blockNumberProof","type":"bytes"},{"internalType":"uint64","name":"blockHeaderRootIndex","type":"uint64"},{"internalType":"uint64","name":"withdrawalIndex","type":"uint64"},{"internalType":"bytes32","name":"blockHeaderRoot","type":"bytes32"},{"internalType":"bytes32","name":"blockBodyRoot","type":"bytes32"},{"internalType":"bytes32","name":"slotRoot","type":"bytes32"},{"internalType":"bytes32","name":"blockNumberRoot","type":"bytes32"},{"internalType":"bytes32","name":"executionPayloadRoot","type":"bytes32"}]},{"internalType":"bytes","name":"validatorFieldsProof","type":"bytes"},{"internalType":"bytes32[]","name":"validatorFields","type":"bytes32[]"},{"internalType":"bytes32[]","name":"withdrawalFields","type":"bytes32[]"},{"internalType":"uint256","name":"beaconChainETHStrategyIndex","type":"uint256"},{"internalType":"uint64","name":"oracleBlockNumber","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"verifyAndProcessWithdrawal"},{"inputs":[{"internalType":"uint40","name":"validatorIndex","type":"uint40"},{"internalType":"struct BeaconChainProofs_DeprecatedM1.ValidatorFieldsAndBalanceProofs","name":"proofs","type":"tuple","components":[{"internalType":"bytes","name":"validatorFieldsProof","type":"bytes"},{"internalType":"bytes","name":"validatorBalanceProof","type":"bytes"},{"internalType":"bytes32","name":"balanceRoot","type":"bytes32"}]},{"internalType":"bytes32[]","name":"validatorFields","type":"bytes32[]"},{"internalType":"uint256","name":"beaconChainETHStrategyIndex","type":"uint256"},{"internalType":"uint64","name":"oracleBlockNumber","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"verifyOvercommittedStake"},{"inputs":[{"internalType":"uint64","name":"oracleBlockNumber","type":"uint64"},{"internalType":"uint40","name":"validatorIndex","type":"uint40"},{"internalType":"struct BeaconChainProofs_DeprecatedM1.ValidatorFieldsAndBalanceProofs","name":"proofs","type":"tuple","components":[{"internalType":"bytes","name":"validatorFieldsProof","type":"bytes"},{"internalType":"bytes","name":"validatorBalanceProof","type":"bytes"},{"internalType":"bytes32","name":"balanceRoot","type":"bytes32"}]},{"internalType":"bytes32[]","name":"validatorFields","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"verifyWithdrawalCredentialsAndBalance"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"withdrawBeforeRestaking"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"withdrawRestakedBeaconChainETH"}],"devdoc":{"kind":"dev","methods":{"verifyAndProcessWithdrawal((bytes,bytes,bytes,bytes,bytes,uint64,uint64,bytes32,bytes32,bytes32,bytes32,bytes32),bytes,bytes32[],bytes32[],uint256,uint64)":{"params":{"beaconChainETHStrategyIndex":"is the index of the beaconChainETHStrategy for the pod owner for the callback to        the EigenPodManager to the StrategyManager in case it must be removed from the podOwner's list of strategies","validatorFields":"are the fields of the validator being proven","validatorFieldsProof":"is the proof of the validator's fields in the validator tree","withdrawalFields":"are the fields of the withdrawal being proven","withdrawalProofs":"is the information needed to check the veracity of the block number and withdrawal being proven"}},"verifyOvercommittedStake(uint40,(bytes,bytes,bytes32),bytes32[],uint256,uint64)":{"details":"For more details on the Beacon Chain spec, see: https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/beacon-chain.md#validator","params":{"beaconChainETHStrategyIndex":"is the index of the beaconChainETHStrategy for the pod owner for the callback to                                    the StrategyManager in case it must be removed from the list of the podOwners strategies","oracleBlockNumber":"The oracleBlockNumber whose state root the `proof` will be proven against.        Must be within `VERIFY_OVERCOMMITTED_WINDOW_BLOCKS` of the current block.","proofs":"is the proof of the validator's balance and validatorFields in the balance tree and the balanceRoot to prove for","validatorFields":"are the fields of the \"Validator Container\", refer to consensus specs","validatorIndex":"is the index of the validator being proven, refer to consensus specs"}},"verifyWithdrawalCredentialsAndBalance(uint64,uint40,(bytes,bytes,bytes32),bytes32[])":{"params":{"oracleBlockNumber":"is the Beacon Chain blockNumber whose state root the `proof` will be proven against.","proofs":"is the bytes that prove the ETH validator's balance and withdrawal credentials against a beacon chain state root","validatorFields":"are the fields of the \"Validator Container\", refer to consensus specs for details: https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/beacon-chain.md#validator","validatorIndex":"is the index of the validator being proven, refer to consensus specs"}},"withdrawRestakedBeaconChainETH(address,uint256)":{"details":"Called during withdrawal or slashing.Note that this function is marked as non-reentrant to prevent the recipient calling back into it"}},"version":1},"userdoc":{"kind":"user","methods":{"REQUIRED_BALANCE_GWEI()":{"notice":"The amount of eth, in gwei, that is restaked per validator"},"REQUIRED_BALANCE_WEI()":{"notice":"The amount of eth, in wei, that is restaked per validator"},"eigenPodManager()":{"notice":"The single EigenPodManager for EigenLayer"},"hasRestaked()":{"notice":"an indicator of whether or not the podOwner has ever \"fully restaked\" by successfully calling `verifyCorrectWithdrawalCredentials`."},"initialize(address)":{"notice":"Used to initialize the pointers to contracts crucial to the pod's functionality, in beacon proxy construction from EigenPodManager"},"mostRecentWithdrawalBlockNumber()":{"notice":"block number of the most recent withdrawal"},"podOwner()":{"notice":"The owner of this EigenPod"},"provenPartialWithdrawal(uint40,uint64)":{"notice":"mapping that tracks proven partial withdrawals"},"restakedExecutionLayerGwei()":{"notice":"the amount of execution layer ETH in this contract that is staked in EigenLayer (i.e. withdrawn from beaconchain but not EigenLayer),"},"stake(bytes,bytes,bytes32)":{"notice":"Called by EigenPodManager when the owner wants to create another ETH validator."},"validatorStatus(uint40)":{"notice":"this is a mapping of validator indices to a Validator struct containing pertinent info about the validator"},"verifyAndProcessWithdrawal((bytes,bytes,bytes,bytes,bytes,uint64,uint64,bytes32,bytes32,bytes32,bytes32,bytes32),bytes,bytes32[],bytes32[],uint256,uint64)":{"notice":"This function records a full withdrawal on behalf of one of the Ethereum validators for this EigenPod"},"verifyOvercommittedStake(uint40,(bytes,bytes,bytes32),bytes32[],uint256,uint64)":{"notice":"This function records an overcommitment of stake to EigenLayer on behalf of a certain ETH validator.         If successful, the overcommitted balance is penalized (available for withdrawal whenever the pod's balance allows).         The ETH validator's shares in the enshrined beaconChainETH strategy are also removed from the StrategyManager and undelegated."},"verifyWithdrawalCredentialsAndBalance(uint64,uint40,(bytes,bytes,bytes32),bytes32[])":{"notice":"This function verifies that the withdrawal credentials of the podOwner are pointed to this contract. It also verifies the current (not effective) balance  of the validator.  It verifies the provided proof of the ETH validator against the beacon chain state root, marks the validator as 'active' in EigenLayer, and credits the restaked ETH in Eigenlayer."},"withdrawBeforeRestaking()":{"notice":"Called by the pod owner to withdraw the balance of the pod when `hasRestaked` is set to false"},"withdrawRestakedBeaconChainETH(address,uint256)":{"notice":"Transfers `amountWei` in ether from this contract to the specified `recipient` addressCalled by EigenPodManager to withdrawBeaconChainETH that has been added to the EigenPod's balance due to a withdrawal from the beacon chain."}},"version":1}},"settings":{"remappings":["@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable-v4.9.0/","@openzeppelin/=lib/openzeppelin-contracts-v4.9.0/","ds-test/=lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable-v4.9.0/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable-v4.9.0/=lib/openzeppelin-contracts-upgradeable-v4.9.0/","openzeppelin-contracts-v4.9.0/=lib/openzeppelin-contracts-v4.9.0/","openzeppelin/=lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/","zeus-templates/=lib/zeus-templates/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/test/integration/deprecatedInterfaces/mainnet/IEigenPod.sol":"IEigenPod_DeprecatedM1"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/openzeppelin-contracts-upgradeable-v4.9.0/contracts/utils/math/SafeCastUpgradeable.sol":{"keccak256":"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b","urls":["bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c","dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis"],"license":"MIT"},"lib/openzeppelin-contracts-v4.9.0/contracts/proxy/beacon/IBeacon.sol":{"keccak256":"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61","urls":["bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354","dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"],"license":"MIT"},"lib/openzeppelin-contracts-v4.9.0/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305","urls":["bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5","dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"],"license":"MIT"},"lib/openzeppelin-contracts-v4.9.0/contracts/utils/math/Math.sol":{"keccak256":"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3","urls":["bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c","dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"],"license":"MIT"},"src/contracts/interfaces/IDelegationManager.sol":{"keccak256":"0xd8a2913e40e1cb3e97eb3ddabd26dab72854de8b47c0fd438808b5bd2be2ca20","urls":["bzz-raw://26d520cecf61b994a11ad8a009570e71736daeb3f73e1983d2f85ff6a725ab82","dweb:/ipfs/QmWjQbNJJaW1H3e3GYcoATfoSjYMoZcjjrc7eA3nHDWYDf"],"license":"BUSL-1.1"},"src/contracts/interfaces/IETHPOSDeposit.sol":{"keccak256":"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c","urls":["bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91","dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz"],"license":"CC0-1.0"},"src/contracts/interfaces/IEigenPod.sol":{"keccak256":"0x3d4118c7aa962ea8cfe15fd8b1b0ee160421506e036d96a8b09c9cc957fff31c","urls":["bzz-raw://51e444895bea318e1c0f6d8d5b092330d0c42b52a95e1935d868e599abd1795e","dweb:/ipfs/Qmd8ozg2SXqSM72ddFmSZm5yqKMcaxQ31ifAhqWrUazWwj"],"license":"BUSL-1.1"},"src/contracts/interfaces/IEigenPodManager.sol":{"keccak256":"0xa2e18dbfd63c3211158f916b669bd74066388564a2f019e952953bc5390e1466","urls":["bzz-raw://c86e9d4426aa20892ffc660793e8ce6e881de02cc6a0b483efaa06f14a7df864","dweb:/ipfs/QmQbvkto6g9EeRMfU4bPcuAh1Tz3ohGFpHyHS8GA8mZiFN"],"license":"BUSL-1.1"},"src/contracts/interfaces/IPausable.sol":{"keccak256":"0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3","urls":["bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8","dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc"],"license":"BUSL-1.1"},"src/contracts/interfaces/IPauserRegistry.sol":{"keccak256":"0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc","urls":["bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72","dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD"],"license":"BUSL-1.1"},"src/contracts/interfaces/ISemVerMixin.sol":{"keccak256":"0xcb910d9afbaf14c2ec32828e28ca72f1dba35c7371f487505d2a73da2c576009","urls":["bzz-raw://d801fbeeb84ce1dde84dcfa85d519b726f8ba928c76dc4b24d9317299a7a1ab0","dweb:/ipfs/QmfAVYxxJry6GTML7jtQfoR4H1ZFpF6XYSpFZHZ8QTC61B"],"license":"BUSL-1.1"},"src/contracts/interfaces/IShareManager.sol":{"keccak256":"0xa331e73e99af7eb38befbd7e1d1024d7d9b2c6cc2534313672d1f937ee9fdaaa","urls":["bzz-raw://77fada64905d51779609546ba527834aff7d4478ff26df6f33abfe4a57ba028c","dweb:/ipfs/QmerLh58EpALrjvbgdVAbXJz9uCHukBKyS1MeVsEPo1ytS"],"license":"BUSL-1.1"},"src/contracts/interfaces/ISignatureUtilsMixin.sol":{"keccak256":"0x5223940241400e601b40ef9b544569262aa96cd9b05efd41fdaa4eb815d1b95b","urls":["bzz-raw://c993c65dbb74ecf6428aa73535a01a5663f4f4f536611e070b2e78937c19af10","dweb:/ipfs/QmaDsP63uGvoXjrGPYtbcZyUPEEspq9QChZeP1BYrn6FcE"],"license":"BUSL-1.1"},"src/contracts/interfaces/IStrategy.sol":{"keccak256":"0xbf084857bc21f2e3752072df667a3025ba73431eaa56852562b0dc3594361d75","urls":["bzz-raw://8a5eb881299b8949063e8d7eecdadbae92f3c84a129aa58b2e5f995714fb3b23","dweb:/ipfs/QmRsG6BgSS3UcXMDjjucKaNvzGjHa85ph22atnz6hzW9xo"],"license":"BUSL-1.1"},"src/contracts/interfaces/IStrategyManager.sol":{"keccak256":"0x9989483e1c623b3d62b3fe28ca6255577552d85f8ab916fd35559bbad6898a2f","urls":["bzz-raw://97084919a9b4c2e30cd1c529c7c21b6274d3ebf2e52e29e612709f6ea8a8ee8f","dweb:/ipfs/QmbdvS23Qe3RLuzPmFndHzmRdnRWtPYiwEBLKwWdUeYkiF"],"license":"BUSL-1.1"},"src/contracts/libraries/BeaconChainProofs.sol":{"keccak256":"0xff027b027df59b9d66f69951ff7a52f77ea3a30cda6c8f9b80f02680925484db","urls":["bzz-raw://0660cd206c833fdbd84837479e77e69bd29afa34707ed5819604c8d37d9aa828","dweb:/ipfs/QmcUxK7pNDL4ZN2r913fG446hF8snEEVzWJZisedd2zxGc"],"license":"BUSL-1.1"},"src/contracts/libraries/Endian.sol":{"keccak256":"0xe8ec0e6bef36311170e2447bdd2fe8b19aad7244024926243428ffe02754b136","urls":["bzz-raw://a628118c581ef8393ff09e50d0db45470bed040c45ed463f71144ef344fee48e","dweb:/ipfs/QmUz7nTJfzXKL2Sy175LPHNeUfKFHGarWvJFeCG4ZBqRuX"],"license":"BUSL-1.1"},"src/contracts/libraries/Merkle.sol":{"keccak256":"0xf6ef9925d5a6db7de81efac1e85b2a4ec64249abc13d4a2ff3ff73e41c8df436","urls":["bzz-raw://2d3e5dc3ef9a117ac18ac2c0371d34b948d3e1e93c0eba6dbb7a75a1e15abfc6","dweb:/ipfs/QmT4PrXoTJpnTNUxvXk3r4tzrfzSUYg4Lr2GyWNWeVXhAk"],"license":"MIT"},"src/contracts/libraries/SlashingLib.sol":{"keccak256":"0xe73a53cfd201425b8230c1a9ba91ea7b12315828715c93216d3c9de0d64e0e04","urls":["bzz-raw://615749ec37dc7311a76f51519892e3f4a8c56a90d6f7283d8eec79628385b071","dweb:/ipfs/QmdGVLsmXASwLVVNK9uyHpuN816M7YFqEP4TWCUVu1HXLG"],"license":"BUSL-1.1"},"src/test/integration/deprecatedInterfaces/mainnet/BeaconChainProofs.sol":{"keccak256":"0xcf461275ee0d07c442d724850cbf1084bb9da81776752ee75ecbd1e6c0ff5207","urls":["bzz-raw://5eb4ab14da3cb5dff32ad541d0c18959c7c62fe8ee352999e92c83fdbfa0423b","dweb:/ipfs/QmfALroMG1mLr9Amh348c3ZR65ZEHQY2AEjEWKDhbH21Z9"],"license":"BUSL-1.1"},"src/test/integration/deprecatedInterfaces/mainnet/IBeaconChainOracle.sol":{"keccak256":"0x6aded90744e98879f11d69321291517b2b4a6226c83d66b9f6431cf89bad936c","urls":["bzz-raw://16e97a44ef5bff6d017d409c062d4399edfd500ca9a66058ab9910577f5fcb6a","dweb:/ipfs/QmfKLitduUfFgRTmhdQqbbrKK7FzESdw7SCkXWLvxQe3Td"],"license":"BUSL-1.1"},"src/test/integration/deprecatedInterfaces/mainnet/IEigenPod.sol":{"keccak256":"0x6f9b973f5ab1e36ac073b6af55dcbab70ca51284a2474895f5293a0ada38eacb","urls":["bzz-raw://c96497bf15b68fcba38bbbf7754dc6488826d68f05612154a6a1361660831d0c","dweb:/ipfs/QmPUAuaKkv7CrcFozHkER3svNFht63nN4UE978qysxDHvZ"],"license":"BUSL-1.1"},"src/test/integration/deprecatedInterfaces/mainnet/IEigenPodManager.sol":{"keccak256":"0x59b9b97191107fd95809f1fda35ee5acc1d56103a6cca146ae44114b75aaf8e1","urls":["bzz-raw://be697616ff4b2b449794966f990e96049e81ea5db51775b12de30b82878f3e04","dweb:/ipfs/QmRS15kqagYKkXe6EBLzKq92X3s5dqeMwdEnhTSdXraUcK"],"license":"BUSL-1.1"},"src/test/integration/deprecatedInterfaces/mainnet/IStrategyManager.sol":{"keccak256":"0x5286c72a2f6a1f218de7ea0858dcb12dab3823d0c690cca65686cae893042ee5","urls":["bzz-raw://4f4f17991559f981489d124c22d370053f51e5a3b443d728cda70fa2ff3f61fe","dweb:/ipfs/QmSukKEG7DEwZMhJWgSpxA6r2AkCwwv7y1Zj1aKk2zCpHi"],"license":"BUSL-1.1"}},"version":1},"id":190}