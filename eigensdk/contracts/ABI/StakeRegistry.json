{"abi":[{"type":"constructor","inputs":[{"name":"_slashingRegistryCoordinator","type":"address","internalType":"contract ISlashingRegistryCoordinator"},{"name":"_delegationManager","type":"address","internalType":"contract IDelegationManager"},{"name":"_avsDirectory","type":"address","internalType":"contract IAVSDirectory"},{"name":"_allocationManager","type":"address","internalType":"contract IAllocationManager"}],"stateMutability":"nonpayable"},{"type":"function","name":"MAX_WEIGHING_FUNCTION_LENGTH","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"WEIGHTING_DIVISOR","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"addStrategies","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"_strategyParams","type":"tuple[]","internalType":"struct IStakeRegistryTypes.StrategyParams[]","components":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"allocationManager","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IAllocationManager"}],"stateMutability":"view"},{"type":"function","name":"avsDirectory","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IAVSDirectory"}],"stateMutability":"view"},{"type":"function","name":"delegation","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IDelegationManager"}],"stateMutability":"view"},{"type":"function","name":"deregisterOperator","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumbers","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getCurrentStake","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"getCurrentTotalStake","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"getLatestStakeUpdate","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IStakeRegistryTypes.StakeUpdate","components":[{"name":"updateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"nextUpdateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"stake","type":"uint96","internalType":"uint96"}]}],"stateMutability":"view"},{"type":"function","name":"getStakeAtBlockNumber","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"blockNumber","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"getStakeAtBlockNumberAndIndex","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"blockNumber","type":"uint32","internalType":"uint32"},{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"getStakeHistory","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"tuple[]","internalType":"struct IStakeRegistryTypes.StakeUpdate[]","components":[{"name":"updateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"nextUpdateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"stake","type":"uint96","internalType":"uint96"}]}],"stateMutability":"view"},{"type":"function","name":"getStakeHistoryLength","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getStakeUpdateAtIndex","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IStakeRegistryTypes.StakeUpdate","components":[{"name":"updateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"nextUpdateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"stake","type":"uint96","internalType":"uint96"}]}],"stateMutability":"view"},{"type":"function","name":"getStakeUpdateIndexAtBlockNumber","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"blockNumber","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"getTotalStakeAtBlockNumberFromIndex","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"blockNumber","type":"uint32","internalType":"uint32"},{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"getTotalStakeHistoryLength","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getTotalStakeIndicesAtBlockNumber","inputs":[{"name":"blockNumber","type":"uint32","internalType":"uint32"},{"name":"quorumNumbers","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"uint32[]","internalType":"uint32[]"}],"stateMutability":"view"},{"type":"function","name":"getTotalStakeUpdateAtIndex","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IStakeRegistryTypes.StakeUpdate","components":[{"name":"updateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"nextUpdateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"stake","type":"uint96","internalType":"uint96"}]}],"stateMutability":"view"},{"type":"function","name":"initializeDelegatedStakeQuorum","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"minimumStake","type":"uint96","internalType":"uint96"},{"name":"_strategyParams","type":"tuple[]","internalType":"struct IStakeRegistryTypes.StrategyParams[]","components":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"initializeSlashableStakeQuorum","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"minimumStake","type":"uint96","internalType":"uint96"},{"name":"lookAheadPeriod","type":"uint32","internalType":"uint32"},{"name":"_strategyParams","type":"tuple[]","internalType":"struct IStakeRegistryTypes.StrategyParams[]","components":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"minimumStakeForQuorum","inputs":[{"name":"","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"modifyStrategyParams","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"strategyIndices","type":"uint256[]","internalType":"uint256[]"},{"name":"newMultipliers","type":"uint96[]","internalType":"uint96[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"registerOperator","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumbers","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"uint96[]","internalType":"uint96[]"},{"name":"","type":"uint96[]","internalType":"uint96[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"registryCoordinator","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract ISlashingRegistryCoordinator"}],"stateMutability":"view"},{"type":"function","name":"removeStrategies","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"indicesToRemove","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setMinimumStakeForQuorum","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"minimumStake","type":"uint96","internalType":"uint96"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setSlashableStakeLookahead","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"_lookAheadBlocks","type":"uint32","internalType":"uint32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"slashableStakeLookAheadPerQuorum","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"stakeTypePerQuorum","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint8","internalType":"enum IStakeRegistryTypes.StakeType"}],"stateMutability":"view"},{"type":"function","name":"strategiesPerQuorum","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"contract IStrategy"}],"stateMutability":"view"},{"type":"function","name":"strategyParams","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"strategyParamsByIndex","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IStakeRegistryTypes.StrategyParams","components":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}]}],"stateMutability":"view"},{"type":"function","name":"strategyParamsLength","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"updateOperatorsStake","inputs":[{"name":"operators","type":"address[]","internalType":"address[]"},{"name":"operatorIds","type":"bytes32[]","internalType":"bytes32[]"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"weightOfOperatorForQuorum","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"event","name":"LookAheadPeriodChanged","inputs":[{"name":"oldLookAheadBlocks","type":"uint32","indexed":false,"internalType":"uint32"},{"name":"newLookAheadBlocks","type":"uint32","indexed":false,"internalType":"uint32"}],"anonymous":false},{"type":"event","name":"MinimumStakeForQuorumUpdated","inputs":[{"name":"quorumNumber","type":"uint8","indexed":true,"internalType":"uint8"},{"name":"minimumStake","type":"uint96","indexed":false,"internalType":"uint96"}],"anonymous":false},{"type":"event","name":"OperatorStakeUpdate","inputs":[{"name":"operatorId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","indexed":false,"internalType":"uint8"},{"name":"stake","type":"uint96","indexed":false,"internalType":"uint96"}],"anonymous":false},{"type":"event","name":"QuorumCreated","inputs":[{"name":"quorumNumber","type":"uint8","indexed":true,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"StakeTypeSet","inputs":[{"name":"newStakeType","type":"uint8","indexed":false,"internalType":"enum IStakeRegistryTypes.StakeType"}],"anonymous":false},{"type":"event","name":"StrategyAddedToQuorum","inputs":[{"name":"quorumNumber","type":"uint8","indexed":true,"internalType":"uint8"},{"name":"strategy","type":"address","indexed":false,"internalType":"contract IStrategy"}],"anonymous":false},{"type":"event","name":"StrategyMultiplierUpdated","inputs":[{"name":"quorumNumber","type":"uint8","indexed":true,"internalType":"uint8"},{"name":"strategy","type":"address","indexed":false,"internalType":"contract IStrategy"},{"name":"multiplier","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"StrategyRemovedFromQuorum","inputs":[{"name":"quorumNumber","type":"uint8","indexed":true,"internalType":"uint8"},{"name":"strategy","type":"address","indexed":false,"internalType":"contract IStrategy"}],"anonymous":false},{"type":"error","name":"BelowMinimumStakeRequirement","inputs":[]},{"type":"error","name":"EmptyStakeHistory","inputs":[]},{"type":"error","name":"InputArrayLengthMismatch","inputs":[]},{"type":"error","name":"InputArrayLengthZero","inputs":[]},{"type":"error","name":"InputDuplicateStrategy","inputs":[]},{"type":"error","name":"InputMultiplierZero","inputs":[]},{"type":"error","name":"InvalidBlockNumber","inputs":[]},{"type":"error","name":"OnlySlashingRegistryCoordinator","inputs":[]},{"type":"error","name":"OnlySlashingRegistryCoordinatorOwner","inputs":[]},{"type":"error","name":"QuorumAlreadyExists","inputs":[]},{"type":"error","name":"QuorumDoesNotExist","inputs":[]},{"type":"error","name":"QuorumNotSlashable","inputs":[]}],"bytecode":{"object":"0x6101003461011057601f61309438819003918201601f19168301916001600160401b0383118484101761011457808492608094604052833981010312610110578051906001600160a01b03821682036101105760208101516001600160a01b0381168103610110576040820151916001600160a01b03831683036101105760600151926001600160a01b03841684036101105760e05260805260a05260c052604051612f6b9081610129823960805181818161032f01526129a5015260a0518161101f015260c05181818161054a01528181610673015281816111ad01526127d2015260e05181818161063501528181610daf0152818161116f01528181611fe40152818161205e01526127010152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080806040526004361015610012575f80fd5b5f905f3560e01c9081630491b41c146119f65750806308732461146119995780631f9b74e01461194557806320b66298146117dd57806325504777146116c25780632cd95940146115c65780633ca5a5f5146115945780634bd26e09146115555780635401ed271461152d5780635e5a67751461150b5780635f1f2d771461108c578063697fbd931461104e5780636b3aa72e146110095780636c3fb4bf14610dde5780636d14a98714610d9957806375d4173a14610cb25780637c17234714610c9757806381c0750214610aaf5780639ab4d6ff14610a775780639f3ccf6514610a1c578063ac6bfb03146109cd578063adc804da14610959578063b6904b7814610917578063bc9a40c3146108db578063bd29b8cd14610856578063c46778a51461081c578063c601527d146105c7578063c8294c5614610579578063ca8aa7c714610534578063cc5a7c20146103f0578063d5eccc0514610386578063dd9846b91461035e578063df5cf72314610319578063e086adb3146102da578063f2be94ae1461026a578063f851e1981461020b5763fa28c627146101b5575f80fd5b34610208576001600160601b036101fa6020926101f460406101d636611c69565b92909194858152600289522060ff82165f52875260405f2093612d87565b90611a44565b505460401c16604051908152f35b80fd5b503461020857604036600319011261020857606061023261022a611a34565b600435611ed3565b61026860405180926001600160601b036040809263ffffffff815116855263ffffffff6020820151166020860152015116910152565bf35b5034610208576080366003190112610208576001600160601b036040602092610291611a24565b60ff8361029c611c56565b936044358152600288522091165f5284526102cf6102c86102c2845f2060643590611a44565b50611d1d565b9182612cb4565b015116604051908152f35b5034610208576040366003190112610208576103166102f7611a24565b6102ff611c56565b90610308611fcf565b61031181611f43565b612cfc565b80f35b50346102085780600319360112610208576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461020857602061037861037236611c69565b91612d87565b63ffffffff60405191168152f35b50346102085760203660031901126102085760ff6103a2611a24565b1680825260016020526040822090825260016020526040822054915f1983019283116103dc5760206001600160601b036101fa8585611a44565b634e487b7160e01b81526011600452602490fd5b50346102085760803660031901126102085761040a611a24565b610412611b9b565b906044359163ffffffff83168303610530576064356001600160401b03811161052c57610443903690600401611bb1565b61044b61205c565b6104638360ff165f52600160205260405f2054151590565b61051d579061047561047b9284612a28565b82612c5e565b60ff8116808452600560209081526040808620805460ff19166001179055519193919290830183807f7c112e863ccf007862e2c9e25819c933fedbc9350a6443423b4a8599c2e8a52d9260016104d497520390a1612cfc565b8152600160205261031660408220604051906104ef82611b35565b63ffffffff43168252836020830152836040830152611e26565b634e487b7160e01b5f52602160045260245ffd5b6310cda51760e21b8552600485fd5b8480fd5b8380fd5b50346102085780600319360112610208576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610208576060366003190112610208576001600160601b0360406020926102cf6102c86102c26105a9611a24565b9360ff6105b4611c56565b9516815260018852856044359120611a44565b5034610208576040366003190112610208576105e1611a24565b906024356001600160401b03811161081857610601903690600401611bb1565b9161060a611fcf565b61061381611f43565b61061d8382612a28565b825160405163de1164bb60e01b8152906020826004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa91821561080d5784926107dc575b506040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906106a581611b06565b6001600160a01b03848116825260ff8616602083019081526040516304c1b8eb60e31b8152925190911660048301525163ffffffff166024820152602081604481855afa9081156107d15786916107a2575b50610700578480f35b61070982611cbe565b91855b818110610779575050849550803b1561052c576107439385809460405196879586948593630287f75160e51b855260048501611d9b565b03925af1801561076e57610759575b8080808480f35b8161076391611b50565b61020857805f610752565b6040513d84823e3d90fd5b6001906001600160a01b0361078e828b611d09565b51511661079b8287611d09565b520161070c565b6107c4915060203d6020116107ca575b6107bc8183611b50565b810190611d83565b5f6106f7565b503d6107b2565b6040513d88823e3d90fd5b6107ff91925060203d602011610806575b6107f78183611b50565b810190611d64565b905f61066d565b503d6107ed565b6040513d86823e3d90fd5b5080fd5b5034610208576020366003190112610208576001600160601b03604060209260ff610845611a24565b168152808452205416604051908152f35b5034610208576040366003190112610208576004356024356001600160401b0381116108d75761088a903690600401611a9d565b61089592919261205c565b835b8181106108a2578480f35b806108d06108b36001938588611cf0565b3560f81c6108c081611f43565b6108ca818761209d565b906123ee565b5001610897565b8280fd5b5034610208576040366003190112610208576103166108f8611a24565b610900611b9b565b90610909611fcf565b61091281611f43565b612c5e565b5034610208576040366003190112610208576102326102c260609260ff61093c611a24565b610944611e90565b50168152600160205260406024359120611a44565b5034610208576040366003190112610208576109aa6109a460409260ff61097e611a24565b826020875161098c81611b06565b82815201521681526003602052836024359120611a44565b50611eae565b6001600160601b03602083519260018060a01b0381511684520151166020820152f35b50346102085760603660031901126102085760ff60406109eb611a24565b926109f4611e90565b50602435815260026020522091165f5260205260606102326102c260405f2060443590611a44565b503461020857604036600319011261020857610a36611a24565b60ff16815260046020526040812080546024359290831015610208576020610a5e8484611a44565b905460405160039290921b1c6001600160a01b03168152f35b50346102085760203660031901126102085763ffffffff604060209260ff610a9d611a24565b16815260068452205416604051908152f35b50346102085760403660031901126102085760043563ffffffff8116809103610818576024356001600160401b0381116108d757610af1903690600401611a9d565b9190610afc83611b71565b91610b0a6040519384611b50565b838352610b1684611b71565b602084019490601f1901368637855b818110610b7657868587604051928392602084019060208552518091526040840192915b818110610b57575050500390f35b825163ffffffff16845285945060209384019390920191600101610b49565b610b81818386611cf0565b3560f81c610b8e81611f43565b808852600160205260408820805415610c835788528363ffffffff60208a20541611610c745780885260016020526040882054885b818110610bd6575b505050600101610b25565b828a52600160205260408a20610bec8284611d57565b5f19810191908211610c6057610c08889263ffffffff92611a44565b5054161115610c1957600101610bc3565b90610c249250611d57565b5f198101908111610c4c579063ffffffff60019216610c438288611d09565b52905f80610bcb565b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b8c52601160045260248cfd5b63cc64657360e01b8852600488fd5b634e487b7160e01b89526032600452602489fd5b50346102085780600319360112610208576020604051818152f35b503461020857606036600319011261020857610ccc611a24565b610cd4611b9b565b6044356001600160401b03811161053057610cf3903690600401611bb1565b610cfb61205c565b610d138360ff165f52600160205260405f2054151590565b610d8a578291610475610d289260ff95612a28565b1680825260056020526040822060ff1981541690557f7c112e863ccf007862e2c9e25819c933fedbc9350a6443423b4a8599c2e8a52d60405180610d6c8582611b88565b0390a18152600160205261031660408220604051906104ef82611b35565b6310cda51760e21b8452600484fd5b50346102085780600319360112610208576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610208576060366003190112610208576004356001600160401b0381116108185736602382011215610818578060040135610e1a81611b71565b91610e286040519384611b50565b8183526024602084019260051b8201019036821161052c57602401915b818310610fe957505050602435906001600160401b0382116108d757366023830112156108d757816004013591610e7b83611b71565b92610e896040519485611b50565b8084526024602085019160051b83010191368311610fe557602401905b828210610fd55750505060443560ff8116810361053057610ec561205c565b610ecf8251611cbe565b92610ed982611f43565b610ee3838361264d565b8693919290845b8651861015610f8257610efd8683611d09565b5115610f64575b610f2d610f118785611d09565b51856001600160601b03610f258a8a611d09565b511691612241565b90898282019283129112908015821691151617610f505760019590950194610eea565b634e487b7160e01b89526011600452602489fd5b88610f6f8787611d09565b526001610f7c878a611d09565b52610f04565b88610f8e8992866123ee565b50604051918291602083016020845282518091526020604085019301915b818110610fba575050500390f35b82511515845285945060209384019390920191600101610fac565b8135815260209182019101610ea6565b8580fd5b82356001600160a01b0381168103610fe557815260209283019201610e45565b50346102085780600319360112610208576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346102085760203660031901126102085760ff60406110889282611071611a24565b168152600560205220541660405191829182611b88565b0390f35b5034611292576040366003190112611292576110a6611a24565b6024356001600160401b0381116112925736602382011215611292578060040135906110d182611b71565b916110df6040519384611b50565b8083526024602084019160051b8301019136831161129257602401905b8282106114fb5750505061110e611fcf565b61111782611f43565b805180156114ec5760ff831691825f52600360205260405f2091835f52600460205260405f209161114782611cbe565b935f5b8381106112d657505060405163de1164bb60e01b8152949250602091508490506004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa928315611287575f936112b5575b506040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316916111df82611b06565b6001600160a01b038581168352602083019182526040516304c1b8eb60e31b815292511660048301525163ffffffff166024820152602081604481855afa908115611287575f91611296575b50611234578480f35b803b156112925761125f935f80946040519687958694859363b66bd98960e01b855260048501611d9b565b03925af1801561128757611274578080808480f35b61128091505f90611b50565b5f5f610752565b6040513d5f823e3d90fd5b5f80fd5b6112af915060203d6020116107ca576107bc8183611b50565b5f61122b565b6112cf91935060203d602011610806576107f78183611b50565b915f6111a7565b6112ea6112e38285611d09565b5183611a44565b50546001600160a01b03166112ff8288611d09565b52867f31fa2e2cd280c9375e13ffcf3d81e2378100186e4058f8d3ddb690b82dcd31f760206113386113318588611d09565b5186611a44565b50546040516001600160a01b039091168152a2867f11a5641322da1dff56a4b66eaac31ffa465295ece907cd163437793b4d009a75604061137c6113318588611d09565b505481516001600160a01b0390911681525f6020820152a281545f198101908111611497576113ab9083611a44565b506113c06113b98386611d09565b5184611a44565b6114ab578181036114be575b505081548015611483575f19016113e38184611a44565b6114ab575f9055825584545f198101908111611497576114066114509187611a44565b905460039190911b1c6001600160a01b031661142c6114258487611d09565b5188611a44565b81546001600160a01b0393841660039290921b91821b9390911b1916919091179055565b8454908115611483576001915f19016114698188611a44565b815490858060a01b039060031b1b1916905586550161114a565b634e487b7160e01b5f52603160045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b634e487b7160e01b5f525f60045260245ffd5b815481546001600160a01b039091166001600160a01b03199182168117835592541690911790555f806113cc565b63796cc52560e01b5f5260045ffd5b81358152602091820191016110fc565b34611292575f366003190112611292576020604051670de0b6b3a76400008152f35b346112925760403660031901126112925760206001600160601b0360406102cf61022a611a34565b346112925760403660031901126112925761156e611a34565b6004355f52600260205260ff60405f2091165f52602052602060405f2054604051908152f35b346112925760203660031901126112925760ff6115af611a24565b165f526003602052602060405f2054604051908152f35b34611292576040366003190112611292576115df611a34565b6004355f52600260205260ff60405f2091165f5260205260405f2080549061160682611b71565b916116146040519384611b50565b8083526020830180925f5260205f205f915b8383106116a5578486604051918291602083019060208452518091526040830191905f5b818110611658575050500390f35b91935091602060608261169760019488516001600160601b036040809263ffffffff815116855263ffffffff6020820151166020860152015116910152565b01940191019184939261164a565b6001602081926116b485611d1d565b815201920192019190611626565b34611292576060366003190112611292576004356001600160a01b038116810361129257602435906044356001600160401b03811161129257611709903690600401611a9d565b9061171261205c565b61171b82611cbe565b9261172583611cbe565b925f5b8181106117595761174b8661108887604051938493604085526040850190611aca565b908382036020850152611aca565b611764818386611cf0565b3560f81c9061177282611f43565b61177c8483611f71565b929092156117ce5782816117966001956117b2948d612241565b916001600160601b036117a9868d611d09565b911690526123ee565b6001600160601b036117c48389611d09565b9116905201611728565b63207f13e360e11b5f5260045ffd5b34611292576060366003190112611292576117f6611a24565b6024356001600160401b03811161129257611815903690600401611a6d565b916044356001600160401b03811161129257611835903690600401611a6d565b909161183f611fcf565b61184881611f43565b84156114ec578482036119365760ff1691825f52600360205260405f20935f5b86811061187157005b806118c361188a6118856001948888611c9a565b611caa565b61189f611898848c88611c9a565b358a611a44565b5080546001600160a01b031660a09290921b6001600160a01b031916919091179055565b857f11a5641322da1dff56a4b66eaac31ffa465295ece907cd163437793b4d009a756118f3611898848c88611c9a565b50848060a01b0390541661190b611885858a8a611c9a565b604080516001600160a01b039390931683526001600160601b0391909116602083015290a201611868565b6343714afd60e01b5f5260045ffd5b346112925760403660031901126112925761195e611a24565b602435906001600160a01b0382168203611292576020918161198261198793611f43565b611f71565b506001600160601b0360405191168152f35b34611292576040366003190112611292576119b2611a24565b60ff60243591165f52600360205260405f208054821015611292576040916119d991611a44565b505481516001600160a01b038216815260a09190911c6020820152f35b346112925760203660031901126112925760209060ff611a14611a24565b165f526001825260405f20548152f35b6004359060ff8216820361129257565b6024359060ff8216820361129257565b8054821015611a59575f5260205f2001905f90565b634e487b7160e01b5f52603260045260245ffd5b9181601f84011215611292578235916001600160401b038311611292576020808501948460051b01011161129257565b9181601f84011215611292578235916001600160401b038311611292576020838186019501011161129257565b90602080835192838152019201905f5b818110611ae75750505090565b82516001600160601b0316845260209384019390920191600101611ada565b604081019081106001600160401b03821117611b2157604052565b634e487b7160e01b5f52604160045260245ffd5b606081019081106001600160401b03821117611b2157604052565b90601f801991011681019081106001600160401b03821117611b2157604052565b6001600160401b038111611b215760051b60200190565b9190602083019260028210156105095752565b602435906001600160601b038216820361129257565b81601f8201121561129257803590611bc882611b71565b92611bd66040519485611b50565b82845260208085019360061b8301019181831161129257602001925b828410611c00575050505090565b6040848303126112925760405190611c1782611b06565b84356001600160a01b03811681036112925782526020850135906001600160601b03821682036112925782602092836040950152815201930192611bf2565b6024359063ffffffff8216820361129257565b6060906003190112611292576004359060243560ff81168103611292579060443563ffffffff811681036112925790565b9190811015611a595760051b0190565b356001600160601b03811681036112925790565b90611cc882611b71565b611cd56040519182611b50565b8281528092611ce6601f1991611b71565b0190602036910137565b90821015611a59570190565b805115611a595760200190565b8051821015611a595760209160051b010190565b90604051611d2a81611b35565b60406001600160601b0382945463ffffffff8116845263ffffffff8160201c166020850152821c16910152565b9190820391821161149757565b9081602091031261129257516001600160a01b03811681036112925790565b90816020910312611292575180151581036112925790565b60809060ff60209394606083019560018060a01b031683521683820152606060408201528451809452019201905f5b818110611dd75750505090565b82516001600160a01b0316845260209384019390920191600101611dca565b906bffffffffffffffffffffffff60401b82549160401b16906bffffffffffffffffffffffff60401b1916179055565b8054600160401b811015611b2157611e4391600182018155611a44565b6114ab578151815460208085015167ffffffff00000000911b1663ffffffff90921667ffffffffffffffff1990911617178155611e8e916001600160601b0390604001511690611df6565b565b60405190611e9d82611b35565b5f6040838281528260208201520152565b90604051611ebb81611b06565b91546001600160a01b038116835260a01c6020830152565b90611edc611e90565b50815f52600260205260405f2060ff82165f5260205260405f205490611f00611e90565b9282611f0c5750505090565b909192505f52600260205260ff60405f2091165f5260205260405f205f19820191821161149757611f40916102c291611a44565b90565b611f5b9060ff165f52600160205260405f2054151590565b15611f6257565b637310cff560e11b5f5260045ffd5b6001600160601b03611fba611fc19493611fc99360405191611f94604084611b50565b6001835260203681850137611fa883611cfc565b6001600160a01b03909116905261264d565b9490611cfc565b511692611cfc565b51151590565b604051638da5cb5b60e01b81526020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115611287575f9161203d575b506001600160a01b0316330361202e57565b63ce98c24b60e01b5f5260045ffd5b612056915060203d602011610806576107f78183611b50565b5f61201c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361208e57565b632c01b20560e21b5f5260045ffd5b5f90805f52600260205260405f2060ff84165f5260205260405f205480155f1461214457505f516020612f165f395f51905f5260406001600160601b0394835f526002602052815f2060ff82165f5260205261211a825f2083519061210182611b35565b63ffffffff431682525f60208301525f85830152611e26565b60ff8251911681525f6020820152a2165f81810391125f82128116905f8313901516176114975790565b908092505f52600260205260405f2060ff84165f5260205260405f20905f1981019081116114975761217591611a44565b50908154916001600160601b038360401c16928315612238576001600160601b03945f516020612f165f395f51905f529260409263ffffffff438116911681036121da5750805473ffffffffffffffffffffffff00000000000000001916905561211a565b815467ffffffff000000001916602082901b67ffffffff00000000161790915561223390855f526002602052835f2060ff84165f52602052835f2084519161222183611b35565b82525f60208301525f85830152611e26565b61211a565b50505050505f90565b9190915f90805f52600260205260405f2060ff85165f5260205260405f205480155f146122f057505f516020612f165f395f51905f5260406001600160601b038095845f526002602052825f2060ff89165f526020526122c4835f208451906122a982611b35565b63ffffffff431682525f602083015284841686830152611e26565b60ff8351981688521695866020820152a216905f82820392128183128116918313901516176114975790565b908092505f52600260205260405f2060ff85165f5260205260405f20905f1981019081116114975761232191611a44565b50908154916001600160601b038360401c16926001600160601b038516908185146123e357855f516020612f165f395f51905f52936001600160601b039763ffffffff6040958a9582431692839116145f1461238757505061238291611df6565b6122c4565b835467ffffffff000000001916602083901b67ffffffff00000000161790935561238292909150875f526002602052855f2060ff8c165f52602052855f20908651926123d284611b35565b83525f602084015286830152611e26565b505050505050505f90565b60ff165f81815260016020526040902080549192915f1981019081116114975761241791611a44565b509080156124b05763ffffffff61243c8354926001600160601b038460401c16612ecc565b93849243831692168203612455575050611f4091611df6565b835467ffffffff000000001916602083901b67ffffffff000000001617909355611f40929091505f52600160205260405f206040519161249483611b35565b82525f60208301526001600160601b0384166040830152611e26565b506001600160601b0391505460401c1690565b602081830312611292578051906001600160401b03821161129257019080601f83011215611292578151906124f782611b71565b926125056040519485611b50565b82845260208085019360051b820101908282116112925760208101935b82851061253157505050505090565b84516001600160401b03811161129257820184603f820112156112925760208101519061255d82611b71565b9161256b6040519384611b50565b8083526020808085019260051b840101019187831161129257604001905b8282106125a157505050815260209485019401612522565b8151815260209182019101612589565b90602080835192838152019201905f5b8181106125ce5750505090565b82516001600160a01b03168452602093840193909201916001016125c1565b90602082549182815201915f5260205f20905f5b81811061260e5750505090565b82546001600160a01b0316845260209093019260019283019201612601565b906001600160601b03809116911601906001600160601b03821161149757565b6126578251611cbe565b60ff6126638451611cbe565b92165f8181526003602052604090208054919591908161268281611b71565b916126906040519384611b50565b81835260208301905f5260205f205f915b8383106129fe5750505050865f52600560205260ff60405f20541660028110156105095760010361295a57865f52600660205263ffffffff6126e98160405f20541643612a1b565b60405163de1164bb60e01b81529116906020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115611287575f916127a091839161293b575b506040519061274d82611b06565b6001600160a01b03908116825260208083018d81528d8652600491829052604080872090516315d5962560e11b81529451909316918401919091525163ffffffff1660248301529093849283926127c691565b60a060448501526127b460a485018e6125b1565b848103600319016064860152906125ed565b608483019190915203817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115611287575f91612919575b50925b5f5b875181101561290c575f5b8481106128615750806001600160601b0361283760019389611d09565b51168a5f525f6020526001600160601b0360405f205416111561285a828a611d09565b520161280f565b61286b8185611d09565b51906128818161287b858a611d09565b51611d09565b51612891575b600191500161281a565b6001600160601b0360206128a98361287b878c611d09565b519301511691828102928184041490151715611497576128f16001600160601b03670de0b6b3a764000060019404166001600160601b036128ea868c611d09565b511661262d565b6001600160601b03612903858b611d09565b91169052612887565b5095505050509092509190565b61293591503d805f833e61292d8183611b50565b8101906124c3565b5f61280a565b612954915060203d602011610806576107f78183611b50565b5f61273f565b865f5260046020526129a15f6040812060405180938192637870733b60e11b83526040600484015261298f604484018d6125b1565b838103600319016024850152906125ed565b03817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115611287575f916129e4575b509261280d565b6129f891503d805f833e61292d8183611b50565b5f6129dd565b600160208192612a0d85611eae565b8152019201920191906126a1565b9190820180921161149757565b8151156114ec5760ff8251911691825f52600360205260405f2054926020612a508486612a1b565b11611936575f925b808410612a66575050505050565b90919293945f5b612a778688612a1b565b811015612aca57835f526003602052612a938160405f20611a44565b50546001600160a01b0390811690612aab8888611d09565b51511614612abb57600101612a6d565b637b74340b60e01b5f5260045ffd5b509493929190926001600160601b036020612ae58386611d09565b5101511615612c4f57815f52600360205260405f20612b048285611d09565b51908054600160401b811015611b2157612b2391600182018155611a44565b6114ab5781516020929092015160a01b6001600160a01b0319166001600160a01b03929092169190911790555f828152600460205260409020906001600160a01b03612b6f8286611d09565b515116825490600160401b821015611b215761142c8260019586612b9595018155611a44565b827f10565e56cacbf32eca267945f054fec02e59750032d113d3302182ad967f54046020848060a01b03612bc98589611d09565b515116604051908152a2827f11a5641322da1dff56a4b66eaac31ffa465295ece907cd163437793b4d009a75838060a01b03612c058488611d09565b5151166001600160601b036020612c1c868a611d09565b510151604080516001600160a01b0394909416845291166001600160601b03166020830152819081010390a20192612a58565b637257125160e01b5f5260045ffd5b602060ff7f26eecff2b70b0a71104ff4d940ba7162d23a95c248771fc487a7be17a596b3cf921692835f525f82526001600160601b0360405f20911690816001600160601b0319825416179055604051908152a2565b63ffffffff808251169216918210612ce3576020015163ffffffff168015918215612cf2575b505015612ce357565b631391e11b60e21b5f5260045ffd5b1090505f80612cda565b60ff1690815f52600560205260ff60405f205416600281101561050957600103612d78575f91825260066020908152604092839020805463ffffffff93841663ffffffff1982168117909255845193168352908201527f28d7358b79f02d21b8b7e17aefc4185a64308aa37406fa5befc05b91932c39c79190a1565b63a3be258360e01b5f5260045ffd5b929190835f52600260205260405f2060ff82165f5260205260405f2054805b612e6b5760405162461bcd60e51b815260206004820152608160248201527f5374616b6552656769737472792e5f6765745374616b65557064617465496e6460448201527f6578466f724f70657261746f724174426c6f636b4e756d6265723a206e6f207360648201527f74616b652075706461746520666f756e6420666f72206f70657261746f72496460848201527f20616e642071756f72756d4e756d62657220617420626c6f636b206e756d626560a4820152603960f91b60c482015260e490fd5b845f52600260205260405f2060ff83165f5260205260405f205f1982019082821161149757612e9f8263ffffffff92611a44565b50541663ffffffff85161015612ebf57508015611497575f190180612da6565b63ffffffff169450505050565b905f811215612f0157600160ff1b8114611497576001600160601b0380915f03169116036001600160601b0381116114975790565b906001600160601b03611f4092169061262d56fe2f527d527e95d8fe40aec55377743bb779087da3f6d0d08f12e36444da62327da2646970667358221220dc5e9d6a71f63ac5a1cd8867b70b67edca6dc7d7b4e702f1dd922dba31d3652a64736f6c634300081b0033","sourceMap":"1372:30589:111:-:0;;;;;;;;;;;;;-1:-1:-1;;1372:30589:111;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;3406:50:112;;1372:30589:111;3466:31:112;3507:28;;3545:38;;1372:30589:111;;;;;;;;;;;;;;;;;;;3507:28:112;1372:30589:111;;;;;3545:38:112;1372:30589:111;;;;;;;;;;;;;;;;;;;;3406:50:112;1372:30589:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1372:30589:111;;;;;;-1:-1:-1;1372:30589:111;;;;;-1:-1:-1;1372:30589:111","linkReferences":{}},"deployedBytecode":{"object":"0x6080806040526004361015610012575f80fd5b5f905f3560e01c9081630491b41c146119f65750806308732461146119995780631f9b74e01461194557806320b66298146117dd57806325504777146116c25780632cd95940146115c65780633ca5a5f5146115945780634bd26e09146115555780635401ed271461152d5780635e5a67751461150b5780635f1f2d771461108c578063697fbd931461104e5780636b3aa72e146110095780636c3fb4bf14610dde5780636d14a98714610d9957806375d4173a14610cb25780637c17234714610c9757806381c0750214610aaf5780639ab4d6ff14610a775780639f3ccf6514610a1c578063ac6bfb03146109cd578063adc804da14610959578063b6904b7814610917578063bc9a40c3146108db578063bd29b8cd14610856578063c46778a51461081c578063c601527d146105c7578063c8294c5614610579578063ca8aa7c714610534578063cc5a7c20146103f0578063d5eccc0514610386578063dd9846b91461035e578063df5cf72314610319578063e086adb3146102da578063f2be94ae1461026a578063f851e1981461020b5763fa28c627146101b5575f80fd5b34610208576001600160601b036101fa6020926101f460406101d636611c69565b92909194858152600289522060ff82165f52875260405f2093612d87565b90611a44565b505460401c16604051908152f35b80fd5b503461020857604036600319011261020857606061023261022a611a34565b600435611ed3565b61026860405180926001600160601b036040809263ffffffff815116855263ffffffff6020820151166020860152015116910152565bf35b5034610208576080366003190112610208576001600160601b036040602092610291611a24565b60ff8361029c611c56565b936044358152600288522091165f5284526102cf6102c86102c2845f2060643590611a44565b50611d1d565b9182612cb4565b015116604051908152f35b5034610208576040366003190112610208576103166102f7611a24565b6102ff611c56565b90610308611fcf565b61031181611f43565b612cfc565b80f35b50346102085780600319360112610208576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461020857602061037861037236611c69565b91612d87565b63ffffffff60405191168152f35b50346102085760203660031901126102085760ff6103a2611a24565b1680825260016020526040822090825260016020526040822054915f1983019283116103dc5760206001600160601b036101fa8585611a44565b634e487b7160e01b81526011600452602490fd5b50346102085760803660031901126102085761040a611a24565b610412611b9b565b906044359163ffffffff83168303610530576064356001600160401b03811161052c57610443903690600401611bb1565b61044b61205c565b6104638360ff165f52600160205260405f2054151590565b61051d579061047561047b9284612a28565b82612c5e565b60ff8116808452600560209081526040808620805460ff19166001179055519193919290830183807f7c112e863ccf007862e2c9e25819c933fedbc9350a6443423b4a8599c2e8a52d9260016104d497520390a1612cfc565b8152600160205261031660408220604051906104ef82611b35565b63ffffffff43168252836020830152836040830152611e26565b634e487b7160e01b5f52602160045260245ffd5b6310cda51760e21b8552600485fd5b8480fd5b8380fd5b50346102085780600319360112610208576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610208576060366003190112610208576001600160601b0360406020926102cf6102c86102c26105a9611a24565b9360ff6105b4611c56565b9516815260018852856044359120611a44565b5034610208576040366003190112610208576105e1611a24565b906024356001600160401b03811161081857610601903690600401611bb1565b9161060a611fcf565b61061381611f43565b61061d8382612a28565b825160405163de1164bb60e01b8152906020826004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa91821561080d5784926107dc575b506040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906106a581611b06565b6001600160a01b03848116825260ff8616602083019081526040516304c1b8eb60e31b8152925190911660048301525163ffffffff166024820152602081604481855afa9081156107d15786916107a2575b50610700578480f35b61070982611cbe565b91855b818110610779575050849550803b1561052c576107439385809460405196879586948593630287f75160e51b855260048501611d9b565b03925af1801561076e57610759575b8080808480f35b8161076391611b50565b61020857805f610752565b6040513d84823e3d90fd5b6001906001600160a01b0361078e828b611d09565b51511661079b8287611d09565b520161070c565b6107c4915060203d6020116107ca575b6107bc8183611b50565b810190611d83565b5f6106f7565b503d6107b2565b6040513d88823e3d90fd5b6107ff91925060203d602011610806575b6107f78183611b50565b810190611d64565b905f61066d565b503d6107ed565b6040513d86823e3d90fd5b5080fd5b5034610208576020366003190112610208576001600160601b03604060209260ff610845611a24565b168152808452205416604051908152f35b5034610208576040366003190112610208576004356024356001600160401b0381116108d75761088a903690600401611a9d565b61089592919261205c565b835b8181106108a2578480f35b806108d06108b36001938588611cf0565b3560f81c6108c081611f43565b6108ca818761209d565b906123ee565b5001610897565b8280fd5b5034610208576040366003190112610208576103166108f8611a24565b610900611b9b565b90610909611fcf565b61091281611f43565b612c5e565b5034610208576040366003190112610208576102326102c260609260ff61093c611a24565b610944611e90565b50168152600160205260406024359120611a44565b5034610208576040366003190112610208576109aa6109a460409260ff61097e611a24565b826020875161098c81611b06565b82815201521681526003602052836024359120611a44565b50611eae565b6001600160601b03602083519260018060a01b0381511684520151166020820152f35b50346102085760603660031901126102085760ff60406109eb611a24565b926109f4611e90565b50602435815260026020522091165f5260205260606102326102c260405f2060443590611a44565b503461020857604036600319011261020857610a36611a24565b60ff16815260046020526040812080546024359290831015610208576020610a5e8484611a44565b905460405160039290921b1c6001600160a01b03168152f35b50346102085760203660031901126102085763ffffffff604060209260ff610a9d611a24565b16815260068452205416604051908152f35b50346102085760403660031901126102085760043563ffffffff8116809103610818576024356001600160401b0381116108d757610af1903690600401611a9d565b9190610afc83611b71565b91610b0a6040519384611b50565b838352610b1684611b71565b602084019490601f1901368637855b818110610b7657868587604051928392602084019060208552518091526040840192915b818110610b57575050500390f35b825163ffffffff16845285945060209384019390920191600101610b49565b610b81818386611cf0565b3560f81c610b8e81611f43565b808852600160205260408820805415610c835788528363ffffffff60208a20541611610c745780885260016020526040882054885b818110610bd6575b505050600101610b25565b828a52600160205260408a20610bec8284611d57565b5f19810191908211610c6057610c08889263ffffffff92611a44565b5054161115610c1957600101610bc3565b90610c249250611d57565b5f198101908111610c4c579063ffffffff60019216610c438288611d09565b52905f80610bcb565b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b8c52601160045260248cfd5b63cc64657360e01b8852600488fd5b634e487b7160e01b89526032600452602489fd5b50346102085780600319360112610208576020604051818152f35b503461020857606036600319011261020857610ccc611a24565b610cd4611b9b565b6044356001600160401b03811161053057610cf3903690600401611bb1565b610cfb61205c565b610d138360ff165f52600160205260405f2054151590565b610d8a578291610475610d289260ff95612a28565b1680825260056020526040822060ff1981541690557f7c112e863ccf007862e2c9e25819c933fedbc9350a6443423b4a8599c2e8a52d60405180610d6c8582611b88565b0390a18152600160205261031660408220604051906104ef82611b35565b6310cda51760e21b8452600484fd5b50346102085780600319360112610208576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5034610208576060366003190112610208576004356001600160401b0381116108185736602382011215610818578060040135610e1a81611b71565b91610e286040519384611b50565b8183526024602084019260051b8201019036821161052c57602401915b818310610fe957505050602435906001600160401b0382116108d757366023830112156108d757816004013591610e7b83611b71565b92610e896040519485611b50565b8084526024602085019160051b83010191368311610fe557602401905b828210610fd55750505060443560ff8116810361053057610ec561205c565b610ecf8251611cbe565b92610ed982611f43565b610ee3838361264d565b8693919290845b8651861015610f8257610efd8683611d09565b5115610f64575b610f2d610f118785611d09565b51856001600160601b03610f258a8a611d09565b511691612241565b90898282019283129112908015821691151617610f505760019590950194610eea565b634e487b7160e01b89526011600452602489fd5b88610f6f8787611d09565b526001610f7c878a611d09565b52610f04565b88610f8e8992866123ee565b50604051918291602083016020845282518091526020604085019301915b818110610fba575050500390f35b82511515845285945060209384019390920191600101610fac565b8135815260209182019101610ea6565b8580fd5b82356001600160a01b0381168103610fe557815260209283019201610e45565b50346102085780600319360112610208576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346102085760203660031901126102085760ff60406110889282611071611a24565b168152600560205220541660405191829182611b88565b0390f35b5034611292576040366003190112611292576110a6611a24565b6024356001600160401b0381116112925736602382011215611292578060040135906110d182611b71565b916110df6040519384611b50565b8083526024602084019160051b8301019136831161129257602401905b8282106114fb5750505061110e611fcf565b61111782611f43565b805180156114ec5760ff831691825f52600360205260405f2091835f52600460205260405f209161114782611cbe565b935f5b8381106112d657505060405163de1164bb60e01b8152949250602091508490506004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa928315611287575f936112b5575b506040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316916111df82611b06565b6001600160a01b038581168352602083019182526040516304c1b8eb60e31b815292511660048301525163ffffffff166024820152602081604481855afa908115611287575f91611296575b50611234578480f35b803b156112925761125f935f80946040519687958694859363b66bd98960e01b855260048501611d9b565b03925af1801561128757611274578080808480f35b61128091505f90611b50565b5f5f610752565b6040513d5f823e3d90fd5b5f80fd5b6112af915060203d6020116107ca576107bc8183611b50565b5f61122b565b6112cf91935060203d602011610806576107f78183611b50565b915f6111a7565b6112ea6112e38285611d09565b5183611a44565b50546001600160a01b03166112ff8288611d09565b52867f31fa2e2cd280c9375e13ffcf3d81e2378100186e4058f8d3ddb690b82dcd31f760206113386113318588611d09565b5186611a44565b50546040516001600160a01b039091168152a2867f11a5641322da1dff56a4b66eaac31ffa465295ece907cd163437793b4d009a75604061137c6113318588611d09565b505481516001600160a01b0390911681525f6020820152a281545f198101908111611497576113ab9083611a44565b506113c06113b98386611d09565b5184611a44565b6114ab578181036114be575b505081548015611483575f19016113e38184611a44565b6114ab575f9055825584545f198101908111611497576114066114509187611a44565b905460039190911b1c6001600160a01b031661142c6114258487611d09565b5188611a44565b81546001600160a01b0393841660039290921b91821b9390911b1916919091179055565b8454908115611483576001915f19016114698188611a44565b815490858060a01b039060031b1b1916905586550161114a565b634e487b7160e01b5f52603160045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b634e487b7160e01b5f525f60045260245ffd5b815481546001600160a01b039091166001600160a01b03199182168117835592541690911790555f806113cc565b63796cc52560e01b5f5260045ffd5b81358152602091820191016110fc565b34611292575f366003190112611292576020604051670de0b6b3a76400008152f35b346112925760403660031901126112925760206001600160601b0360406102cf61022a611a34565b346112925760403660031901126112925761156e611a34565b6004355f52600260205260ff60405f2091165f52602052602060405f2054604051908152f35b346112925760203660031901126112925760ff6115af611a24565b165f526003602052602060405f2054604051908152f35b34611292576040366003190112611292576115df611a34565b6004355f52600260205260ff60405f2091165f5260205260405f2080549061160682611b71565b916116146040519384611b50565b8083526020830180925f5260205f205f915b8383106116a5578486604051918291602083019060208452518091526040830191905f5b818110611658575050500390f35b91935091602060608261169760019488516001600160601b036040809263ffffffff815116855263ffffffff6020820151166020860152015116910152565b01940191019184939261164a565b6001602081926116b485611d1d565b815201920192019190611626565b34611292576060366003190112611292576004356001600160a01b038116810361129257602435906044356001600160401b03811161129257611709903690600401611a9d565b9061171261205c565b61171b82611cbe565b9261172583611cbe565b925f5b8181106117595761174b8661108887604051938493604085526040850190611aca565b908382036020850152611aca565b611764818386611cf0565b3560f81c9061177282611f43565b61177c8483611f71565b929092156117ce5782816117966001956117b2948d612241565b916001600160601b036117a9868d611d09565b911690526123ee565b6001600160601b036117c48389611d09565b9116905201611728565b63207f13e360e11b5f5260045ffd5b34611292576060366003190112611292576117f6611a24565b6024356001600160401b03811161129257611815903690600401611a6d565b916044356001600160401b03811161129257611835903690600401611a6d565b909161183f611fcf565b61184881611f43565b84156114ec578482036119365760ff1691825f52600360205260405f20935f5b86811061187157005b806118c361188a6118856001948888611c9a565b611caa565b61189f611898848c88611c9a565b358a611a44565b5080546001600160a01b031660a09290921b6001600160a01b031916919091179055565b857f11a5641322da1dff56a4b66eaac31ffa465295ece907cd163437793b4d009a756118f3611898848c88611c9a565b50848060a01b0390541661190b611885858a8a611c9a565b604080516001600160a01b039390931683526001600160601b0391909116602083015290a201611868565b6343714afd60e01b5f5260045ffd5b346112925760403660031901126112925761195e611a24565b602435906001600160a01b0382168203611292576020918161198261198793611f43565b611f71565b506001600160601b0360405191168152f35b34611292576040366003190112611292576119b2611a24565b60ff60243591165f52600360205260405f208054821015611292576040916119d991611a44565b505481516001600160a01b038216815260a09190911c6020820152f35b346112925760203660031901126112925760209060ff611a14611a24565b165f526001825260405f20548152f35b6004359060ff8216820361129257565b6024359060ff8216820361129257565b8054821015611a59575f5260205f2001905f90565b634e487b7160e01b5f52603260045260245ffd5b9181601f84011215611292578235916001600160401b038311611292576020808501948460051b01011161129257565b9181601f84011215611292578235916001600160401b038311611292576020838186019501011161129257565b90602080835192838152019201905f5b818110611ae75750505090565b82516001600160601b0316845260209384019390920191600101611ada565b604081019081106001600160401b03821117611b2157604052565b634e487b7160e01b5f52604160045260245ffd5b606081019081106001600160401b03821117611b2157604052565b90601f801991011681019081106001600160401b03821117611b2157604052565b6001600160401b038111611b215760051b60200190565b9190602083019260028210156105095752565b602435906001600160601b038216820361129257565b81601f8201121561129257803590611bc882611b71565b92611bd66040519485611b50565b82845260208085019360061b8301019181831161129257602001925b828410611c00575050505090565b6040848303126112925760405190611c1782611b06565b84356001600160a01b03811681036112925782526020850135906001600160601b03821682036112925782602092836040950152815201930192611bf2565b6024359063ffffffff8216820361129257565b6060906003190112611292576004359060243560ff81168103611292579060443563ffffffff811681036112925790565b9190811015611a595760051b0190565b356001600160601b03811681036112925790565b90611cc882611b71565b611cd56040519182611b50565b8281528092611ce6601f1991611b71565b0190602036910137565b90821015611a59570190565b805115611a595760200190565b8051821015611a595760209160051b010190565b90604051611d2a81611b35565b60406001600160601b0382945463ffffffff8116845263ffffffff8160201c166020850152821c16910152565b9190820391821161149757565b9081602091031261129257516001600160a01b03811681036112925790565b90816020910312611292575180151581036112925790565b60809060ff60209394606083019560018060a01b031683521683820152606060408201528451809452019201905f5b818110611dd75750505090565b82516001600160a01b0316845260209384019390920191600101611dca565b906bffffffffffffffffffffffff60401b82549160401b16906bffffffffffffffffffffffff60401b1916179055565b8054600160401b811015611b2157611e4391600182018155611a44565b6114ab578151815460208085015167ffffffff00000000911b1663ffffffff90921667ffffffffffffffff1990911617178155611e8e916001600160601b0390604001511690611df6565b565b60405190611e9d82611b35565b5f6040838281528260208201520152565b90604051611ebb81611b06565b91546001600160a01b038116835260a01c6020830152565b90611edc611e90565b50815f52600260205260405f2060ff82165f5260205260405f205490611f00611e90565b9282611f0c5750505090565b909192505f52600260205260ff60405f2091165f5260205260405f205f19820191821161149757611f40916102c291611a44565b90565b611f5b9060ff165f52600160205260405f2054151590565b15611f6257565b637310cff560e11b5f5260045ffd5b6001600160601b03611fba611fc19493611fc99360405191611f94604084611b50565b6001835260203681850137611fa883611cfc565b6001600160a01b03909116905261264d565b9490611cfc565b511692611cfc565b51151590565b604051638da5cb5b60e01b81526020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115611287575f9161203d575b506001600160a01b0316330361202e57565b63ce98c24b60e01b5f5260045ffd5b612056915060203d602011610806576107f78183611b50565b5f61201c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361208e57565b632c01b20560e21b5f5260045ffd5b5f90805f52600260205260405f2060ff84165f5260205260405f205480155f1461214457505f516020612f165f395f51905f5260406001600160601b0394835f526002602052815f2060ff82165f5260205261211a825f2083519061210182611b35565b63ffffffff431682525f60208301525f85830152611e26565b60ff8251911681525f6020820152a2165f81810391125f82128116905f8313901516176114975790565b908092505f52600260205260405f2060ff84165f5260205260405f20905f1981019081116114975761217591611a44565b50908154916001600160601b038360401c16928315612238576001600160601b03945f516020612f165f395f51905f529260409263ffffffff438116911681036121da5750805473ffffffffffffffffffffffff00000000000000001916905561211a565b815467ffffffff000000001916602082901b67ffffffff00000000161790915561223390855f526002602052835f2060ff84165f52602052835f2084519161222183611b35565b82525f60208301525f85830152611e26565b61211a565b50505050505f90565b9190915f90805f52600260205260405f2060ff85165f5260205260405f205480155f146122f057505f516020612f165f395f51905f5260406001600160601b038095845f526002602052825f2060ff89165f526020526122c4835f208451906122a982611b35565b63ffffffff431682525f602083015284841686830152611e26565b60ff8351981688521695866020820152a216905f82820392128183128116918313901516176114975790565b908092505f52600260205260405f2060ff85165f5260205260405f20905f1981019081116114975761232191611a44565b50908154916001600160601b038360401c16926001600160601b038516908185146123e357855f516020612f165f395f51905f52936001600160601b039763ffffffff6040958a9582431692839116145f1461238757505061238291611df6565b6122c4565b835467ffffffff000000001916602083901b67ffffffff00000000161790935561238292909150875f526002602052855f2060ff8c165f52602052855f20908651926123d284611b35565b83525f602084015286830152611e26565b505050505050505f90565b60ff165f81815260016020526040902080549192915f1981019081116114975761241791611a44565b509080156124b05763ffffffff61243c8354926001600160601b038460401c16612ecc565b93849243831692168203612455575050611f4091611df6565b835467ffffffff000000001916602083901b67ffffffff000000001617909355611f40929091505f52600160205260405f206040519161249483611b35565b82525f60208301526001600160601b0384166040830152611e26565b506001600160601b0391505460401c1690565b602081830312611292578051906001600160401b03821161129257019080601f83011215611292578151906124f782611b71565b926125056040519485611b50565b82845260208085019360051b820101908282116112925760208101935b82851061253157505050505090565b84516001600160401b03811161129257820184603f820112156112925760208101519061255d82611b71565b9161256b6040519384611b50565b8083526020808085019260051b840101019187831161129257604001905b8282106125a157505050815260209485019401612522565b8151815260209182019101612589565b90602080835192838152019201905f5b8181106125ce5750505090565b82516001600160a01b03168452602093840193909201916001016125c1565b90602082549182815201915f5260205f20905f5b81811061260e5750505090565b82546001600160a01b0316845260209093019260019283019201612601565b906001600160601b03809116911601906001600160601b03821161149757565b6126578251611cbe565b60ff6126638451611cbe565b92165f8181526003602052604090208054919591908161268281611b71565b916126906040519384611b50565b81835260208301905f5260205f205f915b8383106129fe5750505050865f52600560205260ff60405f20541660028110156105095760010361295a57865f52600660205263ffffffff6126e98160405f20541643612a1b565b60405163de1164bb60e01b81529116906020816004817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115611287575f916127a091839161293b575b506040519061274d82611b06565b6001600160a01b03908116825260208083018d81528d8652600491829052604080872090516315d5962560e11b81529451909316918401919091525163ffffffff1660248301529093849283926127c691565b60a060448501526127b460a485018e6125b1565b848103600319016064860152906125ed565b608483019190915203817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115611287575f91612919575b50925b5f5b875181101561290c575f5b8481106128615750806001600160601b0361283760019389611d09565b51168a5f525f6020526001600160601b0360405f205416111561285a828a611d09565b520161280f565b61286b8185611d09565b51906128818161287b858a611d09565b51611d09565b51612891575b600191500161281a565b6001600160601b0360206128a98361287b878c611d09565b519301511691828102928184041490151715611497576128f16001600160601b03670de0b6b3a764000060019404166001600160601b036128ea868c611d09565b511661262d565b6001600160601b03612903858b611d09565b91169052612887565b5095505050509092509190565b61293591503d805f833e61292d8183611b50565b8101906124c3565b5f61280a565b612954915060203d602011610806576107f78183611b50565b5f61273f565b865f5260046020526129a15f6040812060405180938192637870733b60e11b83526040600484015261298f604484018d6125b1565b838103600319016024850152906125ed565b03817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115611287575f916129e4575b509261280d565b6129f891503d805f833e61292d8183611b50565b5f6129dd565b600160208192612a0d85611eae565b8152019201920191906126a1565b9190820180921161149757565b8151156114ec5760ff8251911691825f52600360205260405f2054926020612a508486612a1b565b11611936575f925b808410612a66575050505050565b90919293945f5b612a778688612a1b565b811015612aca57835f526003602052612a938160405f20611a44565b50546001600160a01b0390811690612aab8888611d09565b51511614612abb57600101612a6d565b637b74340b60e01b5f5260045ffd5b509493929190926001600160601b036020612ae58386611d09565b5101511615612c4f57815f52600360205260405f20612b048285611d09565b51908054600160401b811015611b2157612b2391600182018155611a44565b6114ab5781516020929092015160a01b6001600160a01b0319166001600160a01b03929092169190911790555f828152600460205260409020906001600160a01b03612b6f8286611d09565b515116825490600160401b821015611b215761142c8260019586612b9595018155611a44565b827f10565e56cacbf32eca267945f054fec02e59750032d113d3302182ad967f54046020848060a01b03612bc98589611d09565b515116604051908152a2827f11a5641322da1dff56a4b66eaac31ffa465295ece907cd163437793b4d009a75838060a01b03612c058488611d09565b5151166001600160601b036020612c1c868a611d09565b510151604080516001600160a01b0394909416845291166001600160601b03166020830152819081010390a20192612a58565b637257125160e01b5f5260045ffd5b602060ff7f26eecff2b70b0a71104ff4d940ba7162d23a95c248771fc487a7be17a596b3cf921692835f525f82526001600160601b0360405f20911690816001600160601b0319825416179055604051908152a2565b63ffffffff808251169216918210612ce3576020015163ffffffff168015918215612cf2575b505015612ce357565b631391e11b60e21b5f5260045ffd5b1090505f80612cda565b60ff1690815f52600560205260ff60405f205416600281101561050957600103612d78575f91825260066020908152604092839020805463ffffffff93841663ffffffff1982168117909255845193168352908201527f28d7358b79f02d21b8b7e17aefc4185a64308aa37406fa5befc05b91932c39c79190a1565b63a3be258360e01b5f5260045ffd5b929190835f52600260205260405f2060ff82165f5260205260405f2054805b612e6b5760405162461bcd60e51b815260206004820152608160248201527f5374616b6552656769737472792e5f6765745374616b65557064617465496e6460448201527f6578466f724f70657261746f724174426c6f636b4e756d6265723a206e6f207360648201527f74616b652075706461746520666f756e6420666f72206f70657261746f72496460848201527f20616e642071756f72756d4e756d62657220617420626c6f636b206e756d626560a4820152603960f91b60c482015260e490fd5b845f52600260205260405f2060ff83165f5260205260405f205f1982019082821161149757612e9f8263ffffffff92611a44565b50541663ffffffff85161015612ebf57508015611497575f190180612da6565b63ffffffff169450505050565b905f811215612f0157600160ff1b8114611497576001600160601b0380915f03169116036001600160601b0381116114975790565b906001600160601b03611f4092169061262d56fe2f527d527e95d8fe40aec55377743bb779087da3f6d0d08f12e36444da62327da2646970667358221220dc5e9d6a71f63ac5a1cd8867b70b67edca6dc7d7b4e702f1dd922dba31d3652a64736f6c634300081b0033","sourceMap":"1372:30589:111:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1186:2:112;1372:30589:111;1186:2:112;;;1372:30589:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;27023:153:111;1372:30589;;27070:105;1372:30589;;;;:::i;:::-;;;;;;;;27023:20;1372:30589;;;;;;-1:-1:-1;1372:30589:111;;;;-1:-1:-1;1372:30589:111;27070:105;;:::i;:::-;27023:153;;:::i;:::-;1372:30589;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1372:30589:111;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1372:30589:111;;;;-1:-1:-1;;;;;1372:30589:111;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;27787:20;1372:30589;;;27787:46;1372:30589;-1:-1:-1;1372:30589:111;;;27905:11;1372:30589;27787:53;1372:30589;-1:-1:-1;1372:30589:111;;;27787:53;;:::i;:::-;1372:30589;;:::i;:::-;27905:11;;;:::i;:::-;27934:25;1372:30589;;;;;;;;;;;;;;;-1:-1:-1;;1372:30589:111;;;;8798:16;1372:30589;;:::i;:::-;;;:::i;:::-;1567:100;;;:::i;:::-;1758:12;;;:::i;:::-;8798:16;:::i;:::-;1372:30589;;;;;;;;;;;;;;;;;1387:46:112;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;;27410:83;1372:30589;;;:::i;:::-;27410:83;;:::i;:::-;1372:30589;;;;;;;;;;;;;;;-1:-1:-1;;1372:30589:111;;;;;;;:::i;:::-;;;;;28420:18;1372:30589;;;;;;;;28420:18;1372:30589;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;28420:77:111;;;;:::i;1372:30589::-;-1:-1:-1;;;1372:30589:111;;;;;;;;;;;;;;;-1:-1:-1;;1372:30589:111;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;:::i;:::-;1455:106;;:::i;:::-;7734:27;;1372:30589;;-1:-1:-1;1372:30589:111;24230:18;1372:30589;;;-1:-1:-1;1372:30589:111;;24230:44;;24127:154;;7734:27;1372:30589;;7828:15;;7894:12;7828:15;;;:::i;:::-;7894:12;;:::i;:::-;1372:30589;;;;;;30560:18;1372:30589;;;;;;;;;;-1:-1:-1;;1372:30589:111;7945:45;1372:30589;;;;;;;;;;;;;30620:24;1372:30589;7945:45;8035:15;1372:30589;;30620:24;;;8035:15;:::i;:::-;1372:30589;;7945:45;1372:30589;;8062:213;1372:30589;;;;;;;;;:::i;:::-;;8169:12;1372:30589;;;8113:152;1372:30589;8113:152;;1372:30589;8113:152;1372:30589;8113:152;;1372:30589;8062:213;:::i;1372:30589::-;;;;-1:-1:-1;1372:30589:111;;;;;-1:-1:-1;1372:30589:111;;-1:-1:-1;;;1372:30589:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;1630:53:112;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;;;-1:-1:-1;;1372:30589:111;;;;-1:-1:-1;;;;;1372:30589:111;;;29101:11;1372:30589;29000:39;1372:30589;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;29000:39;:::i;1372:30589::-;;;;;;;-1:-1:-1;;1372:30589:111;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;:::i;:::-;1567:100;;;:::i;:::-;1758:12;;;:::i;:::-;9075:15;;;;:::i;:::-;1372:30589;;;;-1:-1:-1;;;9174:25:111;;1372:30589;;;;;9174:19;-1:-1:-1;;;;;1372:30589:111;9174:25;;;;;;;;;;;1372:30589;-1:-1:-1;1372:30589:111;;9213:17;-1:-1:-1;;;;;1372:30589:111;;;;;:::i;:::-;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;9245:30;;1372:30589;;;;;-1:-1:-1;;;9213:63:111;;1372:30589;;;;;;9213:63;;1372:30589;;;;;;;;;9213:63;;;;;;;;;;;;;;;1372:30589;9209:491;;;1372:30589;;;9209:491;9329:31;;;:::i;:::-;9379:13;;9394:18;;;;;;9513:176;;;;;;;;;;;1372:30589;;;;;;;;;;;;;;;;9513:176;;1372:30589;9513:176;;;:::i;:::-;;;;;;;;;;;9374:126;9209:491;;;1372:30589;;;9513:176;;;;;:::i;:::-;1372:30589;;9513:176;;;;;1372:30589;;;;;;;;;9414:3;1372:30589;;-1:-1:-1;;;;;9458:18:111;1372:30589;9458:18;;:::i;:::-;;1372:30589;;9437:48;;;;:::i;:::-;1372:30589;;9379:13;;9213:63;;;;1372:30589;9213:63;1372:30589;9213:63;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;1372:30589;;;;;;;;;9174:25;;;;;1372:30589;9174:25;1372:30589;9174:25;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;1372:30589;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1372:30589:111;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1372:30589:111;;;;;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;:::i;:::-;1455:106;;;;;:::i;:::-;4077:13;4092:24;;;;;;1372:30589;;;4118:3;4164:16;4605:49;4164:16;1372:30589;4164:16;;;;:::i;:::-;;1372:30589;;4214:12;;;:::i;:::-;4352:155;;;;:::i;:::-;4605:49;;:::i;:::-;;1372:30589;4077:13;;1372:30589;;;;;;;;;;;-1:-1:-1;;1372:30589:111;;;;8533:12;1372:30589;;:::i;:::-;;;:::i;:::-;1567:100;;;:::i;:::-;1758:12;;;:::i;:::-;8533;:::i;1372:30589::-;;;;;;;-1:-1:-1;;1372:30589:111;;;;;28704:39;1372:30589;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;28704:39;:::i;1372:30589::-;;;;;;;-1:-1:-1;;1372:30589:111;;;;;25049:35;1372:30589;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;25049:14;1372:30589;;;;;;;25049:35;:::i;:::-;1372:30589;;:::i;:::-;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1372:30589:111;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;26753:20;1372:30589;;;26753:46;1372:30589;-1:-1:-1;1372:30589:111;;;;;26753:53;1372:30589;-1:-1:-1;1372:30589:111;;;26753:53;;:::i;1372:30589::-;;;;;;;-1:-1:-1;;1372:30589:111;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2728:69:112;;;;;1372:30589:111;2728:69:112;;;;:::i;:::-;1372:30589:111;;;;;;;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;-1:-1:-1;;1372:30589:111;;;;;;;;;;;:::i;:::-;;;;3096:77:112;1372:30589:111;;;;;;;;;;;;;;;;;;-1:-1:-1;;1372:30589:111;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1372:30589:111;;;;29440:13;29455:24;;;;;;1372:30589;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1372:30589:111;;;;;;;;;29629:18;1372:30589;;;29481:3;29527:16;;;;;:::i;:::-;;1372:30589;;29577:12;;;:::i;:::-;1372:30589;;;29629:18;1372:30589;;;;;;;;;;;;;;;;;;;29629:68;1372:30589;;;;;29629:18;1372:30589;;;;;;29837:13;29852:10;;;;;;29832:321;29481:3;;;29629:18;1372:30589;29440:13;;29864:3;1372:30589;;;29629:18;1372:30589;;;;;29945:10;;;;:::i;:::-;-1:-1:-1;;1372:30589:111;;;;;;;;29912:48;;;1372:30589;29912:48;;:::i;:::-;1372:30589;;;29912:105;;29887:252;;29629:18;1372:30589;29837:13;;29887:252;30078:10;;;;;:::i;:::-;-1:-1:-1;;1372:30589:111;;;;;;;;;29629:18;1372:30589;;30058:35;;;;:::i;:::-;1372:30589;30115:5;;;;;1372:30589;-1:-1:-1;;;1372:30589:111;;;;;;;;;-1:-1:-1;;;1372:30589:111;;;;;;;;;-1:-1:-1;;;1372:30589:111;;;;;;-1:-1:-1;;;1372:30589:111;;;;;;;;;;;;;;;;;;;;;1186:2:112;1372:30589:111;;;;;;;;;;;;;-1:-1:-1;;1372:30589:111;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;:::i;:::-;1455:106;;:::i;:::-;6955:27;;1372:30589;;-1:-1:-1;1372:30589:111;24230:18;1372:30589;;;-1:-1:-1;1372:30589:111;;24230:44;;24127:154;;6955:27;1372:30589;;7049:15;;;7115:12;7049:15;1372:30589;7049:15;;:::i;7115:12::-;1372:30589;;;;30560:18;1372:30589;;;;;;;;;;;;30620:24;1372:30589;;30620:24;;;;;:::i;:::-;;;;1372:30589;;;;;7223:213;1372:30589;;;;;;;;;:::i;:::-;-1:-1:-1;;;1372:30589:111;;;;;;;;;;;;;;;;;;;;1769:65:112;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;;;-1:-1:-1;;1372:30589:111;;;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:106;;:::i;:::-;4962:28;1372:30589;;4962:28;:::i;:::-;5390:12;;;;:::i;:::-;5647:52;;;;:::i;:::-;5710:26;;;;;;5990:3;1372:30589;;5968:20;;;;;6014:19;;;;:::i;:::-;1372:30589;;6009:126;;5990:3;6304:173;6361:14;;;;:::i;:::-;1372:30589;6447:15;-1:-1:-1;;;;;6447:15:111;;;;:::i;:::-;1372:30589;;6304:173;;:::i;:::-;1372:30589;;;;;;;;;;;;;;;;;;;;;;;;;;;5953:13;;1372:30589;-1:-1:-1;;;1372:30589:111;;;;;;;;6009:126;6053:19;;;;;:::i;:::-;1372:30589;;6090:30;;;;:::i;:::-;1372:30589;6009:126;;5968:20;;6597:54;5968:20;;;6597:54;:::i;:::-;;1372:30589;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1372:30589:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1511:43:112;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;;;-1:-1:-1;;1372:30589:111;;;;;;;;;;;:::i;:::-;;;;2909:86:112;1372:30589:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;1372:30589:111;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1567:100;;;;;:::i;:::-;1758:12;;;:::i;:::-;1372:30589;;9987:18;;1372:30589;;;;;;;;;10084:14;1372:30589;;;;;;;;;;;;;;;10249:31;;;;:::i;:::-;10296:13;1372:30589;10311:18;;;;;;-1:-1:-1;;1372:30589:111;;-1:-1:-1;;;11116:25:111;;1372:30589;;-1:-1:-1;1372:30589:111;;-1:-1:-1;1372:30589:111;;-1:-1:-1;1372:30589:111;;11116:19;-1:-1:-1;;;;;1372:30589:111;11116:25;;;;;;;1372:30589;11116:25;;;10291:801;-1:-1:-1;1372:30589:111;;11155:17;-1:-1:-1;;;;;1372:30589:111;;;;;:::i;:::-;-1:-1:-1;;;;;1372:30589:111;;;;;;11187:30;;1372:30589;;;;;-1:-1:-1;;;11155:63:111;;1372:30589;;;;11155:63;;1372:30589;;;;;;;;;11155:63;;;;;;;;;;;1372:30589;11155:63;;;10291:801;11151:279;;;1372:30589;;;11151:279;11234:185;;;;;;1372:30589;;;;;;;;;;;;;;;;11234:185;;1372:30589;11234:185;;;:::i;:::-;;;;;;;;;;;11151:279;;;1372:30589;;;11234:185;;;;1372:30589;11234:185;;:::i;:::-;1372:30589;11234:185;;;;1372:30589;;;;;;;;;11234:185;1372:30589;;;11155:63;;;;1372:30589;11155:63;1372:30589;11155:63;;;;;;;:::i;:::-;;;;11116:25;;;;;1372:30589;11116:25;1372:30589;11116:25;;;;;;;:::i;:::-;;;;;10331:3;10375:35;10391:18;;;;:::i;:::-;1372:30589;10375:35;;:::i;:::-;-1:-1:-1;1372:30589:111;-1:-1:-1;;;;;1372:30589:111;10350:69;;;;:::i;:::-;1372:30589;10511:18;10438:115;1372:30589;10495:35;10511:18;;;;:::i;:::-;1372:30589;10495:35;;:::i;:::-;-1:-1:-1;1372:30589:111;;;-1:-1:-1;;;;;1372:30589:111;;;;;10438:115;10645:18;10572:118;1372:30589;10629:35;10645:18;;;;:::i;10629:35::-;-1:-1:-1;1372:30589:111;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;10572:118;1372:30589;;-1:-1:-1;;1372:30589:111;;;;;;;10837:43;;;;:::i;:::-;10815:18;10799:35;10815:18;;;;:::i;:::-;1372:30589;10799:35;;:::i;:::-;1372:30589;;;;;;;10331:3;1372:30589;;;;;;;;-1:-1:-1;;1372:30589:111;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;1372:30589:111;;;;;;;10988:53;10929:112;10988:53;;;:::i;:::-;1372:30589;;10084:14;1372:30589;;;;;-1:-1:-1;;;;;1372:30589:111;10929:40;10950:18;;;;:::i;:::-;1372:30589;10929:40;;:::i;:::-;1372:30589;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;;;;;;;;;;;;;;10929:112;1372:30589;;;;;;;10878:1;;-1:-1:-1;;1372:30589:111;;;;;:::i;:::-;;;;;;;;;;10084:14;1372:30589;;;;;;;;;10296:13;;1372:30589;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1372:30589:111;;;-1:-1:-1;;;;;;1372:30589:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1372:30589:111;;;;;;;1041:4:112;1372:30589:111;;;;;;;;;-1:-1:-1;;1372:30589:111;;;;;-1:-1:-1;;;;;1372:30589:111;25883:46;1372:30589;;:::i;:::-;;;;;;-1:-1:-1;;1372:30589:111;;;;;;:::i;:::-;;;;;25370:20;1372:30589;;;;;;25370:46;1372:30589;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1372:30589:111;;;;;;;:::i;:::-;;;;24817:14;1372:30589;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1372:30589:111;;;;;;:::i;:::-;;;;;25620:20;1372:30589;;;;;;25620:46;1372:30589;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;1372:30589:111;;;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;:::i;:::-;1455:106;;;:::i;:::-;2584:34;;;:::i;:::-;2658;;;;:::i;:::-;2707:13;1372:30589;2722:24;;;;;;1372:30589;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;2748:3::-;2794:16;;;;;:::i;:::-;;1372:30589;;2844:12;;;;:::i;:::-;3071:50;;;;:::i;:::-;1372:30589;;;;;;3269:166;;;1372:30589;3269:166;3593:49;3269:166;;;:::i;:::-;3531:31;-1:-1:-1;;;;;3531:31:111;;;;:::i;:::-;1372:30589;;;;3593:49;:::i;:::-;-1:-1:-1;;;;;3576:66:111;;;;:::i;:::-;1372:30589;;;;;2707:13;;1372:30589;;;;;;;;;;;;;;;-1:-1:-1;;1372:30589:111;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;:::i;:::-;1567:100;;;;:::i;:::-;1758:12;;;:::i;:::-;11760:13;;1372:30589;;11816:34;;;1372:30589;;;;;;;;11933:14;1372:30589;;;;;11977:13;1372:30589;11992:13;;;;;;1372:30589;12007:3;12134:17;12085:66;12134:17;;1372:30589;12134:17;;;;:::i;:::-;;:::i;:::-;12085:35;12101:18;;;;;:::i;:::-;1372:30589;12085:35;;:::i;:::-;-1:-1:-1;1372:30589:111;;-1:-1:-1;;;;;1372:30589:111;;;;;;-1:-1:-1;;;;;;1372:30589:111;;;;;;;;12085:66;12243:18;12170:134;12227:35;12243:18;;;;;:::i;12227:35::-;1372:30589;;;;;;;;;12273:17;;;;;;:::i;:::-;1372:30589;;;-1:-1:-1;;;;;1372:30589:111;;;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;12170:134;1372:30589;11977:13;;1372:30589;;;;;;;;;;;;;;;-1:-1:-1;;1372:30589:111;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;1758:12;;;24586:50;1758:12;;:::i;:::-;24586:50;:::i;:::-;1372:30589;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;;;-1:-1:-1;;1372:30589:111;;;;;;:::i;:::-;;;;;;;;2547:69:112;1372:30589:111;;;;;;;2547:69:112;;;;;1372:30589:111;2547:69:112;;;;:::i;:::-;-1:-1:-1;1372:30589:111;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1372:30589:111;;;;;;;;;:::i;:::-;;;;28221:18;1372:30589;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;1372:30589:111;;-1:-1:-1;1372:30589:111;;;-1:-1:-1;1372:30589:111;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;1372:30589:111;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;:::o;:::-;;;;-1:-1:-1;1372:30589:111;;;;;-1:-1:-1;1372:30589:111;;;;;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;:::o;:::-;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;;;;1372:30589:111;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1372:30589:111;;;;;;;-1:-1:-1;;;1372:30589:111;;;;;:::o;:::-;;;-1:-1:-1;;;1372:30589:111;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1372:30589:111;;;;;;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;:::i;:::-;:::o;:::-;;;;;;;:::i;:::-;-1:-1:-1;1372:30589:111;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;:::o;26019:517::-;;1372:30589;;:::i;:::-;;;-1:-1:-1;1372:30589:111;26186:20;1372:30589;;;-1:-1:-1;1372:30589:111;;;;-1:-1:-1;1372:30589:111;;;;-1:-1:-1;1372:30589:111;;;;;:::i;:::-;26301:18;;;;26335:26;;;;:::o;26297:233::-;1372:30589;;;;-1:-1:-1;1372:30589:111;26186:20;1372:30589;;;;-1:-1:-1;1372:30589:111;26414:46;1372:30589;-1:-1:-1;1372:30589:111;;;;-1:-1:-1;1372:30589:111;;;;;;;;;;;26414:65;;;;:::i;1372:30589::-;26493:26;:::o;31808:151::-;31902:27;31808:151;1372:30589;;-1:-1:-1;1372:30589:111;24230:18;1372:30589;;;-1:-1:-1;1372:30589:111;;24230:44;;24127:154;;31902:27;1372:30589;;;31808:151::o;1372:30589::-;;;;;;;;;23635:420;-1:-1:-1;;;;;23946:52:111;24016:10;23635:420;;24028:19;23635:420;1372:30589;;;;;;;:::i;:::-;23829:1;1372:30589;;;;;;;;23841:23;;;:::i;:::-;-1:-1:-1;;;;;1372:30589:111;;;;;23946:52;:::i;:::-;24016:10;;;:::i;:::-;1372:30589;;24028:19;;:::i;:::-;1372:30589;;;23635:420;:::o;31579:223::-;1372:30589;;-1:-1:-1;;;31688:45:111;;;1372:30589;31688:45;1372:30589;31704:19;-1:-1:-1;;;;;1372:30589:111;31688:45;;;;;;;-1:-1:-1;31688:45:111;;;31579:223;-1:-1:-1;;;;;;1372:30589:111;31674:10;:59;1372:30589;;31579:223::o;1372:30589::-;;;;-1:-1:-1;1372:30589:111;31688:45;-1:-1:-1;1372:30589:111;31688:45;;;;;;;;;;;;;;:::i;:::-;;;;31411:162;31510:19;-1:-1:-1;;;;;1372:30589:111;31488:10;:42;1372:30589;;31411:162::o;1372:30589::-;;;;;;;;;13700:1970;1372:30589;;;;;13909:20;1372:30589;;;;;;;;-1:-1:-1;1372:30589:111;;;;-1:-1:-1;1372:30589:111;;13977:18;;13973:1509;13977:18;;;1372:30589;-1:-1:-1;;;;;;;;;;;1372:30589:111;-1:-1:-1;;;;;1372:30589:111;;;;13909:20;1372:30589;;;;;;;;-1:-1:-1;1372:30589:111;;;14072:258;1372:30589;-1:-1:-1;1372:30589:111;;;;;;;:::i;:::-;;14201:12;1372:30589;;;;;14141:175;;1372:30589;;14141:175;;;1372:30589;14072:258;:::i;:::-;1372:30589;;;;;;;;;;;;15542:55;1372:30589;;;;;;;;;;;;;;;;;;;;;;13700:1970;:::o;13973:1509::-;1372:30589;;;;;;13909:20;1372:30589;;;;;;;;-1:-1:-1;1372:30589:111;;;;-1:-1:-1;1372:30589:111;;;;;;;;;;;14485:65;;;:::i;:::-;1372:30589;;;;;-1:-1:-1;;;;;1372:30589:111;;;;14675:21;;;14671:68;;-1:-1:-1;;;;;1372:30589:111;-1:-1:-1;;;;;;;;;;;15542:55:111;1372:30589;;;15003:12;1372:30589;;;;14964:52;;1372:30589;;-1:-1:-1;1372:30589:111;;-1:-1:-1;;1372:30589:111;;;13973:1509;;14960:512;1372:30589;;-1:-1:-1;;1372:30589:111;;;;;;;;;;;15175:282;;1372:30589;;;13909:20;1372:30589;;;;;;;;-1:-1:-1;1372:30589:111;;;;-1:-1:-1;1372:30589:111;;;;;;;:::i;:::-;;;;;15248:191;;1372:30589;;15248:191;;;1372:30589;15175:282;:::i;:::-;13973:1509;;14671:68;14716:8;;;;;1372:30589;14716:8;:::o;13700:1970::-;;;;1372:30589;;;;;13909:20;1372:30589;;;;;;;;-1:-1:-1;1372:30589:111;;;;-1:-1:-1;1372:30589:111;;13977:18;;13973:1509;13977:18;;;1372:30589;-1:-1:-1;;;;;;;;;;;1372:30589:111;-1:-1:-1;;;;;1372:30589:111;;;;;13909:20;1372:30589;;;;;;;;-1:-1:-1;1372:30589:111;;;14072:258;1372:30589;-1:-1:-1;1372:30589:111;;;;;;;:::i;:::-;;14201:12;1372:30589;;;;;14141:175;;1372:30589;;;;14141:175;;;1372:30589;14072:258;:::i;:::-;1372:30589;;;;;;;;;;;;;;15542:55;1372:30589;;;;;;;;;;;;;;;;;;;;;;13700:1970;:::o;13973:1509::-;1372:30589;;;;;;13909:20;1372:30589;;;;;;;;-1:-1:-1;1372:30589:111;;;;-1:-1:-1;1372:30589:111;;;;;;;;;;;14485:65;;;:::i;:::-;1372:30589;;;;;-1:-1:-1;;;;;1372:30589:111;;;;;-1:-1:-1;;;;;1372:30589:111;;14675:21;;;;14671:68;;15003:12;-1:-1:-1;;;;;;;;;;;15003:12:111;-1:-1:-1;;;;;15003:12:111;1372:30589;;15003:12;;;;;1372:30589;;;;;14964:52;14960:512;1372:30589;;;15036:27;;;;;:::i;:::-;13973:1509;;14960:512;1372:30589;;-1:-1:-1;;1372:30589:111;;;;;;;;;;;15175:282;;15102:55;;-1:-1:-1;1372:30589:111;;;13909:20;1372:30589;;;;;;;;-1:-1:-1;1372:30589:111;;;;-1:-1:-1;1372:30589:111;;;;;;;;:::i;:::-;;;;;15248:191;;1372:30589;15248:191;;;1372:30589;15175:282;:::i;14671:68::-;14716:8;;;;;;;1372:30589;14716:8;:::o;15814:1332::-;1372:30589;;;;;;16014:18;1372:30589;;;;;;;;;;-1:-1:-1;;1372:30589:111;;;;;;;16101:51;;;:::i;:::-;16214:15;;;;16210:74;;1372:30589;16397:46;1372:30589;;;-1:-1:-1;;;;;1372:30589:111;;;;16397:46;:::i;:::-;16693:12;;;;1372:30589;;;;16649:57;;1372:30589;;16722:32;;;;;:::i;16645:469::-;1372:30589;;-1:-1:-1;;1372:30589:111;;;;;;;;;;;16859:244;;16785:60;;-1:-1:-1;1372:30589:111;;16014:18;1372:30589;;;;;;;;;;;:::i;:::-;;;;;16914:175;;1372:30589;-1:-1:-1;;;;;1372:30589:111;;;16914:175;;1372:30589;16859:244;:::i;16210:74::-;1372:30589;-1:-1:-1;;;;;1372:30589:111;;;;;;16245:28;:::o;1372:30589::-;;;;;;;;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1372:30589:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1372:30589:111;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1372:30589:111;;-1:-1:-1;1372:30589:111;;-1:-1:-1;1372:30589:111;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;-1:-1:-1;;;;;1372:30589:111;;;;:::o;21490:2139::-;21696:30;1372:30589;;21696:30;:::i;:::-;1372:30589;21769:28;1372:30589;;21769:28;:::i;:::-;1372:30589;;-1:-1:-1;1372:30589:111;;;24817:14;1372:30589;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;1372:30589:111;;-1:-1:-1;1372:30589:111;-1:-1:-1;1372:30589:111;;;;;;;21960:33;;;;1372:30589;-1:-1:-1;1372:30589:111;22008:18;1372:30589;;;;-1:-1:-1;1372:30589:111;;;;;;;;;;22008:81;1372:30589;;;-1:-1:-1;1372:30589:111;20727:32;1372:30589;;;20712:61;1372:30589;;-1:-1:-1;1372:30589:111;;;20712:12;:61;:::i;:::-;1372:30589;;-1:-1:-1;;;20890:25:111;;1372:30589;;;;;20890:25;1372:30589;20890:19;-1:-1:-1;;;;;1372:30589:111;20890:25;;;;;;;-1:-1:-1;20890:25:111;1372:30589;20890:25;;;;;22004:474;1372:30589;;;;;;;:::i;:::-;-1:-1:-1;;;;;1372:30589:111;;;;;;20878:52;;;1372:30589;;;;;;20890:25;1372:30589;;;;;;;;;;-1:-1:-1;;;20822:213:111;;1372:30589;;;;;20822:213;;;1372:30589;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1372:30589:111;;;;;;;:::i;:::-;;;;;;;;20822:213;1372:30589;20822:17;-1:-1:-1;;;;;1372:30589:111;20822:213;;;;;;;-1:-1:-1;20822:213:111;;;22004:474;22181:71;22004:474;;-1:-1:-1;22641:9:111;1372:30589;;22613:26;;;;;-1:-1:-1;22831:25:111;;;;;;23512:16;;-1:-1:-1;;;;;23512:16:111;1372:30589;23512:16;;;:::i;:::-;1372:30589;;;-1:-1:-1;1372:30589:111;-1:-1:-1;1372:30589:111;;-1:-1:-1;;;;;1372:30589:111;-1:-1:-1;1372:30589:111;;;-1:-1:-1;23512:55:111;23484:83;;;;:::i;:::-;1372:30589;;22592:19;;22858:12;22983:32;;;;:::i;:::-;;23108:23;:35;:23;;;;;:::i;:::-;;:35;:::i;:::-;1372:30589;23104:278;;22858:12;1372:30589;22858:12;;1372:30589;22807:22;;23104:278;-1:-1:-1;;;;;1372:30589:111;23223:35;:23;;;;;:::i;:35::-;1372:30589;23261:32;;1372:30589;;;;;;;;;;;;;;;;;23171:192;-1:-1:-1;;;;;1041:4:112;1372:30589:111;;;;-1:-1:-1;;;;;23171:192:111;;;;:::i;:::-;1372:30589;;23171:192;:::i;:::-;-1:-1:-1;;;;;23171:192:111;;;;:::i;:::-;1372:30589;;;;23104:278;;22613:26;;;;;;;;;;23588:34;21490:2139;:::o;20822:213::-;;;;;;-1:-1:-1;20822:213:111;;;;;;:::i;:::-;;;;;:::i;:::-;;;;20890:25;;;;1372:30589;20890:25;1372:30589;20890:25;;;;;;;:::i;:::-;;;;22004:474;1372:30589;-1:-1:-1;1372:30589:111;22433:19;1372:30589;;;-1:-1:-1;1372:30589:111;;;;;;;;;;;;22392:75;;1372:30589;22433:19;22392:75;;1372:30589;;;;;;;:::i;:::-;;;;-1:-1:-1;;1372:30589:111;;;;;;;:::i;:::-;22392:75;1372:30589;22392:10;-1:-1:-1;;;;;1372:30589:111;22392:75;;;;;;;-1:-1:-1;22392:75:111;;;22004:474;22359:108;22004:474;;;22392:75;;;;;;-1:-1:-1;22392:75:111;;;;;;:::i;:::-;;;;1372:30589;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;17688:1379::-;1372:30589;;17826:26;1372:30589;;;;;;;;;17851:1;1372:30589;17972:14;1372:30589;;;17851:1;1372:30589;;18038:34;1372:30589;18038:34;;;;:::i;:::-;:66;1372:30589;;17851:1;18164:897;18184:18;;;;;;17688:1379;;;;;:::o;18204:3::-;18347:13;;;;;17851:1;18391:3;18367:21;;;;:::i;:::-;18362:27;;;;;1372:30589;17851:1;1372:30589;17972:14;1372:30589;;18443:31;1372:30589;;17851:1;1372:30589;18443:31;:::i;:::-;-1:-1:-1;1372:30589:111;-1:-1:-1;;;;;1372:30589:111;;;;18487:18;;;;:::i;:::-;;1372:30589;;18443:71;1372:30589;;;;18347:13;;1372:30589;;;;17851:1;1372:30589;18752:19;17851:1;1372:30589;18362:27;;;;;;;;-1:-1:-1;;;;;1372:30589:111;18614:18;;;;:::i;:::-;;:29;1372:30589;;18614:33;1372:30589;;;17851:1;1372:30589;17972:14;1372:30589;;;17851:1;1372:30589;18719:18;;;;:::i;:::-;;1372:30589;;;-1:-1:-1;;;1372:30589:111;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;;1372:30589:111;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;17851:1;1372:30589;;;18752:19;1372:30589;;;;;;-1:-1:-1;;;;;18791:18:111;1372:30589;18791:18;;:::i;:::-;;1372:30589;;;;;-1:-1:-1;;;1372:30589:111;;;;;;;;;;;;;;;;:::i;:::-;;18838:64;1372:30589;;;;;;18874:18;;;;:::i;:::-;;1372:30589;;;;;;;18838:64;1372:30589;18921:129;1372:30589;;;;;18978:18;;;;:::i;:::-;;1372:30589;;-1:-1:-1;;;;;1372:30589:111;19007:18;;;;:::i;:::-;;:29;1372:30589;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;18921:129;;;1372:30589;18169:13;;;1372:30589;;;;17851:1;1372:30589;18752:19;17851:1;1372:30589;13292:223;1372:30589;;13452:56;13292:223;1372:30589;;;13387:21;1372:30589;13387:21;1372:30589;;-1:-1:-1;;;;;1372:30589:111;13387:21;1372:30589;;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;;;;;13452:56;13292:223::o;19721:656::-;1372:30589;;;;;;;20123:44;;;1372:30589;;20221:33;;1372:30589;;;20221:38;;;:105;;;;19721:656;1372:30589;;;;;19721:656::o;1372:30589::-;;;;-1:-1:-1;1372:30589:111;;-1:-1:-1;1372:30589:111;20221:105;20279:47;;-1:-1:-1;20221:105:111;;;;30929:476;1372:30589;;;;-1:-1:-1;1372:30589:111;31043:18;1372:30589;;;;-1:-1:-1;1372:30589:111;;;;;;;;;31079:45;31043:81;1372:30589;;-1:-1:-1;1372:30589:111;;;31204:32;1372:30589;;;;;;;;;;;;;;;-1:-1:-1;;1372:30589:111;;;;;;;;;;;;;;;;;31340:58;;1372:30589;31340:58;30929:476::o;1372:30589::-;;;;-1:-1:-1;1372:30589:111;;-1:-1:-1;1372:30589:111;12407:879;;;;1372:30589;;;12609:20;1372:30589;;;;;;;;-1:-1:-1;1372:30589:111;;;;-1:-1:-1;1372:30589:111;;12781:256;12806:5;;;1372:30589;;-1:-1:-1;;;13118:161:111;;1372:30589;13118:161;;;1372:30589;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1372:30589:111;;;;13118:161;;;12813:3;1372:30589;;;12609:20;1372:30589;;;;;;;;-1:-1:-1;1372:30589:111;;;;-1:-1:-1;1372:30589:111;;;;;;;;;;;12853:53;;1372:30589;12853:53;;:::i;:::-;1372:30589;;;;;;-1:-1:-1;12853:106:111;12832:195;;12813:3;1372:30589;;;;-1:-1:-1;;1372:30589:111;;12786:18;;12832:195;1372:30589;;;-1:-1:-1;;;;12992:20:111:o;19390:242::-;;1372:30589;19484:9;;1372:30589;;;-1:-1:-1;;;1372:30589:111;;;;-1:-1:-1;;;;;1372:30589:111;;;;;;;;-1:-1:-1;;;;;1372:30589:111;;;;19509:38;:::o;19480:146::-;1372:30589;-1:-1:-1;;;;;19585:30:111;1372:30589;;19585:30;;:::i","linkReferences":{},"immutableReferences":{"45119":[{"start":815,"length":32},{"start":10661,"length":32}],"45123":[{"start":4127,"length":32}],"45127":[{"start":1354,"length":32},{"start":1651,"length":32},{"start":4525,"length":32},{"start":10194,"length":32}],"45131":[{"start":1589,"length":32},{"start":3503,"length":32},{"start":4463,"length":32},{"start":8164,"length":32},{"start":8286,"length":32},{"start":9985,"length":32}]}},"methodIdentifiers":{"MAX_WEIGHING_FUNCTION_LENGTH()":"7c172347","WEIGHTING_DIVISOR()":"5e5a6775","addStrategies(uint8,(address,uint96)[])":"c601527d","allocationManager()":"ca8aa7c7","avsDirectory()":"6b3aa72e","delegation()":"df5cf723","deregisterOperator(bytes32,bytes)":"bd29b8cd","getCurrentStake(bytes32,uint8)":"5401ed27","getCurrentTotalStake(uint8)":"d5eccc05","getLatestStakeUpdate(bytes32,uint8)":"f851e198","getStakeAtBlockNumber(bytes32,uint8,uint32)":"fa28c627","getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)":"f2be94ae","getStakeHistory(bytes32,uint8)":"2cd95940","getStakeHistoryLength(bytes32,uint8)":"4bd26e09","getStakeUpdateAtIndex(uint8,bytes32,uint256)":"ac6bfb03","getStakeUpdateIndexAtBlockNumber(bytes32,uint8,uint32)":"dd9846b9","getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)":"c8294c56","getTotalStakeHistoryLength(uint8)":"0491b41c","getTotalStakeIndicesAtBlockNumber(uint32,bytes)":"81c07502","getTotalStakeUpdateAtIndex(uint8,uint256)":"b6904b78","initializeDelegatedStakeQuorum(uint8,uint96,(address,uint96)[])":"75d4173a","initializeSlashableStakeQuorum(uint8,uint96,uint32,(address,uint96)[])":"cc5a7c20","minimumStakeForQuorum(uint8)":"c46778a5","modifyStrategyParams(uint8,uint256[],uint96[])":"20b66298","registerOperator(address,bytes32,bytes)":"25504777","registryCoordinator()":"6d14a987","removeStrategies(uint8,uint256[])":"5f1f2d77","setMinimumStakeForQuorum(uint8,uint96)":"bc9a40c3","setSlashableStakeLookahead(uint8,uint32)":"e086adb3","slashableStakeLookAheadPerQuorum(uint8)":"9ab4d6ff","stakeTypePerQuorum(uint8)":"697fbd93","strategiesPerQuorum(uint8,uint256)":"9f3ccf65","strategyParams(uint8,uint256)":"08732461","strategyParamsByIndex(uint8,uint256)":"adc804da","strategyParamsLength(uint8)":"3ca5a5f5","updateOperatorsStake(address[],bytes32[],uint8)":"6c3fb4bf","weightOfOperatorForQuorum(uint8,address)":"1f9b74e0"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISlashingRegistryCoordinator\",\"name\":\"_slashingRegistryCoordinator\",\"type\":\"address\"},{\"internalType\":\"contract IDelegationManager\",\"name\":\"_delegationManager\",\"type\":\"address\"},{\"internalType\":\"contract IAVSDirectory\",\"name\":\"_avsDirectory\",\"type\":\"address\"},{\"internalType\":\"contract IAllocationManager\",\"name\":\"_allocationManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BelowMinimumStakeRequirement\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyStakeHistory\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputArrayLengthZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputDuplicateStrategy\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputMultiplierZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBlockNumber\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlySlashingRegistryCoordinator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlySlashingRegistryCoordinatorOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QuorumAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QuorumDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QuorumNotSlashable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"oldLookAheadBlocks\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newLookAheadBlocks\",\"type\":\"uint32\"}],\"name\":\"LookAheadPeriodChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"minimumStake\",\"type\":\"uint96\"}],\"name\":\"MinimumStakeForQuorumUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"name\":\"OperatorStakeUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"QuorumCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum IStakeRegistryTypes.StakeType\",\"name\":\"newStakeType\",\"type\":\"uint8\"}],\"name\":\"StakeTypeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyAddedToQuorum\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"}],\"name\":\"StrategyMultiplierUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyRemovedFromQuorum\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_WEIGHING_FUNCTION_LENGTH\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WEIGHTING_DIVISOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistryTypes.StrategyParams[]\",\"name\":\"_strategyParams\",\"type\":\"tuple[]\"}],\"name\":\"addStrategies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allocationManager\",\"outputs\":[{\"internalType\":\"contract IAllocationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"avsDirectory\",\"outputs\":[{\"internalType\":\"contract IAVSDirectory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegation\",\"outputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"}],\"name\":\"deregisterOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getCurrentStake\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getCurrentTotalStake\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getLatestStakeUpdate\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistryTypes.StakeUpdate\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"}],\"name\":\"getStakeAtBlockNumber\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getStakeAtBlockNumberAndIndex\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getStakeHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistryTypes.StakeUpdate[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getStakeHistoryLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getStakeUpdateAtIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistryTypes.StakeUpdate\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"}],\"name\":\"getStakeUpdateIndexAtBlockNumber\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTotalStakeAtBlockNumberFromIndex\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getTotalStakeHistoryLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"}],\"name\":\"getTotalStakeIndicesAtBlockNumber\",\"outputs\":[{\"internalType\":\"uint32[]\",\"name\":\"\",\"type\":\"uint32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTotalStakeUpdateAtIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistryTypes.StakeUpdate\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"minimumStake\",\"type\":\"uint96\"},{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistryTypes.StrategyParams[]\",\"name\":\"_strategyParams\",\"type\":\"tuple[]\"}],\"name\":\"initializeDelegatedStakeQuorum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"minimumStake\",\"type\":\"uint96\"},{\"internalType\":\"uint32\",\"name\":\"lookAheadPeriod\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistryTypes.StrategyParams[]\",\"name\":\"_strategyParams\",\"type\":\"tuple[]\"}],\"name\":\"initializeSlashableStakeQuorum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"minimumStakeForQuorum\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"strategyIndices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint96[]\",\"name\":\"newMultipliers\",\"type\":\"uint96[]\"}],\"name\":\"modifyStrategyParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"}],\"name\":\"registerOperator\",\"outputs\":[{\"internalType\":\"uint96[]\",\"name\":\"\",\"type\":\"uint96[]\"},{\"internalType\":\"uint96[]\",\"name\":\"\",\"type\":\"uint96[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registryCoordinator\",\"outputs\":[{\"internalType\":\"contract ISlashingRegistryCoordinator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"indicesToRemove\",\"type\":\"uint256[]\"}],\"name\":\"removeStrategies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"minimumStake\",\"type\":\"uint96\"}],\"name\":\"setMinimumStakeForQuorum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"_lookAheadBlocks\",\"type\":\"uint32\"}],\"name\":\"setSlashableStakeLookahead\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"slashableStakeLookAheadPerQuorum\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"stakeTypePerQuorum\",\"outputs\":[{\"internalType\":\"enum IStakeRegistryTypes.StakeType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"strategiesPerQuorum\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"strategyParams\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"strategyParamsByIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistryTypes.StrategyParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"strategyParamsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"operatorIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"updateOperatorsStake\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"weightOfOperatorForQuorum\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"errors\":{\"BelowMinimumStakeRequirement()\":[{\"details\":\"Thrown when the stake is below the minimum required for a quorum\"}],\"OnlySlashingRegistryCoordinator()\":[{\"details\":\"Thrown when the caller is not the registry coordinator\"}],\"OnlySlashingRegistryCoordinatorOwner()\":[{\"details\":\"Thrown when the caller is not the owner of the registry coordinator\"}]},\"events\":{\"LookAheadPeriodChanged(uint32,uint32)\":{\"params\":{\"newLookAheadBlocks\":\"The new look ahead period.\",\"oldLookAheadBlocks\":\"The previous look ahead period.\"}},\"MinimumStakeForQuorumUpdated(uint8,uint96)\":{\"params\":{\"minimumStake\":\"The new minimum stake requirement.\",\"quorumNumber\":\"The quorum number being updated (indexed).\"}},\"OperatorStakeUpdate(bytes32,uint8,uint96)\":{\"params\":{\"operatorId\":\"The unique identifier of the operator (indexed).\",\"quorumNumber\":\"The quorum number for which the stake was updated.\",\"stake\":\"The new stake amount.\"}},\"QuorumCreated(uint8)\":{\"params\":{\"quorumNumber\":\"The number of the newly created quorum (indexed).\"}},\"StakeTypeSet(uint8)\":{\"params\":{\"newStakeType\":\"The new stake type being set.\"}},\"StrategyAddedToQuorum(uint8,address)\":{\"params\":{\"quorumNumber\":\"The quorum number the strategy was added to (indexed).\",\"strategy\":\"The strategy contract that was added.\"}},\"StrategyMultiplierUpdated(uint8,address,uint256)\":{\"params\":{\"multiplier\":\"The new multiplier value.\",\"quorumNumber\":\"The quorum number for the strategy update (indexed).\",\"strategy\":\"The strategy contract being updated.\"}},\"StrategyRemovedFromQuorum(uint8,address)\":{\"params\":{\"quorumNumber\":\"The quorum number the strategy was removed from (indexed).\",\"strategy\":\"The strategy contract that was removed.\"}}},\"kind\":\"dev\",\"methods\":{\"addStrategies(uint8,(address,uint96)[])\":{\"details\":\"Checks to make sure that the *same* strategy cannot be added multiple times (checks against both against existing and new strategies).This function has no check to make sure that the strategies for a single quorum have the same underlying asset. This is a concious choice, since a middleware may want, e.g., a stablecoin quorum that accepts USDC, USDT, DAI, etc. as underlying assets and trades them as \\\"equivalent\\\".\",\"params\":{\"quorumNumber\":\"The quorum number to add strategies to.\",\"strategyParams\":\"The strategy parameters to add.\"}},\"deregisterOperator(bytes32,bytes)\":{\"details\":\"Access restricted to the RegistryCoordinator.Preconditions (these are assumed, not validated in this contract):     1) `quorumNumbers` has no duplicates.     2) `quorumNumbers.length` != 0.     3) `quorumNumbers` is ordered in ascending order.     4) The operator is not already deregistered.     5) `quorumNumbers` is a subset of the quorumNumbers that the operator is registered for.\",\"params\":{\"operatorId\":\"The id of the operator to deregister.\",\"quorumNumbers\":\"The quorum numbers the operator is deregistering from, where each byte is an 8 bit integer quorumNumber.\"}},\"getCurrentStake(bytes32,uint8)\":{\"details\":\"Returns 0 if the operator has no stake history.\",\"params\":{\"operatorId\":\"The id of the operator to query.\",\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The current stake amount.\"}},\"getCurrentTotalStake(uint8)\":{\"details\":\"Will revert if `_totalStakeHistory[quorumNumber]` is empty.\",\"params\":{\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The current total stake amount.\"}},\"getLatestStakeUpdate(bytes32,uint8)\":{\"details\":\"Returns a StakeUpdate struct with all entries equal to 0 if the operator has no stake history.\",\"params\":{\"operatorId\":\"The id of the operator to query.\",\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The most recent stake update.\"}},\"getStakeAtBlockNumber(bytes32,uint8,uint32)\":{\"params\":{\"blockNumber\":\"The block number to query.\",\"operatorId\":\"The id of the operator to query.\",\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The stake amount at the specified block.\"}},\"getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)\":{\"details\":\"Function will revert if `index` is out-of-bounds.Used by the BLSSignatureChecker to get past stakes of signing operators.\",\"params\":{\"blockNumber\":\"The block number to query.\",\"index\":\"The index to query.\",\"operatorId\":\"The id of the operator to query.\",\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The stake amount.\"}},\"getStakeHistory(bytes32,uint8)\":{\"params\":{\"operatorId\":\"The id of the operator of interest.\",\"quorumNumber\":\"The quorum number to get the stake for.\"},\"returns\":{\"_0\":\"The array of stake updates.\"}},\"getStakeHistoryLength(bytes32,uint8)\":{\"params\":{\"operatorId\":\"The id of the operator to query.\",\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The length of the stake history array.\"}},\"getStakeUpdateAtIndex(uint8,bytes32,uint256)\":{\"details\":\"Function will revert if `index` is out-of-bounds.\",\"params\":{\"index\":\"The index to query.\",\"operatorId\":\"The id of the operator to query.\",\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The stake update at the specified index.\"}},\"getStakeUpdateIndexAtBlockNumber(bytes32,uint8,uint32)\":{\"params\":{\"blockNumber\":\"The block number to query.\",\"operatorId\":\"The id of the operator to query.\",\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The index of the stake update.\"}},\"getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)\":{\"details\":\"Function will revert if `index` is out-of-bounds.Used by the BLSSignatureChecker to get past stakes of signing operators.\",\"params\":{\"blockNumber\":\"The block number to query.\",\"index\":\"The index to query.\",\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The total stake amount.\"}},\"getTotalStakeHistoryLength(uint8)\":{\"params\":{\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The length of the total stake history array.\"}},\"getTotalStakeIndicesAtBlockNumber(uint32,bytes)\":{\"params\":{\"blockNumber\":\"The block number to query.\",\"quorumNumbers\":\"The quorum numbers to query.\"},\"returns\":{\"_0\":\"The array of stake update indices.\"}},\"getTotalStakeUpdateAtIndex(uint8,uint256)\":{\"params\":{\"index\":\"The index to query.\",\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The stake update at the specified index.\"}},\"initializeDelegatedStakeQuorum(uint8,uint96,(address,uint96)[])\":{\"params\":{\"minimumStake\":\"The minimum stake required for the quorum.\",\"quorumNumber\":\"The number of the quorum to initialize.\",\"strategyParams\":\"The initial strategy parameters for the quorum.\"}},\"initializeSlashableStakeQuorum(uint8,uint96,uint32,(address,uint96)[])\":{\"params\":{\"lookAheadPeriod\":\"The look ahead period for checking operator shares.\",\"minimumStake\":\"The minimum stake required for the quorum.\",\"quorumNumber\":\"The number of the quorum to initialize.\",\"strategyParams\":\"The initial strategy parameters for the quorum.\"}},\"modifyStrategyParams(uint8,uint256[],uint96[])\":{\"params\":{\"newMultipliers\":\"The new multipliers for the strategies.\",\"quorumNumber\":\"The quorum number to change the strategy for.\",\"strategyIndices\":\"The indices of the strategies to change.\"}},\"registerOperator(address,bytes32,bytes)\":{\"details\":\"Access restricted to the RegistryCoordinator.Preconditions (these are assumed, not validated in this contract):     1) `quorumNumbers` has no duplicates.     2) `quorumNumbers.length` != 0.     3) `quorumNumbers` is ordered in ascending order.     4) The operator is not already registered.\",\"params\":{\"operator\":\"The address of the operator to register.\",\"operatorId\":\"The id of the operator to register.\",\"quorumNumbers\":\"The quorum numbers the operator is registering for, where each byte is an 8 bit integer quorumNumber.\"},\"returns\":{\"_0\":\"The operator's current stake for each quorum.\",\"_1\":\"The total stake for each quorum.\"}},\"removeStrategies(uint8,uint256[])\":{\"details\":\"Higher indices should be *first* in the list of `indicesToRemove`, since otherwise     the removal of lower index entries will cause a shift in the indices of the other strategiesToRemove.\",\"params\":{\"indicesToRemove\":\"The indices of strategies to remove.\",\"quorumNumber\":\"The quorum number to remove strategies from.\"}},\"setMinimumStakeForQuorum(uint8,uint96)\":{\"params\":{\"minimumStake\":\"The new minimum stake requirement.\",\"quorumNumber\":\"The quorum number to set the minimum stake for.\"}},\"setSlashableStakeLookahead(uint8,uint32)\":{\"params\":{\"lookAheadBlocks\":\"The number of blocks to look ahead when checking shares.\",\"quorumNumber\":\"The quorum number to set the look ahead period for.\"}},\"strategyParamsByIndex(uint8,uint256)\":{\"params\":{\"index\":\"The index of the strategy to query.\",\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The strategy parameters.\"}},\"strategyParamsLength(uint8)\":{\"params\":{\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The number of strategies for the quorum.\"}},\"updateOperatorsStake(address[],bytes32[],uint8)\":{\"params\":{\"operatorIds\":\"The ids of the operators to update.\",\"operators\":\"The addresses of the operators to update.\",\"quorumNumber\":\"The quorum number to update the stake for.\"},\"returns\":{\"_0\":\"A list of bools, true if the corresponding operator should be deregistered since they no longer meet the minimum stake requirement.\"}},\"weightOfOperatorForQuorum(uint8,address)\":{\"details\":\"Reverts if `quorumNumber` is greater than or equal to `quorumCount`.\",\"params\":{\"operator\":\"The operator address to query.\",\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The total weight of the operator.\"}}},\"title\":\"A `Registry` that keeps track of stakes of operators for up to 256 quorums. Specifically, it keeps track of      1) The stake of each operator in all the quorums they are a part of for block ranges      2) The total stake of all operators in each quorum for block ranges      3) The minimum stake required to register for each quorum It allows an additional functionality (in addition to registering and deregistering) to update the stake of an operator.\",\"version\":1},\"userdoc\":{\"errors\":{\"EmptyStakeHistory()\":[{\"notice\":\"Thrown when attempting to access stake history that doesn't exist for a quorum.\"}],\"InputArrayLengthMismatch()\":[{\"notice\":\"Thrown when two array parameters have mismatching lengths.\"}],\"InputArrayLengthZero()\":[{\"notice\":\"Thrown when an input array has zero length.\"}],\"InputDuplicateStrategy()\":[{\"notice\":\"Thrown when a duplicate strategy is provided in an input array.\"}],\"InputMultiplierZero()\":[{\"notice\":\"Thrown when a multiplier input is zero.\"}],\"InvalidBlockNumber()\":[{\"notice\":\"Thrown when the provided block number is invalid for the stake update.\"}],\"QuorumAlreadyExists()\":[{\"notice\":\"Thrown when attempting to create a quorum that already exists.\"}],\"QuorumDoesNotExist()\":[{\"notice\":\"Thrown when attempting to interact with a quorum that does not exist.\"}],\"QuorumNotSlashable()\":[{\"notice\":\"Thrown when the quorum is not slashable and the caller attempts to set the look ahead period.\"}]},\"events\":{\"LookAheadPeriodChanged(uint32,uint32)\":{\"notice\":\"Emitted when the look ahead period for checking operator shares is updated.\"},\"MinimumStakeForQuorumUpdated(uint8,uint96)\":{\"notice\":\"Emitted when the minimum stake for a quorum is updated.\"},\"OperatorStakeUpdate(bytes32,uint8,uint96)\":{\"notice\":\"Emitted when an operator's stake is updated.\"},\"QuorumCreated(uint8)\":{\"notice\":\"Emitted when a new quorum is created.\"},\"StakeTypeSet(uint8)\":{\"notice\":\"Emitted when the stake type is updated.\"},\"StrategyAddedToQuorum(uint8,address)\":{\"notice\":\"Emitted when a strategy is added to a quorum.\"},\"StrategyMultiplierUpdated(uint8,address,uint256)\":{\"notice\":\"Emitted when a strategy's multiplier is updated.\"},\"StrategyRemovedFromQuorum(uint8,address)\":{\"notice\":\"Emitted when a strategy is removed from a quorum.\"}},\"kind\":\"user\",\"methods\":{\"MAX_WEIGHING_FUNCTION_LENGTH()\":{\"notice\":\"Maximum length of dynamic arrays in the `strategyParams` mapping.\"},\"WEIGHTING_DIVISOR()\":{\"notice\":\"Constant used as a divisor in calculating weights.\"},\"addStrategies(uint8,(address,uint96)[])\":{\"notice\":\"Adds new strategies and their associated multipliers to the specified quorum.\"},\"allocationManager()\":{\"notice\":\"the address of the AllocationManager for EigenLayer.\"},\"avsDirectory()\":{\"notice\":\"The address of the Delegation contract for EigenLayer.\"},\"delegation()\":{\"notice\":\"The address of the Delegation contract for EigenLayer.\"},\"deregisterOperator(bytes32,bytes)\":{\"notice\":\"Deregisters the operator with `operatorId` for the specified `quorumNumbers`.\"},\"getCurrentStake(bytes32,uint8)\":{\"notice\":\"Returns the current stake for an operator in a quorum.\"},\"getCurrentTotalStake(uint8)\":{\"notice\":\"Returns the current total stake for a quorum.\"},\"getLatestStakeUpdate(bytes32,uint8)\":{\"notice\":\"Returns the most recent stake update for an operator in a quorum.\"},\"getStakeAtBlockNumber(bytes32,uint8,uint32)\":{\"notice\":\"Returns the stake of an operator at a specific block number.\"},\"getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)\":{\"notice\":\"Returns the stake at the specified block number and index for an operator in a quorum.\"},\"getStakeHistory(bytes32,uint8)\":{\"notice\":\"Returns the entire stake history array for an operator in a quorum.\"},\"getStakeHistoryLength(bytes32,uint8)\":{\"notice\":\"Returns the length of the stake history for an operator in a quorum.\"},\"getStakeUpdateAtIndex(uint8,bytes32,uint256)\":{\"notice\":\"Returns the stake update at the specified index for an operator in a quorum.\"},\"getStakeUpdateIndexAtBlockNumber(bytes32,uint8,uint32)\":{\"notice\":\"Returns the index of the operator's stake update at the specified block number.\"},\"getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)\":{\"notice\":\"Returns the total stake at the specified block number and index for a quorum.\"},\"getTotalStakeHistoryLength(uint8)\":{\"notice\":\"Returns the length of the total stake history for a quorum.\"},\"getTotalStakeIndicesAtBlockNumber(uint32,bytes)\":{\"notice\":\"Returns the indices of total stakes for the provided quorums at the given block number.\"},\"getTotalStakeUpdateAtIndex(uint8,uint256)\":{\"notice\":\"Returns the stake update at the specified index in the total stake history.\"},\"initializeDelegatedStakeQuorum(uint8,uint96,(address,uint96)[])\":{\"notice\":\"Initialize a new quorum created by the registry coordinator by setting strategies, weights, and minimum stake.\"},\"initializeSlashableStakeQuorum(uint8,uint96,uint32,(address,uint96)[])\":{\"notice\":\"Initialize a new quorum and push its first history update.\"},\"minimumStakeForQuorum(uint8)\":{\"notice\":\"In order to register for a quorum i, an operator must have at least `minimumStakeForQuorum[i]` evaluated by this contract's 'VoteWeigher' logic.\"},\"modifyStrategyParams(uint8,uint256[],uint96[])\":{\"notice\":\"Modifies the weights of strategies that are already in the mapping strategyParams.\"},\"registerOperator(address,bytes32,bytes)\":{\"notice\":\"Registers the `operator` with `operatorId` for the specified `quorumNumbers`.\"},\"registryCoordinator()\":{\"notice\":\"the coordinator contract that this registry is associated with\"},\"removeStrategies(uint8,uint256[])\":{\"notice\":\"Removes strategies and their associated weights from the specified quorum.\"},\"setMinimumStakeForQuorum(uint8,uint96)\":{\"notice\":\"Sets the minimum stake requirement for a quorum `quorumNumber`.\"},\"setSlashableStakeLookahead(uint8,uint32)\":{\"notice\":\"Sets the look ahead time to `lookAheadBlocks` for checking operator shares for a specific quorum.\"},\"slashableStakeLookAheadPerQuorum(uint8)\":{\"notice\":\"mapping from quorum number to the slashable stake look ahead time (in blocks)\"},\"stakeTypePerQuorum(uint8)\":{\"notice\":\"mapping from quorum number to the IStakeRegistryTypes.StakeType for that specific quorum\"},\"strategiesPerQuorum(uint8,uint256)\":{\"notice\":\"mapping from quorum number to the list of strategies considered for that specific quorum\"},\"strategyParams(uint8,uint256)\":{\"notice\":\"mapping from quorum number to the list of strategies considered and their corresponding multipliers for that specific quorum\"},\"strategyParamsByIndex(uint8,uint256)\":{\"notice\":\"Returns the strategy and weight multiplier for the `index`'th strategy in the quorum.\"},\"strategyParamsLength(uint8)\":{\"notice\":\"Returns the length of the dynamic array stored in `strategyParams[quorumNumber]`.\"},\"updateOperatorsStake(address[],bytes32[],uint8)\":{\"notice\":\"Called by the registry coordinator to update the stake of a list of operators for a specific quorum.\"},\"weightOfOperatorForQuorum(uint8,address)\":{\"notice\":\"Computes the total weight of the operator in the specified quorum.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/eigenlayer-middleware/src/StakeRegistry.sol\":\"StakeRegistry\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":@eigenlayer-scripts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/script/\",\":@eigenlayer/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/\",\":@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/\",\":eigenlayer-middleware/=lib/eigenlayer-middleware/\",\":erc4626-tests/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin-contracts/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/\",\":zeus-templates/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/zeus-templates/src/\"],\"viaIR\":true},\"sources\":{\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IAVSDirectory.sol\":{\"keccak256\":\"0xa5cb7832792c57dcd98d16548f1da3bd3ebd2ee0315cd5b1e7a6f68a24f79fb6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7852da45ddf2a9625a839717dc293eacb3a8a5d9c77ea78c5e3ed77c6062b18f\",\"dweb:/ipfs/QmbZfifW7ZsguFmYjvEoR6BiDL3stRzpGUXGbXqCgaAeuH\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IAVSRegistrar.sol\":{\"keccak256\":\"0xbb209da899a3379d83c18eabd4760e3385b999f640bdfcc25ce3fa5c1edc166d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://5a2c745f7ea19dbbd7248a98c39385f7e4aeb9e86975393f249e1aa3804598dc\",\"dweb:/ipfs/QmdeyCYp5EhJNCjsx8ydFxyqwdpFwpj4iiVoesQVKvsRjm\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IAllocationManager.sol\":{\"keccak256\":\"0x9f95d00bc0a22ec850e5cc6bcda9db2485f87b627232f9360571dbe87a0ee035\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://96d1e4f044b7337f83f970202b5ce5154970bb8745646b5c0e51cab58713c811\",\"dweb:/ipfs/QmX7mkfacMVKKXJB5GixQqtfYJ3jCkQzTRu4eUy4RjBNeM\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0xd8a2913e40e1cb3e97eb3ddabd26dab72854de8b47c0fd438808b5bd2be2ca20\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://26d520cecf61b994a11ad8a009570e71736daeb3f73e1983d2f85ff6a725ab82\",\"dweb:/ipfs/QmWjQbNJJaW1H3e3GYcoATfoSjYMoZcjjrc7eA3nHDWYDf\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0x3d4118c7aa962ea8cfe15fd8b1b0ee160421506e036d96a8b09c9cc957fff31c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://51e444895bea318e1c0f6d8d5b092330d0c42b52a95e1935d868e599abd1795e\",\"dweb:/ipfs/Qmd8ozg2SXqSM72ddFmSZm5yqKMcaxQ31ifAhqWrUazWwj\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0xa2e18dbfd63c3211158f916b669bd74066388564a2f019e952953bc5390e1466\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c86e9d4426aa20892ffc660793e8ce6e881de02cc6a0b483efaa06f14a7df864\",\"dweb:/ipfs/QmQbvkto6g9EeRMfU4bPcuAh1Tz3ohGFpHyHS8GA8mZiFN\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8\",\"dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72\",\"dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISemVerMixin.sol\":{\"keccak256\":\"0xcb910d9afbaf14c2ec32828e28ca72f1dba35c7371f487505d2a73da2c576009\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d801fbeeb84ce1dde84dcfa85d519b726f8ba928c76dc4b24d9317299a7a1ab0\",\"dweb:/ipfs/QmfAVYxxJry6GTML7jtQfoR4H1ZFpF6XYSpFZHZ8QTC61B\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IShareManager.sol\":{\"keccak256\":\"0xa331e73e99af7eb38befbd7e1d1024d7d9b2c6cc2534313672d1f937ee9fdaaa\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://77fada64905d51779609546ba527834aff7d4478ff26df6f33abfe4a57ba028c\",\"dweb:/ipfs/QmerLh58EpALrjvbgdVAbXJz9uCHukBKyS1MeVsEPo1ytS\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtilsMixin.sol\":{\"keccak256\":\"0x5223940241400e601b40ef9b544569262aa96cd9b05efd41fdaa4eb815d1b95b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c993c65dbb74ecf6428aa73535a01a5663f4f4f536611e070b2e78937c19af10\",\"dweb:/ipfs/QmaDsP63uGvoXjrGPYtbcZyUPEEspq9QChZeP1BYrn6FcE\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0xbf084857bc21f2e3752072df667a3025ba73431eaa56852562b0dc3594361d75\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8a5eb881299b8949063e8d7eecdadbae92f3c84a129aa58b2e5f995714fb3b23\",\"dweb:/ipfs/QmRsG6BgSS3UcXMDjjucKaNvzGjHa85ph22atnz6hzW9xo\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0x9989483e1c623b3d62b3fe28ca6255577552d85f8ab916fd35559bbad6898a2f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://97084919a9b4c2e30cd1c529c7c21b6274d3ebf2e52e29e612709f6ea8a8ee8f\",\"dweb:/ipfs/QmbdvS23Qe3RLuzPmFndHzmRdnRWtPYiwEBLKwWdUeYkiF\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0xff027b027df59b9d66f69951ff7a52f77ea3a30cda6c8f9b80f02680925484db\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0660cd206c833fdbd84837479e77e69bd29afa34707ed5819604c8d37d9aa828\",\"dweb:/ipfs/QmcUxK7pNDL4ZN2r913fG446hF8snEEVzWJZisedd2zxGc\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0xe8ec0e6bef36311170e2447bdd2fe8b19aad7244024926243428ffe02754b136\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a628118c581ef8393ff09e50d0db45470bed040c45ed463f71144ef344fee48e\",\"dweb:/ipfs/QmUz7nTJfzXKL2Sy175LPHNeUfKFHGarWvJFeCG4ZBqRuX\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0xf6ef9925d5a6db7de81efac1e85b2a4ec64249abc13d4a2ff3ff73e41c8df436\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d3e5dc3ef9a117ac18ac2c0371d34b948d3e1e93c0eba6dbb7a75a1e15abfc6\",\"dweb:/ipfs/QmT4PrXoTJpnTNUxvXk3r4tzrfzSUYg4Lr2GyWNWeVXhAk\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/OperatorSetLib.sol\":{\"keccak256\":\"0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41\",\"dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx\"]},\"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/SlashingLib.sol\":{\"keccak256\":\"0xe73a53cfd201425b8230c1a9ba91ea7b12315828715c93216d3c9de0d64e0e04\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://615749ec37dc7311a76f51519892e3f4a8c56a90d6f7283d8eec79628385b071\",\"dweb:/ipfs/QmdGVLsmXASwLVVNK9uyHpuN816M7YFqEP4TWCUVu1HXLG\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c\",\"dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/eigenlayer-middleware/src/StakeRegistry.sol\":{\"keccak256\":\"0x230faa7ee87fe4b26b04e71316dd155f4101a417683c243463349ee31de9c9b9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://09a9b7d24d4b8a86f13833f099167895f336f96ff14a6a6ec6f28a7c06d2f8c1\",\"dweb:/ipfs/QmQsupLcoQ8zbYFSkYhDwuGgyLxGpgvvyTCD4dcKsH73VP\"]},\"lib/eigenlayer-middleware/src/StakeRegistryStorage.sol\":{\"keccak256\":\"0x335ea4c9f7ad4cbb1fe1fc990319478a74de1083ee6e0768ed66112d2b31b116\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://33b2120657ad6aeeffeaa3681aeca6dad717ec600034b2d53d9c673dacebe9ea\",\"dweb:/ipfs/QmeHABPTqijRthq1EvhngD5WUc5YzGBFWLLb6vmd8oBNSK\"]},\"lib/eigenlayer-middleware/src/interfaces/IBLSApkRegistry.sol\":{\"keccak256\":\"0x319c6c6fc8b6bcdf32256d874edd6abe69cbc6b19e5ab94d12a82863d55e02bb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e63efbf6d6b0435aa1877378ae1a36a621167c8b1a03185dfa182906289adf43\",\"dweb:/ipfs/Qmf911mMdue4Mp7sVFKoBreuZbzBwkeErTi53Q7Ed9XJtp\"]},\"lib/eigenlayer-middleware/src/interfaces/IIndexRegistry.sol\":{\"keccak256\":\"0x8a53d093c37a76dfb20a6d765c834cafadc0706ca997282191179ee1bdce6a68\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://87c14b3e34e9e8a13176a04d0d693996f9d8a44b274822670729161255b39f80\",\"dweb:/ipfs/QmbGB1HqQwAK9BgGVRGqLSxYYuQnWhgZqsZpqN5Bp3b1hq\"]},\"lib/eigenlayer-middleware/src/interfaces/ISlashingRegistryCoordinator.sol\":{\"keccak256\":\"0x210dba7d3a36dcec26c9320ad0fb03288605e260330542dfab2242d3e8d0dd43\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1db537004b00c33ad77839a9ab6b52179c2ca20b2026ea134fa525a2577c668b\",\"dweb:/ipfs/Qma19bfQ7UbbFQ5rZS7vQgJHT7bFyxT3YK6XzAtZFjoxCH\"]},\"lib/eigenlayer-middleware/src/interfaces/ISocketRegistry.sol\":{\"keccak256\":\"0x5d4497f995bdc0f56d242b218065a9d0b9ab7f8b47421e66cb3ae37e25674d8f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://47cfc86fd6147928011e8ab8ca3689b3cee0b155a4b01700ac7e8146012d86da\",\"dweb:/ipfs/QmcqDwW5WHKWi5arVERE1j7RikN7GuQtmfX7fpSyRu5zBe\"]},\"lib/eigenlayer-middleware/src/interfaces/IStakeRegistry.sol\":{\"keccak256\":\"0x7d8239df5f3ea4b6919a1e1ee2a2b31615346c0d919521ca38f3958800c1dfd3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://94faa00a86a293cd0e6aa1565d3534580b964853674eaf79b1b1bbb407d6ed07\",\"dweb:/ipfs/QmUqhLCUKy6NttwXg9Jv83Yg7rpLEx1MCL3VUQP4TaVvoW\"]},\"lib/eigenlayer-middleware/src/libraries/BN254.sol\":{\"keccak256\":\"0x941414cfbfb510409428e51e197e5e28be3b45fb81440e183afa0caa1f077ec7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa245501f99b6f77564fe7e38f8130a0a6d589424bf413b2d1e46da8b5214982\",\"dweb:/ipfs/QmXCJx2GktmrbpYLnsAZ4KrResizL3JuhDjA3MNgito8AQ\"]},\"lib/eigenlayer-middleware/src/libraries/BitmapUtils.sol\":{\"keccak256\":\"0xfac31fd5a3ad9b6c1a659ed320e2171b7bec8a34cb602fb39576135574a4d6ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5bc75c2237e1e9c4e0c55069167207345bb28066c51174e1a5febb7beed888c\",\"dweb:/ipfs/QmWNUk7SYnAab7Eu6f7DBR2Cy2cAZPUbp5ZEATSsjjjwqP\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract ISlashingRegistryCoordinator","name":"_slashingRegistryCoordinator","type":"address"},{"internalType":"contract IDelegationManager","name":"_delegationManager","type":"address"},{"internalType":"contract IAVSDirectory","name":"_avsDirectory","type":"address"},{"internalType":"contract IAllocationManager","name":"_allocationManager","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"type":"error","name":"BelowMinimumStakeRequirement"},{"inputs":[],"type":"error","name":"EmptyStakeHistory"},{"inputs":[],"type":"error","name":"InputArrayLengthMismatch"},{"inputs":[],"type":"error","name":"InputArrayLengthZero"},{"inputs":[],"type":"error","name":"InputDuplicateStrategy"},{"inputs":[],"type":"error","name":"InputMultiplierZero"},{"inputs":[],"type":"error","name":"InvalidBlockNumber"},{"inputs":[],"type":"error","name":"OnlySlashingRegistryCoordinator"},{"inputs":[],"type":"error","name":"OnlySlashingRegistryCoordinatorOwner"},{"inputs":[],"type":"error","name":"QuorumAlreadyExists"},{"inputs":[],"type":"error","name":"QuorumDoesNotExist"},{"inputs":[],"type":"error","name":"QuorumNotSlashable"},{"inputs":[{"internalType":"uint32","name":"oldLookAheadBlocks","type":"uint32","indexed":false},{"internalType":"uint32","name":"newLookAheadBlocks","type":"uint32","indexed":false}],"type":"event","name":"LookAheadPeriodChanged","anonymous":false},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8","indexed":true},{"internalType":"uint96","name":"minimumStake","type":"uint96","indexed":false}],"type":"event","name":"MinimumStakeForQuorumUpdated","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32","indexed":true},{"internalType":"uint8","name":"quorumNumber","type":"uint8","indexed":false},{"internalType":"uint96","name":"stake","type":"uint96","indexed":false}],"type":"event","name":"OperatorStakeUpdate","anonymous":false},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8","indexed":true}],"type":"event","name":"QuorumCreated","anonymous":false},{"inputs":[{"internalType":"enum IStakeRegistryTypes.StakeType","name":"newStakeType","type":"uint8","indexed":false}],"type":"event","name":"StakeTypeSet","anonymous":false},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8","indexed":true},{"internalType":"contract IStrategy","name":"strategy","type":"address","indexed":false}],"type":"event","name":"StrategyAddedToQuorum","anonymous":false},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8","indexed":true},{"internalType":"contract IStrategy","name":"strategy","type":"address","indexed":false},{"internalType":"uint256","name":"multiplier","type":"uint256","indexed":false}],"type":"event","name":"StrategyMultiplierUpdated","anonymous":false},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8","indexed":true},{"internalType":"contract IStrategy","name":"strategy","type":"address","indexed":false}],"type":"event","name":"StrategyRemovedFromQuorum","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"MAX_WEIGHING_FUNCTION_LENGTH","outputs":[{"internalType":"uint8","name":"","type":"uint8"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"WEIGHTING_DIVISOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"struct IStakeRegistryTypes.StrategyParams[]","name":"_strategyParams","type":"tuple[]","components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]}],"stateMutability":"nonpayable","type":"function","name":"addStrategies"},{"inputs":[],"stateMutability":"view","type":"function","name":"allocationManager","outputs":[{"internalType":"contract IAllocationManager","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"avsDirectory","outputs":[{"internalType":"contract IAVSDirectory","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"delegation","outputs":[{"internalType":"contract IDelegationManager","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"bytes","name":"quorumNumbers","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"deregisterOperator"},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"getCurrentStake","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"getCurrentTotalStake","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"getLatestStakeUpdate","outputs":[{"internalType":"struct IStakeRegistryTypes.StakeUpdate","name":"","type":"tuple","components":[{"internalType":"uint32","name":"updateBlockNumber","type":"uint32"},{"internalType":"uint32","name":"nextUpdateBlockNumber","type":"uint32"},{"internalType":"uint96","name":"stake","type":"uint96"}]}]},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint32","name":"blockNumber","type":"uint32"}],"stateMutability":"view","type":"function","name":"getStakeAtBlockNumber","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint32","name":"blockNumber","type":"uint32"},{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"getStakeAtBlockNumberAndIndex","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"getStakeHistory","outputs":[{"internalType":"struct IStakeRegistryTypes.StakeUpdate[]","name":"","type":"tuple[]","components":[{"internalType":"uint32","name":"updateBlockNumber","type":"uint32"},{"internalType":"uint32","name":"nextUpdateBlockNumber","type":"uint32"},{"internalType":"uint96","name":"stake","type":"uint96"}]}]},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"getStakeHistoryLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"getStakeUpdateAtIndex","outputs":[{"internalType":"struct IStakeRegistryTypes.StakeUpdate","name":"","type":"tuple","components":[{"internalType":"uint32","name":"updateBlockNumber","type":"uint32"},{"internalType":"uint32","name":"nextUpdateBlockNumber","type":"uint32"},{"internalType":"uint96","name":"stake","type":"uint96"}]}]},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint32","name":"blockNumber","type":"uint32"}],"stateMutability":"view","type":"function","name":"getStakeUpdateIndexAtBlockNumber","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint32","name":"blockNumber","type":"uint32"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"getTotalStakeAtBlockNumberFromIndex","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"getTotalStakeHistoryLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint32","name":"blockNumber","type":"uint32"},{"internalType":"bytes","name":"quorumNumbers","type":"bytes"}],"stateMutability":"view","type":"function","name":"getTotalStakeIndicesAtBlockNumber","outputs":[{"internalType":"uint32[]","name":"","type":"uint32[]"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"getTotalStakeUpdateAtIndex","outputs":[{"internalType":"struct IStakeRegistryTypes.StakeUpdate","name":"","type":"tuple","components":[{"internalType":"uint32","name":"updateBlockNumber","type":"uint32"},{"internalType":"uint32","name":"nextUpdateBlockNumber","type":"uint32"},{"internalType":"uint96","name":"stake","type":"uint96"}]}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint96","name":"minimumStake","type":"uint96"},{"internalType":"struct IStakeRegistryTypes.StrategyParams[]","name":"_strategyParams","type":"tuple[]","components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]}],"stateMutability":"nonpayable","type":"function","name":"initializeDelegatedStakeQuorum"},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint96","name":"minimumStake","type":"uint96"},{"internalType":"uint32","name":"lookAheadPeriod","type":"uint32"},{"internalType":"struct IStakeRegistryTypes.StrategyParams[]","name":"_strategyParams","type":"tuple[]","components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]}],"stateMutability":"nonpayable","type":"function","name":"initializeSlashableStakeQuorum"},{"inputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function","name":"minimumStakeForQuorum","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint256[]","name":"strategyIndices","type":"uint256[]"},{"internalType":"uint96[]","name":"newMultipliers","type":"uint96[]"}],"stateMutability":"nonpayable","type":"function","name":"modifyStrategyParams"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"bytes","name":"quorumNumbers","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"registerOperator","outputs":[{"internalType":"uint96[]","name":"","type":"uint96[]"},{"internalType":"uint96[]","name":"","type":"uint96[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"registryCoordinator","outputs":[{"internalType":"contract ISlashingRegistryCoordinator","name":"","type":"address"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint256[]","name":"indicesToRemove","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"removeStrategies"},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint96","name":"minimumStake","type":"uint96"}],"stateMutability":"nonpayable","type":"function","name":"setMinimumStakeForQuorum"},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint32","name":"_lookAheadBlocks","type":"uint32"}],"stateMutability":"nonpayable","type":"function","name":"setSlashableStakeLookahead"},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"slashableStakeLookAheadPerQuorum","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"stakeTypePerQuorum","outputs":[{"internalType":"enum IStakeRegistryTypes.StakeType","name":"","type":"uint8"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","name":"strategiesPerQuorum","outputs":[{"internalType":"contract IStrategy","name":"","type":"address"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","name":"strategyParams","outputs":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"strategyParamsByIndex","outputs":[{"internalType":"struct IStakeRegistryTypes.StrategyParams","name":"","type":"tuple","components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"strategyParamsLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address[]","name":"operators","type":"address[]"},{"internalType":"bytes32[]","name":"operatorIds","type":"bytes32[]"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"nonpayable","type":"function","name":"updateOperatorsStake","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"weightOfOperatorForQuorum","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]}],"devdoc":{"kind":"dev","methods":{"addStrategies(uint8,(address,uint96)[])":{"details":"Checks to make sure that the *same* strategy cannot be added multiple times (checks against both against existing and new strategies).This function has no check to make sure that the strategies for a single quorum have the same underlying asset. This is a concious choice, since a middleware may want, e.g., a stablecoin quorum that accepts USDC, USDT, DAI, etc. as underlying assets and trades them as \"equivalent\".","params":{"quorumNumber":"The quorum number to add strategies to.","strategyParams":"The strategy parameters to add."}},"deregisterOperator(bytes32,bytes)":{"details":"Access restricted to the RegistryCoordinator.Preconditions (these are assumed, not validated in this contract):     1) `quorumNumbers` has no duplicates.     2) `quorumNumbers.length` != 0.     3) `quorumNumbers` is ordered in ascending order.     4) The operator is not already deregistered.     5) `quorumNumbers` is a subset of the quorumNumbers that the operator is registered for.","params":{"operatorId":"The id of the operator to deregister.","quorumNumbers":"The quorum numbers the operator is deregistering from, where each byte is an 8 bit integer quorumNumber."}},"getCurrentStake(bytes32,uint8)":{"details":"Returns 0 if the operator has no stake history.","params":{"operatorId":"The id of the operator to query.","quorumNumber":"The quorum number to query."},"returns":{"_0":"The current stake amount."}},"getCurrentTotalStake(uint8)":{"details":"Will revert if `_totalStakeHistory[quorumNumber]` is empty.","params":{"quorumNumber":"The quorum number to query."},"returns":{"_0":"The current total stake amount."}},"getLatestStakeUpdate(bytes32,uint8)":{"details":"Returns a StakeUpdate struct with all entries equal to 0 if the operator has no stake history.","params":{"operatorId":"The id of the operator to query.","quorumNumber":"The quorum number to query."},"returns":{"_0":"The most recent stake update."}},"getStakeAtBlockNumber(bytes32,uint8,uint32)":{"params":{"blockNumber":"The block number to query.","operatorId":"The id of the operator to query.","quorumNumber":"The quorum number to query."},"returns":{"_0":"The stake amount at the specified block."}},"getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)":{"details":"Function will revert if `index` is out-of-bounds.Used by the BLSSignatureChecker to get past stakes of signing operators.","params":{"blockNumber":"The block number to query.","index":"The index to query.","operatorId":"The id of the operator to query.","quorumNumber":"The quorum number to query."},"returns":{"_0":"The stake amount."}},"getStakeHistory(bytes32,uint8)":{"params":{"operatorId":"The id of the operator of interest.","quorumNumber":"The quorum number to get the stake for."},"returns":{"_0":"The array of stake updates."}},"getStakeHistoryLength(bytes32,uint8)":{"params":{"operatorId":"The id of the operator to query.","quorumNumber":"The quorum number to query."},"returns":{"_0":"The length of the stake history array."}},"getStakeUpdateAtIndex(uint8,bytes32,uint256)":{"details":"Function will revert if `index` is out-of-bounds.","params":{"index":"The index to query.","operatorId":"The id of the operator to query.","quorumNumber":"The quorum number to query."},"returns":{"_0":"The stake update at the specified index."}},"getStakeUpdateIndexAtBlockNumber(bytes32,uint8,uint32)":{"params":{"blockNumber":"The block number to query.","operatorId":"The id of the operator to query.","quorumNumber":"The quorum number to query."},"returns":{"_0":"The index of the stake update."}},"getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)":{"details":"Function will revert if `index` is out-of-bounds.Used by the BLSSignatureChecker to get past stakes of signing operators.","params":{"blockNumber":"The block number to query.","index":"The index to query.","quorumNumber":"The quorum number to query."},"returns":{"_0":"The total stake amount."}},"getTotalStakeHistoryLength(uint8)":{"params":{"quorumNumber":"The quorum number to query."},"returns":{"_0":"The length of the total stake history array."}},"getTotalStakeIndicesAtBlockNumber(uint32,bytes)":{"params":{"blockNumber":"The block number to query.","quorumNumbers":"The quorum numbers to query."},"returns":{"_0":"The array of stake update indices."}},"getTotalStakeUpdateAtIndex(uint8,uint256)":{"params":{"index":"The index to query.","quorumNumber":"The quorum number to query."},"returns":{"_0":"The stake update at the specified index."}},"initializeDelegatedStakeQuorum(uint8,uint96,(address,uint96)[])":{"params":{"minimumStake":"The minimum stake required for the quorum.","quorumNumber":"The number of the quorum to initialize.","strategyParams":"The initial strategy parameters for the quorum."}},"initializeSlashableStakeQuorum(uint8,uint96,uint32,(address,uint96)[])":{"params":{"lookAheadPeriod":"The look ahead period for checking operator shares.","minimumStake":"The minimum stake required for the quorum.","quorumNumber":"The number of the quorum to initialize.","strategyParams":"The initial strategy parameters for the quorum."}},"modifyStrategyParams(uint8,uint256[],uint96[])":{"params":{"newMultipliers":"The new multipliers for the strategies.","quorumNumber":"The quorum number to change the strategy for.","strategyIndices":"The indices of the strategies to change."}},"registerOperator(address,bytes32,bytes)":{"details":"Access restricted to the RegistryCoordinator.Preconditions (these are assumed, not validated in this contract):     1) `quorumNumbers` has no duplicates.     2) `quorumNumbers.length` != 0.     3) `quorumNumbers` is ordered in ascending order.     4) The operator is not already registered.","params":{"operator":"The address of the operator to register.","operatorId":"The id of the operator to register.","quorumNumbers":"The quorum numbers the operator is registering for, where each byte is an 8 bit integer quorumNumber."},"returns":{"_0":"The operator's current stake for each quorum.","_1":"The total stake for each quorum."}},"removeStrategies(uint8,uint256[])":{"details":"Higher indices should be *first* in the list of `indicesToRemove`, since otherwise     the removal of lower index entries will cause a shift in the indices of the other strategiesToRemove.","params":{"indicesToRemove":"The indices of strategies to remove.","quorumNumber":"The quorum number to remove strategies from."}},"setMinimumStakeForQuorum(uint8,uint96)":{"params":{"minimumStake":"The new minimum stake requirement.","quorumNumber":"The quorum number to set the minimum stake for."}},"setSlashableStakeLookahead(uint8,uint32)":{"params":{"lookAheadBlocks":"The number of blocks to look ahead when checking shares.","quorumNumber":"The quorum number to set the look ahead period for."}},"strategyParamsByIndex(uint8,uint256)":{"params":{"index":"The index of the strategy to query.","quorumNumber":"The quorum number to query."},"returns":{"_0":"The strategy parameters."}},"strategyParamsLength(uint8)":{"params":{"quorumNumber":"The quorum number to query."},"returns":{"_0":"The number of strategies for the quorum."}},"updateOperatorsStake(address[],bytes32[],uint8)":{"params":{"operatorIds":"The ids of the operators to update.","operators":"The addresses of the operators to update.","quorumNumber":"The quorum number to update the stake for."},"returns":{"_0":"A list of bools, true if the corresponding operator should be deregistered since they no longer meet the minimum stake requirement."}},"weightOfOperatorForQuorum(uint8,address)":{"details":"Reverts if `quorumNumber` is greater than or equal to `quorumCount`.","params":{"operator":"The operator address to query.","quorumNumber":"The quorum number to query."},"returns":{"_0":"The total weight of the operator."}}},"version":1},"userdoc":{"kind":"user","methods":{"MAX_WEIGHING_FUNCTION_LENGTH()":{"notice":"Maximum length of dynamic arrays in the `strategyParams` mapping."},"WEIGHTING_DIVISOR()":{"notice":"Constant used as a divisor in calculating weights."},"addStrategies(uint8,(address,uint96)[])":{"notice":"Adds new strategies and their associated multipliers to the specified quorum."},"allocationManager()":{"notice":"the address of the AllocationManager for EigenLayer."},"avsDirectory()":{"notice":"The address of the Delegation contract for EigenLayer."},"delegation()":{"notice":"The address of the Delegation contract for EigenLayer."},"deregisterOperator(bytes32,bytes)":{"notice":"Deregisters the operator with `operatorId` for the specified `quorumNumbers`."},"getCurrentStake(bytes32,uint8)":{"notice":"Returns the current stake for an operator in a quorum."},"getCurrentTotalStake(uint8)":{"notice":"Returns the current total stake for a quorum."},"getLatestStakeUpdate(bytes32,uint8)":{"notice":"Returns the most recent stake update for an operator in a quorum."},"getStakeAtBlockNumber(bytes32,uint8,uint32)":{"notice":"Returns the stake of an operator at a specific block number."},"getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)":{"notice":"Returns the stake at the specified block number and index for an operator in a quorum."},"getStakeHistory(bytes32,uint8)":{"notice":"Returns the entire stake history array for an operator in a quorum."},"getStakeHistoryLength(bytes32,uint8)":{"notice":"Returns the length of the stake history for an operator in a quorum."},"getStakeUpdateAtIndex(uint8,bytes32,uint256)":{"notice":"Returns the stake update at the specified index for an operator in a quorum."},"getStakeUpdateIndexAtBlockNumber(bytes32,uint8,uint32)":{"notice":"Returns the index of the operator's stake update at the specified block number."},"getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)":{"notice":"Returns the total stake at the specified block number and index for a quorum."},"getTotalStakeHistoryLength(uint8)":{"notice":"Returns the length of the total stake history for a quorum."},"getTotalStakeIndicesAtBlockNumber(uint32,bytes)":{"notice":"Returns the indices of total stakes for the provided quorums at the given block number."},"getTotalStakeUpdateAtIndex(uint8,uint256)":{"notice":"Returns the stake update at the specified index in the total stake history."},"initializeDelegatedStakeQuorum(uint8,uint96,(address,uint96)[])":{"notice":"Initialize a new quorum created by the registry coordinator by setting strategies, weights, and minimum stake."},"initializeSlashableStakeQuorum(uint8,uint96,uint32,(address,uint96)[])":{"notice":"Initialize a new quorum and push its first history update."},"minimumStakeForQuorum(uint8)":{"notice":"In order to register for a quorum i, an operator must have at least `minimumStakeForQuorum[i]` evaluated by this contract's 'VoteWeigher' logic."},"modifyStrategyParams(uint8,uint256[],uint96[])":{"notice":"Modifies the weights of strategies that are already in the mapping strategyParams."},"registerOperator(address,bytes32,bytes)":{"notice":"Registers the `operator` with `operatorId` for the specified `quorumNumbers`."},"registryCoordinator()":{"notice":"the coordinator contract that this registry is associated with"},"removeStrategies(uint8,uint256[])":{"notice":"Removes strategies and their associated weights from the specified quorum."},"setMinimumStakeForQuorum(uint8,uint96)":{"notice":"Sets the minimum stake requirement for a quorum `quorumNumber`."},"setSlashableStakeLookahead(uint8,uint32)":{"notice":"Sets the look ahead time to `lookAheadBlocks` for checking operator shares for a specific quorum."},"slashableStakeLookAheadPerQuorum(uint8)":{"notice":"mapping from quorum number to the slashable stake look ahead time (in blocks)"},"stakeTypePerQuorum(uint8)":{"notice":"mapping from quorum number to the IStakeRegistryTypes.StakeType for that specific quorum"},"strategiesPerQuorum(uint8,uint256)":{"notice":"mapping from quorum number to the list of strategies considered for that specific quorum"},"strategyParams(uint8,uint256)":{"notice":"mapping from quorum number to the list of strategies considered and their corresponding multipliers for that specific quorum"},"strategyParamsByIndex(uint8,uint256)":{"notice":"Returns the strategy and weight multiplier for the `index`'th strategy in the quorum."},"strategyParamsLength(uint8)":{"notice":"Returns the length of the dynamic array stored in `strategyParams[quorumNumber]`."},"updateOperatorsStake(address[],bytes32[],uint8)":{"notice":"Called by the registry coordinator to update the stake of a list of operators for a specific quorum."},"weightOfOperatorForQuorum(uint8,address)":{"notice":"Computes the total weight of the operator in the specified quorum."}},"version":1}},"settings":{"remappings":["@eigenlayer-middleware/=lib/eigenlayer-middleware/","@eigenlayer-scripts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/script/","@eigenlayer/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/","@openzeppelin-upgrades/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","@openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","eigenlayer-contracts/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/","eigenlayer-middleware/=lib/eigenlayer-middleware/","erc4626-tests/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","openzeppelin-contracts-upgradeable/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts-v4.9.0/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","openzeppelin-contracts/=lib/eigenlayer-middleware/lib/openzeppelin-contracts/","openzeppelin/=lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/","zeus-templates/=lib/eigenlayer-middleware/lib/eigenlayer-contracts/lib/zeus-templates/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/eigenlayer-middleware/src/StakeRegistry.sol":"StakeRegistry"},"evmVersion":"cancun","libraries":{},"viaIR":true},"sources":{"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IAVSDirectory.sol":{"keccak256":"0xa5cb7832792c57dcd98d16548f1da3bd3ebd2ee0315cd5b1e7a6f68a24f79fb6","urls":["bzz-raw://7852da45ddf2a9625a839717dc293eacb3a8a5d9c77ea78c5e3ed77c6062b18f","dweb:/ipfs/QmbZfifW7ZsguFmYjvEoR6BiDL3stRzpGUXGbXqCgaAeuH"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IAVSRegistrar.sol":{"keccak256":"0xbb209da899a3379d83c18eabd4760e3385b999f640bdfcc25ce3fa5c1edc166d","urls":["bzz-raw://5a2c745f7ea19dbbd7248a98c39385f7e4aeb9e86975393f249e1aa3804598dc","dweb:/ipfs/QmdeyCYp5EhJNCjsx8ydFxyqwdpFwpj4iiVoesQVKvsRjm"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IAllocationManager.sol":{"keccak256":"0x9f95d00bc0a22ec850e5cc6bcda9db2485f87b627232f9360571dbe87a0ee035","urls":["bzz-raw://96d1e4f044b7337f83f970202b5ce5154970bb8745646b5c0e51cab58713c811","dweb:/ipfs/QmX7mkfacMVKKXJB5GixQqtfYJ3jCkQzTRu4eUy4RjBNeM"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol":{"keccak256":"0xd8a2913e40e1cb3e97eb3ddabd26dab72854de8b47c0fd438808b5bd2be2ca20","urls":["bzz-raw://26d520cecf61b994a11ad8a009570e71736daeb3f73e1983d2f85ff6a725ab82","dweb:/ipfs/QmWjQbNJJaW1H3e3GYcoATfoSjYMoZcjjrc7eA3nHDWYDf"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol":{"keccak256":"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c","urls":["bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91","dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz"],"license":"CC0-1.0"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol":{"keccak256":"0x3d4118c7aa962ea8cfe15fd8b1b0ee160421506e036d96a8b09c9cc957fff31c","urls":["bzz-raw://51e444895bea318e1c0f6d8d5b092330d0c42b52a95e1935d868e599abd1795e","dweb:/ipfs/Qmd8ozg2SXqSM72ddFmSZm5yqKMcaxQ31ifAhqWrUazWwj"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol":{"keccak256":"0xa2e18dbfd63c3211158f916b669bd74066388564a2f019e952953bc5390e1466","urls":["bzz-raw://c86e9d4426aa20892ffc660793e8ce6e881de02cc6a0b483efaa06f14a7df864","dweb:/ipfs/QmQbvkto6g9EeRMfU4bPcuAh1Tz3ohGFpHyHS8GA8mZiFN"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol":{"keccak256":"0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3","urls":["bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8","dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol":{"keccak256":"0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc","urls":["bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72","dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISemVerMixin.sol":{"keccak256":"0xcb910d9afbaf14c2ec32828e28ca72f1dba35c7371f487505d2a73da2c576009","urls":["bzz-raw://d801fbeeb84ce1dde84dcfa85d519b726f8ba928c76dc4b24d9317299a7a1ab0","dweb:/ipfs/QmfAVYxxJry6GTML7jtQfoR4H1ZFpF6XYSpFZHZ8QTC61B"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IShareManager.sol":{"keccak256":"0xa331e73e99af7eb38befbd7e1d1024d7d9b2c6cc2534313672d1f937ee9fdaaa","urls":["bzz-raw://77fada64905d51779609546ba527834aff7d4478ff26df6f33abfe4a57ba028c","dweb:/ipfs/QmerLh58EpALrjvbgdVAbXJz9uCHukBKyS1MeVsEPo1ytS"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtilsMixin.sol":{"keccak256":"0x5223940241400e601b40ef9b544569262aa96cd9b05efd41fdaa4eb815d1b95b","urls":["bzz-raw://c993c65dbb74ecf6428aa73535a01a5663f4f4f536611e070b2e78937c19af10","dweb:/ipfs/QmaDsP63uGvoXjrGPYtbcZyUPEEspq9QChZeP1BYrn6FcE"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol":{"keccak256":"0xbf084857bc21f2e3752072df667a3025ba73431eaa56852562b0dc3594361d75","urls":["bzz-raw://8a5eb881299b8949063e8d7eecdadbae92f3c84a129aa58b2e5f995714fb3b23","dweb:/ipfs/QmRsG6BgSS3UcXMDjjucKaNvzGjHa85ph22atnz6hzW9xo"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol":{"keccak256":"0x9989483e1c623b3d62b3fe28ca6255577552d85f8ab916fd35559bbad6898a2f","urls":["bzz-raw://97084919a9b4c2e30cd1c529c7c21b6274d3ebf2e52e29e612709f6ea8a8ee8f","dweb:/ipfs/QmbdvS23Qe3RLuzPmFndHzmRdnRWtPYiwEBLKwWdUeYkiF"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol":{"keccak256":"0xff027b027df59b9d66f69951ff7a52f77ea3a30cda6c8f9b80f02680925484db","urls":["bzz-raw://0660cd206c833fdbd84837479e77e69bd29afa34707ed5819604c8d37d9aa828","dweb:/ipfs/QmcUxK7pNDL4ZN2r913fG446hF8snEEVzWJZisedd2zxGc"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol":{"keccak256":"0xe8ec0e6bef36311170e2447bdd2fe8b19aad7244024926243428ffe02754b136","urls":["bzz-raw://a628118c581ef8393ff09e50d0db45470bed040c45ed463f71144ef344fee48e","dweb:/ipfs/QmUz7nTJfzXKL2Sy175LPHNeUfKFHGarWvJFeCG4ZBqRuX"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol":{"keccak256":"0xf6ef9925d5a6db7de81efac1e85b2a4ec64249abc13d4a2ff3ff73e41c8df436","urls":["bzz-raw://2d3e5dc3ef9a117ac18ac2c0371d34b948d3e1e93c0eba6dbb7a75a1e15abfc6","dweb:/ipfs/QmT4PrXoTJpnTNUxvXk3r4tzrfzSUYg4Lr2GyWNWeVXhAk"],"license":"MIT"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/OperatorSetLib.sol":{"keccak256":"0x551df2d7984470e6eaa774d058c3f2af0175044b720aa53a6a156c90881f1812","urls":["bzz-raw://eedb749fda40d45b8803694665d96fb5bec3b010d25cff4baad6e796ac690e41","dweb:/ipfs/QmUNG8gmC6CjrdazKbwqt7fyaBGNbqeEUA4iFka49egGZx"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/eigenlayer-contracts/src/contracts/libraries/SlashingLib.sol":{"keccak256":"0xe73a53cfd201425b8230c1a9ba91ea7b12315828715c93216d3c9de0d64e0e04","urls":["bzz-raw://615749ec37dc7311a76f51519892e3f4a8c56a90d6f7283d8eec79628385b071","dweb:/ipfs/QmdGVLsmXASwLVVNK9uyHpuN816M7YFqEP4TWCUVu1HXLG"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol":{"keccak256":"0xcef50f95b43b038aa40aed25b62fc45906c681a5c1d504a4fdcf3bc6330a8d4b","urls":["bzz-raw://ef883699a00970d5469e502514e2854704cd53d7a49825078aa807a2f056315c","dweb:/ipfs/QmRjpN9oxgw6zHCVjfWNB9MzaYpNPPgqu7Rrwqwabmhpis"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/access/Ownable.sol":{"keccak256":"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218","urls":["bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32","dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol":{"keccak256":"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61","urls":["bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354","dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305","urls":["bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5","dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7","urls":["bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92","dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"],"license":"MIT"},"lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3","urls":["bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c","dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"],"license":"MIT"},"lib/eigenlayer-middleware/src/StakeRegistry.sol":{"keccak256":"0x230faa7ee87fe4b26b04e71316dd155f4101a417683c243463349ee31de9c9b9","urls":["bzz-raw://09a9b7d24d4b8a86f13833f099167895f336f96ff14a6a6ec6f28a7c06d2f8c1","dweb:/ipfs/QmQsupLcoQ8zbYFSkYhDwuGgyLxGpgvvyTCD4dcKsH73VP"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/StakeRegistryStorage.sol":{"keccak256":"0x335ea4c9f7ad4cbb1fe1fc990319478a74de1083ee6e0768ed66112d2b31b116","urls":["bzz-raw://33b2120657ad6aeeffeaa3681aeca6dad717ec600034b2d53d9c673dacebe9ea","dweb:/ipfs/QmeHABPTqijRthq1EvhngD5WUc5YzGBFWLLb6vmd8oBNSK"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/interfaces/IBLSApkRegistry.sol":{"keccak256":"0x319c6c6fc8b6bcdf32256d874edd6abe69cbc6b19e5ab94d12a82863d55e02bb","urls":["bzz-raw://e63efbf6d6b0435aa1877378ae1a36a621167c8b1a03185dfa182906289adf43","dweb:/ipfs/Qmf911mMdue4Mp7sVFKoBreuZbzBwkeErTi53Q7Ed9XJtp"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/interfaces/IIndexRegistry.sol":{"keccak256":"0x8a53d093c37a76dfb20a6d765c834cafadc0706ca997282191179ee1bdce6a68","urls":["bzz-raw://87c14b3e34e9e8a13176a04d0d693996f9d8a44b274822670729161255b39f80","dweb:/ipfs/QmbGB1HqQwAK9BgGVRGqLSxYYuQnWhgZqsZpqN5Bp3b1hq"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/interfaces/ISlashingRegistryCoordinator.sol":{"keccak256":"0x210dba7d3a36dcec26c9320ad0fb03288605e260330542dfab2242d3e8d0dd43","urls":["bzz-raw://1db537004b00c33ad77839a9ab6b52179c2ca20b2026ea134fa525a2577c668b","dweb:/ipfs/Qma19bfQ7UbbFQ5rZS7vQgJHT7bFyxT3YK6XzAtZFjoxCH"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/interfaces/ISocketRegistry.sol":{"keccak256":"0x5d4497f995bdc0f56d242b218065a9d0b9ab7f8b47421e66cb3ae37e25674d8f","urls":["bzz-raw://47cfc86fd6147928011e8ab8ca3689b3cee0b155a4b01700ac7e8146012d86da","dweb:/ipfs/QmcqDwW5WHKWi5arVERE1j7RikN7GuQtmfX7fpSyRu5zBe"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/interfaces/IStakeRegistry.sol":{"keccak256":"0x7d8239df5f3ea4b6919a1e1ee2a2b31615346c0d919521ca38f3958800c1dfd3","urls":["bzz-raw://94faa00a86a293cd0e6aa1565d3534580b964853674eaf79b1b1bbb407d6ed07","dweb:/ipfs/QmUqhLCUKy6NttwXg9Jv83Yg7rpLEx1MCL3VUQP4TaVvoW"],"license":"BUSL-1.1"},"lib/eigenlayer-middleware/src/libraries/BN254.sol":{"keccak256":"0x941414cfbfb510409428e51e197e5e28be3b45fb81440e183afa0caa1f077ec7","urls":["bzz-raw://aa245501f99b6f77564fe7e38f8130a0a6d589424bf413b2d1e46da8b5214982","dweb:/ipfs/QmXCJx2GktmrbpYLnsAZ4KrResizL3JuhDjA3MNgito8AQ"],"license":"MIT"},"lib/eigenlayer-middleware/src/libraries/BitmapUtils.sol":{"keccak256":"0xfac31fd5a3ad9b6c1a659ed320e2171b7bec8a34cb602fb39576135574a4d6ae","urls":["bzz-raw://c5bc75c2237e1e9c4e0c55069167207345bb28066c51174e1a5febb7beed888c","dweb:/ipfs/QmWNUk7SYnAab7Eu6f7DBR2Cy2cAZPUbp5ZEATSsjjjwqP"],"license":"MIT"}},"version":1},"id":111}