{"abi":[{"type":"constructor","inputs":[{"name":"_slashingRegistryCoordinator","type":"address","internalType":"contract ISlashingRegistryCoordinator"},{"name":"_delegationManager","type":"address","internalType":"contract IDelegationManager"},{"name":"_avsDirectory","type":"address","internalType":"contract IAVSDirectory"},{"name":"_allocationManager","type":"address","internalType":"contract IAllocationManager"}],"stateMutability":"nonpayable"},{"type":"function","name":"MAX_WEIGHING_FUNCTION_LENGTH","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"WEIGHTING_DIVISOR","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"addStrategies","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"_strategyParams","type":"tuple[]","internalType":"struct IStakeRegistryTypes.StrategyParams[]","components":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"allocationManager","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IAllocationManager"}],"stateMutability":"view"},{"type":"function","name":"avsDirectory","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IAVSDirectory"}],"stateMutability":"view"},{"type":"function","name":"delegation","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IDelegationManager"}],"stateMutability":"view"},{"type":"function","name":"deregisterOperator","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumbers","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getCurrentStake","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"getCurrentTotalStake","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"getLatestStakeUpdate","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IStakeRegistryTypes.StakeUpdate","components":[{"name":"updateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"nextUpdateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"stake","type":"uint96","internalType":"uint96"}]}],"stateMutability":"view"},{"type":"function","name":"getStakeAtBlockNumber","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"blockNumber","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"getStakeAtBlockNumberAndIndex","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"blockNumber","type":"uint32","internalType":"uint32"},{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"getStakeHistory","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"tuple[]","internalType":"struct IStakeRegistryTypes.StakeUpdate[]","components":[{"name":"updateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"nextUpdateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"stake","type":"uint96","internalType":"uint96"}]}],"stateMutability":"view"},{"type":"function","name":"getStakeHistoryLength","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getStakeUpdateAtIndex","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IStakeRegistryTypes.StakeUpdate","components":[{"name":"updateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"nextUpdateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"stake","type":"uint96","internalType":"uint96"}]}],"stateMutability":"view"},{"type":"function","name":"getStakeUpdateIndexAtBlockNumber","inputs":[{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"blockNumber","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"getTotalStakeAtBlockNumberFromIndex","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"blockNumber","type":"uint32","internalType":"uint32"},{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"getTotalStakeHistoryLength","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getTotalStakeIndicesAtBlockNumber","inputs":[{"name":"blockNumber","type":"uint32","internalType":"uint32"},{"name":"quorumNumbers","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"uint32[]","internalType":"uint32[]"}],"stateMutability":"view"},{"type":"function","name":"getTotalStakeUpdateAtIndex","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IStakeRegistryTypes.StakeUpdate","components":[{"name":"updateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"nextUpdateBlockNumber","type":"uint32","internalType":"uint32"},{"name":"stake","type":"uint96","internalType":"uint96"}]}],"stateMutability":"view"},{"type":"function","name":"initializeDelegatedStakeQuorum","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"minimumStake","type":"uint96","internalType":"uint96"},{"name":"_strategyParams","type":"tuple[]","internalType":"struct IStakeRegistryTypes.StrategyParams[]","components":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"initializeSlashableStakeQuorum","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"minimumStake","type":"uint96","internalType":"uint96"},{"name":"lookAheadPeriod","type":"uint32","internalType":"uint32"},{"name":"_strategyParams","type":"tuple[]","internalType":"struct IStakeRegistryTypes.StrategyParams[]","components":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"minimumStakeForQuorum","inputs":[{"name":"","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"modifyStrategyParams","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"strategyIndices","type":"uint256[]","internalType":"uint256[]"},{"name":"newMultipliers","type":"uint96[]","internalType":"uint96[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"registerOperator","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"operatorId","type":"bytes32","internalType":"bytes32"},{"name":"quorumNumbers","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"uint96[]","internalType":"uint96[]"},{"name":"","type":"uint96[]","internalType":"uint96[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"registryCoordinator","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract ISlashingRegistryCoordinator"}],"stateMutability":"view"},{"type":"function","name":"removeStrategies","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"indicesToRemove","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setMinimumStakeForQuorum","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"minimumStake","type":"uint96","internalType":"uint96"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setSlashableStakeLookahead","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"_lookAheadBlocks","type":"uint32","internalType":"uint32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"slashableStakeLookAheadPerQuorum","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint32","internalType":"uint32"}],"stateMutability":"view"},{"type":"function","name":"stakeTypePerQuorum","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint8","internalType":"enum IStakeRegistryTypes.StakeType"}],"stateMutability":"view"},{"type":"function","name":"strategiesPerQuorum","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"contract IStrategy"}],"stateMutability":"view"},{"type":"function","name":"strategyParams","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"function","name":"strategyParamsByIndex","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IStakeRegistryTypes.StrategyParams","components":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}]}],"stateMutability":"view"},{"type":"function","name":"strategyParamsLength","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"updateOperatorsStake","inputs":[{"name":"operators","type":"address[]","internalType":"address[]"},{"name":"operatorIds","type":"bytes32[]","internalType":"bytes32[]"},{"name":"quorumNumber","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"weightOfOperatorForQuorum","inputs":[{"name":"quorumNumber","type":"uint8","internalType":"uint8"},{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint96","internalType":"uint96"}],"stateMutability":"view"},{"type":"event","name":"LookAheadPeriodChanged","inputs":[{"name":"oldLookAheadBlocks","type":"uint32","indexed":false,"internalType":"uint32"},{"name":"newLookAheadBlocks","type":"uint32","indexed":false,"internalType":"uint32"}],"anonymous":false},{"type":"event","name":"MinimumStakeForQuorumUpdated","inputs":[{"name":"quorumNumber","type":"uint8","indexed":true,"internalType":"uint8"},{"name":"minimumStake","type":"uint96","indexed":false,"internalType":"uint96"}],"anonymous":false},{"type":"event","name":"OperatorStakeUpdate","inputs":[{"name":"operatorId","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"quorumNumber","type":"uint8","indexed":false,"internalType":"uint8"},{"name":"stake","type":"uint96","indexed":false,"internalType":"uint96"}],"anonymous":false},{"type":"event","name":"QuorumCreated","inputs":[{"name":"quorumNumber","type":"uint8","indexed":true,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"StakeTypeSet","inputs":[{"name":"newStakeType","type":"uint8","indexed":false,"internalType":"enum IStakeRegistryTypes.StakeType"}],"anonymous":false},{"type":"event","name":"StrategyAddedToQuorum","inputs":[{"name":"quorumNumber","type":"uint8","indexed":true,"internalType":"uint8"},{"name":"strategy","type":"address","indexed":false,"internalType":"contract IStrategy"}],"anonymous":false},{"type":"event","name":"StrategyMultiplierUpdated","inputs":[{"name":"quorumNumber","type":"uint8","indexed":true,"internalType":"uint8"},{"name":"strategy","type":"address","indexed":false,"internalType":"contract IStrategy"},{"name":"multiplier","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"StrategyRemovedFromQuorum","inputs":[{"name":"quorumNumber","type":"uint8","indexed":true,"internalType":"uint8"},{"name":"strategy","type":"address","indexed":false,"internalType":"contract IStrategy"}],"anonymous":false},{"type":"error","name":"BelowMinimumStakeRequirement","inputs":[]},{"type":"error","name":"EmptyStakeHistory","inputs":[]},{"type":"error","name":"InputArrayLengthMismatch","inputs":[]},{"type":"error","name":"InputArrayLengthZero","inputs":[]},{"type":"error","name":"InputDuplicateStrategy","inputs":[]},{"type":"error","name":"InputMultiplierZero","inputs":[]},{"type":"error","name":"InvalidBlockNumber","inputs":[]},{"type":"error","name":"OnlySlashingRegistryCoordinator","inputs":[]},{"type":"error","name":"OnlySlashingRegistryCoordinatorOwner","inputs":[]},{"type":"error","name":"QuorumAlreadyExists","inputs":[]},{"type":"error","name":"QuorumDoesNotExist","inputs":[]},{"type":"error","name":"QuorumNotSlashable","inputs":[]}],"bytecode":{"object":"0x610100604052348015610010575f5ffd5b50604051613d75380380613d7583398101604081905261002f91610068565b6001600160a01b0393841660e052918316608052821660a0521660c0526100c4565b6001600160a01b0381168114610065575f5ffd5b50565b5f5f5f5f6080858703121561007b575f5ffd5b845161008681610051565b602086015190945061009781610051565b60408601519093506100a881610051565b60608601519092506100b981610051565b939692955090935050565b60805160a05160c05160e051613c316101445f395f818161041201528181610e590152818161166501528181611d5f01528181611e1b0152612ce701525f81816105ba01528181610f0701528181610f9701528181611713015281816118420152612cad01525f6103b301525f818161061a01526123eb0152613c315ff3fe608060405234801561000f575f5ffd5b506004361061021e575f3560e01c80639ab4d6ff1161012a578063c8294c56116100b4578063df5cf72311610079578063df5cf72314610615578063e086adb31461063c578063f2be94ae1461064f578063f851e19814610662578063fa28c62714610675575f5ffd5b8063c8294c56146105a2578063ca8aa7c7146105b5578063cc5a7c20146105dc578063d5eccc05146105ef578063dd9846b914610602575f5ffd5b8063b6904b78116100fa578063b6904b781461052e578063bc9a40c314610541578063bd29b8cd14610554578063c46778a514610567578063c601527d1461058f575f5ffd5b80639ab4d6ff146104815780639f3ccf65146104bb578063ac6bfb03146104ce578063adc804da146104ee575f5ffd5b80635e5a6775116101ab5780636c3fb4bf1161017b5780636c3fb4bf146103ed5780636d14a9871461040d57806375d4173a146104345780637c1723471461044757806381c0750214610461575f5ffd5b80635e5a67751461035d5780635f1f2d771461036c578063697fbd931461037f5780636b3aa72e146103ae575f5ffd5b806325504777116101f157806325504777146102b85780632cd95940146102d95780633ca5a5f5146102f95780634bd26e091461031b5780635401ed271461034a575f5ffd5b80630491b41c1461022257806308732461146102575780631f9b74e01461027857806320b66298146102a3575b5f5ffd5b610244610230366004612e05565b60ff165f9081526001602052604090205490565b6040519081526020015b60405180910390f35b61026a610265366004612e1e565b610688565b60405161024e929190612e46565b61028b610286366004612e7c565b6106cd565b6040516001600160601b03909116815260200161024e565b6102b66102b1366004612ef1565b6106ef565b005b6102cb6102c6366004612fac565b61088d565b60405161024e929190613046565b6102ec6102e736600461306a565b610a15565b60405161024e9190613094565b610244610307366004612e05565b60ff165f9081526003602052604090205490565b61024461032936600461306a565b5f91825260026020908152604080842060ff93909316845291905290205490565b61028b61035836600461306a565b610ab2565b610244670de0b6b3a764000081565b6102b661037a36600461319b565b610aca565b6103a161038d366004612e05565b60056020525f908152604090205460ff1681565b60405161024e9190613257565b6103d57f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161024e565b6104006103fb3660046132e2565b611008565b60405161024e91906133b4565b6103d57f000000000000000000000000000000000000000000000000000000000000000081565b6102b6610442366004613498565b611163565b61044f602081565b60405160ff909116815260200161024e565b61047461046f366004613504565b611249565b60405161024e9190613552565b6104a661048f366004612e05565b60066020525f908152604090205463ffffffff1681565b60405163ffffffff909116815260200161024e565b6103d56104c9366004612e1e565b6113ef565b6104e16104dc36600461358f565b611423565b60405161024e91906135bf565b6105016104fc366004612e1e565b6114b9565b6040805182516001600160a01b031681526020928301516001600160601b0316928101929092520161024e565b6104e161053c366004612e1e565b611530565b6102b661054f3660046135f9565b6115bd565b6102b6610562366004613621565b6115de565b61028b610575366004612e05565b5f602081905290815260409020546001600160601b031681565b6102b661059d36600461364f565b611641565b61028b6105b0366004613699565b6118b1565b6103d57f000000000000000000000000000000000000000000000000000000000000000081565b6102b66105ea3660046136d3565b61192d565b61028b6105fd366004612e05565b611a1f565b6104a661061036600461373d565b611a70565b6103d57f000000000000000000000000000000000000000000000000000000000000000081565b6102b661064a36600461376d565b611a84565b61028b61065d366004613795565b611aa0565b6104e161067036600461306a565b611b33565b61028b61068336600461373d565b611c21565b6003602052815f5260405f2081815481106106a1575f80fd5b5f918252602090912001546001600160a01b0381169250600160a01b90046001600160601b0316905082565b5f826106d881611c80565b5f6106e38585611cb2565b509250505b5092915050565b6106f7611d5d565b8461070181611c80565b83806107205760405163796cc52560e01b815260040160405180910390fd5b828114610740576040516343714afd60e01b815260040160405180910390fd5b60ff87165f908152600360205260408120905b828110156108825785858281811061076d5761076d6137d4565b905060200201602081019061078291906137e8565b82898984818110610795576107956137d4565b90506020020135815481106107ac576107ac6137d4565b905f5260205f20015f0160146101000a8154816001600160601b0302191690836001600160601b031602179055508860ff167f11a5641322da1dff56a4b66eaac31ffa465295ece907cd163437793b4d009a75838a8a85818110610812576108126137d4565b9050602002013581548110610829576108296137d4565b5f918252602090912001546001600160a01b031688888581811061084f5761084f6137d4565b905060200201602081019061086491906137e8565b604051610872929190612e46565b60405180910390a2600101610753565b505050505050505050565b606080610898611e10565b5f836001600160401b038111156108b1576108b161310d565b6040519080825280602002602001820160405280156108da578160200160208202803683370190505b5090505f846001600160401b038111156108f6576108f661310d565b60405190808252806020026020018201604052801561091f578160200160208202803683370190505b5090505f5b85811015610a07575f87878381811061093f5761093f6137d4565b919091013560f81c9150610954905081611c80565b5f5f610960838d611cb2565b91509150806109825760405163207f13e360e11b815260040160405180910390fd5b5f61098e8c8585611e59565b9050828786815181106109a3576109a36137d4565b60200260200101906001600160601b031690816001600160601b0316815250506109cd84826120d2565b8686815181106109df576109df6137d4565b6001600160601b03909216602092830291909101909101525050600190920191506109249050565b509097909650945050505050565b5f82815260026020908152604080832060ff851684528252808320805482518185028101850190935280835260609492939192909184015b82821015610aa5575f848152602090819020604080516060810182529185015463ffffffff8082168452600160201b82041683850152600160401b90046001600160601b031690820152825260019092019101610a4d565b5050505090505b92915050565b5f5f610abe8484611b33565b60400151949350505050565b610ad2611d5d565b81610adc81611c80565b815180610afc5760405163796cc52560e01b815260040160405180910390fd5b60ff84165f908152600360209081526040808320600490925282209091836001600160401b03811115610b3157610b3161310d565b604051908082528060200260200182016040528015610b5a578160200160208202803683370190505b5090505f5b84811015610e555783878281518110610b7a57610b7a6137d4565b602002602001015181548110610b9257610b926137d4565b5f9182526020909120015482516001600160a01b0390911690839083908110610bbd57610bbd6137d4565b60200260200101906001600160a01b031690816001600160a01b0316815250508760ff167f31fa2e2cd280c9375e13ffcf3d81e2378100186e4058f8d3ddb690b82dcd31f785898481518110610c1557610c156137d4565b602002602001015181548110610c2d57610c2d6137d4565b5f91825260209182902001546040516001600160a01b0390911681520160405180910390a28760ff167f11a5641322da1dff56a4b66eaac31ffa465295ece907cd163437793b4d009a7585898481518110610c8a57610c8a6137d4565b602002602001015181548110610ca257610ca26137d4565b5f91825260208083209190910154604080516001600160a01b039092168252918101929092520160405180910390a283548490610ce190600190613815565b81548110610cf157610cf16137d4565b905f5260205f200184888381518110610d0c57610d0c6137d4565b602002602001015181548110610d2457610d246137d4565b5f91825260209091208254910180546001600160a01b0319166001600160a01b03909216918217815591546001600160601b03600160a01b9182900416021790558354849080610d7657610d76613828565b5f8281526020812082015f199081019190915501905582548390610d9c90600190613815565b81548110610dac57610dac6137d4565b905f5260205f20015f9054906101000a90046001600160a01b031683888381518110610dda57610dda6137d4565b602002602001015181548110610df257610df26137d4565b905f5260205f20015f6101000a8154816001600160a01b0302191690836001600160a01b0316021790555082805480610e2d57610e2d613828565b5f8281526020902081015f1990810180546001600160a01b0319169055019055600101610b5f565b505f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663de1164bb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610eb3573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ed7919061383c565b6040805180820182526001600160a01b03838116825260ff8c16602083015291516304c1b8eb60e31b81529293507f00000000000000000000000000000000000000000000000000000000000000009091169163260dc75891610f3c91600401613857565b602060405180830381865afa158015610f57573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f7b919061387d565b15610ffe5760405163b66bd98960e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063b66bd98990610fd09084908c90879060040161389c565b5f604051808303815f87803b158015610fe7575f5ffd5b505af1158015610ff9573d5f5f3e3d5ffd5b505050505b5050505050505050565b6060611012611e10565b5f84516001600160401b0381111561102c5761102c61310d565b604051908082528060200260200182016040528015611055578160200160208202803683370190505b50905061106183611c80565b5f5f61106d8588612243565b90925090505f805b885181101561114957828181518110611090576110906137d4565b60200260200101516110f4575f8482815181106110af576110af6137d4565b60200260200101906001600160601b031690816001600160601b03168152505060018582815181106110e3576110e36137d4565b911515602092830291909101909101525b5f61113289838151811061110a5761110a6137d4565b602002602001015189878581518110611125576111256137d4565b6020026020010151611e59565b905061113e8184613906565b925050600101611075565b5061115486826120d2565b509293505050505b9392505050565b61116b611e10565b60ff83165f908152600160205260409020541561119b576040516310cda51760e21b815260040160405180910390fd5b6111a583826125e9565b6111af83836128da565b6111b9835f612942565b505060ff165f908152600160208181526040808420815160608101835263ffffffff438116825281850187815293820187815283549687018455928752939095209451949093018054915193516001600160601b0316600160401b02600160401b600160a01b0319948416600160201b0267ffffffffffffffff1990931695909316949094171791909116179055565b60605f826001600160401b038111156112645761126461310d565b60405190808252806020026020018201604052801561128d578160200160208202803683370190505b5090505f5b838110156113e6575f8585838181106112ad576112ad6137d4565b919091013560f81c91506112c2905081611c80565b60ff81165f908152600160205260408120805463ffffffff8a1692906112ea576112ea6137d4565b5f9182526020909120015463ffffffff16111561131a5760405163cc64657360e01b815260040160405180910390fd5b60ff81165f90815260016020526040812054905b818110156113db5760ff83165f90815260016020819052604090912063ffffffff8b169161135c8486613815565b6113669190613815565b81548110611376576113766137d4565b5f9182526020909120015463ffffffff16116113d35760016113988284613815565b6113a29190613815565b8585815181106113b4576113b46137d4565b602002602001019063ffffffff16908163ffffffff16815250506113db565b60010161132e565b505050600101611292565b50949350505050565b6004602052815f5260405f208181548110611408575f80fd5b5f918252602090912001546001600160a01b03169150829050565b604080516060810182525f80825260208083018290528284018290528582526002815283822060ff88168352905291909120805483908110611467576114676137d4565b5f91825260209182902060408051606081018252929091015463ffffffff8082168452600160201b82041693830193909352600160401b9092046001600160601b031691810191909152949350505050565b604080518082019091525f808252602082015260ff83165f9081526003602052604090208054839081106114ef576114ef6137d4565b5f918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101919091529392505050565b604080516060810182525f808252602080830182905282840182905260ff86168252600190529190912080548390811061156c5761156c6137d4565b5f91825260209182902060408051606081018252929091015463ffffffff8082168452600160201b82041693830193909352600160401b9092046001600160601b0316918101919091529392505050565b6115c5611d5d565b816115cf81611c80565b6115d983836128da565b505050565b6115e6611e10565b5f5b8181101561163b575f838383818110611603576116036137d4565b919091013560f81c9150611618905081611c80565b5f61162486835f611e59565b905061163082826120d2565b5050506001016115e8565b50505050565b611649611d5d565b8161165381611c80565b61165d83836125e9565b5f825190505f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663de1164bb6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116bf573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116e3919061383c565b6040805180820182526001600160a01b03838116825260ff8916602083015291516304c1b8eb60e31b81529293507f00000000000000000000000000000000000000000000000000000000000000009091169163260dc7589161174891600401613857565b602060405180830381865afa158015611763573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611787919061387d565b156118aa575f826001600160401b038111156117a5576117a561310d565b6040519080825280602002602001820160405280156117ce578160200160208202803683370190505b5090505f5b8381101561182a578581815181106117ed576117ed6137d4565b60200260200101515f015182828151811061180a5761180a6137d4565b6001600160a01b03909216602092830291909101909101526001016117d3565b50604051630287f75160e51b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906350feea209061187b9085908a90869060040161389c565b5f604051808303815f87803b158015611892575f5ffd5b505af11580156118a4573d5f5f3e3d5ffd5b50505050505b5050505050565b60ff83165f9081526001602052604081208054829190849081106118d7576118d76137d4565b5f91825260209182902060408051606081018252919092015463ffffffff8082168352600160201b820416938201939093526001600160601b03600160401b90930492909216908201529050610abe81856129af565b611935611e10565b60ff84165f9081526001602052604090205415611965576040516310cda51760e21b815260040160405180910390fd5b61196f84826125e9565b61197984846128da565b611984846001612942565b61198e8483612a26565b50505060ff165f908152600160208181526040808420815160608101835263ffffffff438116825281850187815293820187815283549687018455928752939095209451949093018054915193516001600160601b0316600160401b02600160401b600160a01b0319948416600160201b0267ffffffffffffffff1990931695909316949094171791909116179055565b60ff81165f908152600160208190526040822080549091611a3f91613815565b81548110611a4f57611a4f6137d4565b5f91825260209091200154600160401b90046001600160601b031692915050565b5f611a7c848484612ad7565b949350505050565b611a8c611d5d565b81611a9681611c80565b6115d98383612a26565b5f82815260026020908152604080832060ff881684529091528120805482919084908110611ad057611ad06137d4565b5f91825260209182902060408051606081018252919092015463ffffffff8082168352600160201b820416938201939093526001600160601b03600160401b90930492909216908201529050611b2681866129af565b6040015195945050505050565b60408051606080820183525f80835260208084018290528385018290528682526002815284822060ff8716835281528482205485519384018652828452908301829052938201819052919291829003611b8f579150610aac9050565b5f85815260026020908152604080832060ff881684529091529020611bb5600184613815565b81548110611bc557611bc56137d4565b5f91825260209182902060408051606081018252919092015463ffffffff8082168352600160201b820416938201939093526001600160601b03600160401b90930492909216908201529250610aac915050565b505092915050565b5f83815260026020908152604080832060ff861684529091528120611c47858585612ad7565b63ffffffff1681548110611c5d57611c5d6137d4565b5f91825260209091200154600160401b90046001600160601b0316949350505050565b60ff81165f90815260016020526040902054611caf57604051637310cff560e11b815260040160405180910390fd5b50565b6040805160018082528183019092525f91829182916020808301908036833701905050905083815f81518110611cea57611cea6137d4565b60200260200101906001600160a01b031690816001600160a01b0316815250505f5f611d168784612243565b91509150815f81518110611d2c57611d2c6137d4565b6020026020010151815f81518110611d4657611d466137d4565b6020026020010151945094505050505b9250929050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611db9573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611ddd919061383c565b6001600160a01b0316336001600160a01b031614611e0e5760405163ce98c24b60e01b815260040160405180910390fd5b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611e0e57604051632c01b20560e21b815260040160405180910390fd5b5f83815260026020908152604080832060ff861684529091528120548190808203611f1d575f86815260026020908152604080832060ff891684528252808320815160608101835263ffffffff43811682528185018681526001600160601b03808c16958401958652845460018101865594885295909620915191909201805495519351909416600160401b02600160401b600160a01b0319938316600160201b0267ffffffffffffffff1990961691909216179390931716919091179055612078565b5f86815260026020908152604080832060ff891684529091528120611f43600184613815565b81548110611f5357611f536137d4565b5f91825260209091200180546001600160601b03600160401b9091048116945090915085168303611f89575f935050505061115c565b805463ffffffff438116911603611fc1578054600160401b600160a01b031916600160401b6001600160601b03871602178155612076565b805467ffffffff000000001916600160201b4363ffffffff9081168281029390931784555f8a815260026020908152604080832060ff8d168452825280832081516060810183529687528683018481526001600160601b038d81169389019384528254600181018455928652939094209651960180549351915196851667ffffffffffffffff1990941693909317931690930291909117600160401b600160a01b031916600160401b93909216929092021790555b505b6040805160ff871681526001600160601b038616602082015287917f2f527d527e95d8fe40aec55377743bb779087da3f6d0d08f12e36444da62327d910160405180910390a26120c88285612c3e565b9695505050505050565b60ff82165f90815260016020819052604082208054918391906120f59084613815565b81548110612105576121056137d4565b905f5260205f20019050835f036121305754600160401b90046001600160601b03169150610aac9050565b80545f9061214e90600160401b90046001600160601b031686612c55565b825490915063ffffffff438116911603612189578154600160401b600160a01b031916600160401b6001600160601b0383160217825561223a565b815463ffffffff438116600160201b81810267ffffffff000000001990941693909317855560ff89165f90815260016020818152604080842081516060810183529586528583018581526001600160601b03808b169388019384528254958601835591865292909420945194909201805491519251909316600160401b02600160401b600160a01b031992861690960267ffffffffffffffff19909116939094169290921792909217169190911790555b95945050505050565b6060805f83516001600160401b038111156122605761226061310d565b604051908082528060200260200182016040528015612289578160200160208202803683370190505b5090505f84516001600160401b038111156122a6576122a661310d565b6040519080825280602002602001820160405280156122cf578160200160208202803683370190505b5090505f6122eb8760ff165f9081526003602052604090205490565b60ff88165f90815260036020908152604080832080548251818502810185019093528083529495509293909291849084015b8282101561236b575f84815260209081902060408051808201909152908401546001600160a01b0381168252600160a01b90046001600160601b03168183015282526001909201910161231d565b505050509050606060018081111561238557612385613243565b60ff808b165f908152600560205260409020541660018111156123aa576123aa613243565b036123c0576123b98989612c82565b9050612463565b60ff89165f908152600460208190526040918290209151637870733b60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169263f0e0e6769261241f928d92910161399a565b5f60405180830381865afa158015612439573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261246091908101906139be565b90505b5f5b88518110156125d9575f5b84811015612569575f84828151811061248b5761248b6137d4565b602002602001015190505f8484815181106124a8576124a86137d4565b602002602001015183815181106124c1576124c16137d4565b6020026020010151111561256057670de0b6b3a764000081602001516001600160601b03168585815181106124f8576124f86137d4565b60200260200101518481518110612511576125116137d4565b60200260200101516125239190613aca565b61252d9190613ae1565b88848151811061253f5761253f6137d4565b602002602001018181516125539190613b00565b6001600160601b03169052505b50600101612470565b5060ff8a165f9081526020819052604090205486516001600160601b039091169087908390811061259c5761259c6137d4565b60200260200101516001600160601b031610158582815181106125c1576125c16137d4565b91151560209283029190910190910152600101612465565b5093989297509195505050505050565b5f81511161260a5760405163796cc52560e01b815260040160405180910390fd5b805160ff83165f908152600360209081526040909120549061262c8383613b1f565b111561264b576040516343714afd60e01b815260040160405180910390fd5b5f5b828110156118aa575f5b6126618284613b1f565b8110156126f05784828151811061267a5761267a6137d4565b60200260200101515f01516001600160a01b031660035f8860ff1660ff1681526020019081526020015f2082815481106126b6576126b66137d4565b5f918252602090912001546001600160a01b0316036126e857604051637b74340b60e01b815260040160405180910390fd5b600101612657565b505f848281518110612704576127046137d4565b6020026020010151602001516001600160601b03161161273757604051637257125160e01b815260040160405180910390fd5b60ff85165f908152600360205260409020845185908390811061275c5761275c6137d4565b60209081029190910181015182546001810184555f9384528284208251928401516001600160601b0316600160a01b026001600160a01b039093169290921791015560ff87168252600490526040902084518590839081106127c0576127c06137d4565b6020908102919091018101515182546001810184555f938452919092200180546001600160a01b0319166001600160a01b03909216919091179055835160ff8616907f10565e56cacbf32eca267945f054fec02e59750032d113d3302182ad967f540490869084908110612836576128366137d4565b602090810291909101810151516040516001600160a01b0390911681520160405180910390a28460ff167f11a5641322da1dff56a4b66eaac31ffa465295ece907cd163437793b4d009a75858381518110612893576128936137d4565b60200260200101515f01518684815181106128b0576128b06137d4565b6020026020010151602001516040516128ca929190612e46565b60405180910390a260010161264d565b60ff82165f818152602081815260409182902080546bffffffffffffffffffffffff19166001600160601b03861690811790915591519182527f26eecff2b70b0a71104ff4d940ba7162d23a95c248771fc487a7be17a596b3cf910160405180910390a25050565b60ff82165f908152600560205260409020805482919060ff19166001838181111561296f5761296f613243565b02179055507f7c112e863ccf007862e2c9e25819c933fedbc9350a6443423b4a8599c2e8a52d816040516129a39190613257565b60405180910390a15050565b815f015163ffffffff168163ffffffff1610156129df57604051631391e11b60e21b815260040160405180910390fd5b602082015163ffffffff161580612a055750816020015163ffffffff168163ffffffff16105b612a2257604051631391e11b60e21b815260040160405180910390fd5b5050565b600160ff8084165f90815260056020526040902054166001811115612a4d57612a4d613243565b14612a6b5760405163a3be258360e01b815260040160405180910390fd5b60ff82165f90815260066020908152604091829020805463ffffffff19811663ffffffff8681169182179093558451929091168083529282015290917f28d7358b79f02d21b8b7e17aefc4185a64308aa37406fa5befc05b91932c39c7910160405180910390a1505050565b5f83815260026020908152604080832060ff86168452909152812054805b8015612b75575f86815260026020908152604080832060ff89168452909152902063ffffffff851690612b29600184613815565b81548110612b3957612b396137d4565b5f9182526020909120015463ffffffff1611612b6357612b5a600182613815565b9250505061115c565b80612b6d81613b32565b915050612af5565b5060405162461bcd60e51b815260206004820152608160248201527f5374616b6552656769737472792e5f6765745374616b65557064617465496e6460448201527f6578466f724f70657261746f724174426c6f636b4e756d6265723a206e6f207360648201527f74616b652075706461746520666f756e6420666f72206f70657261746f72496460848201527f20616e642071756f72756d4e756d62657220617420626c6f636b206e756d626560a4820152603960f91b60c482015260e40160405180910390fd5b5f61115c6001600160601b03808516908416613b47565b5f5f821215612c7857612c6782613b66565b612c719084613b80565b9050610aac565b612c718284613b00565b60ff82165f9081526006602052604081205460609190612ca89063ffffffff1643613b1f565b90505f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632bab2c4a60405180604001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663de1164bb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d41573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612d65919061383c565b6001600160a01b0316815260ff891660209182018190525f90815260049182905260409081902090516001600160e01b031960e086901b168152612daf93928a9291899101613b9f565b5f60405180830381865afa158015612dc9573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261223a91908101906139be565b803560ff81168114612e00575f5ffd5b919050565b5f60208284031215612e15575f5ffd5b61115c82612df0565b5f5f60408385031215612e2f575f5ffd5b612e3883612df0565b946020939093013593505050565b6001600160a01b039290921682526001600160601b0316602082015260400190565b6001600160a01b0381168114611caf575f5ffd5b5f5f60408385031215612e8d575f5ffd5b612e9683612df0565b91506020830135612ea681612e68565b809150509250929050565b5f5f83601f840112612ec1575f5ffd5b5081356001600160401b03811115612ed7575f5ffd5b6020830191508360208260051b8501011115611d56575f5ffd5b5f5f5f5f5f60608688031215612f05575f5ffd5b612f0e86612df0565b945060208601356001600160401b03811115612f28575f5ffd5b612f3488828901612eb1565b90955093505060408601356001600160401b03811115612f52575f5ffd5b612f5e88828901612eb1565b969995985093965092949392505050565b5f5f83601f840112612f7f575f5ffd5b5081356001600160401b03811115612f95575f5ffd5b602083019150836020828501011115611d56575f5ffd5b5f5f5f5f60608587031215612fbf575f5ffd5b8435612fca81612e68565b93506020850135925060408501356001600160401b03811115612feb575f5ffd5b612ff787828801612f6f565b95989497509550505050565b5f8151808452602084019350602083015f5b8281101561303c5781516001600160601b0316865260209586019590910190600101613015565b5093949350505050565b604081525f6130586040830185613003565b828103602084015261223a8185613003565b5f5f6040838503121561307b575f5ffd5b8235915061308b60208401612df0565b90509250929050565b602080825282518282018190525f918401906040840190835b81811015613102576130ec83855163ffffffff815116825263ffffffff60208201511660208301526001600160601b0360408201511660408301525050565b60209390930192606092909201916001016130ad565b509095945050505050565b634e487b7160e01b5f52604160045260245ffd5b604080519081016001600160401b03811182821017156131435761314361310d565b60405290565b604051601f8201601f191681016001600160401b03811182821017156131715761317161310d565b604052919050565b5f6001600160401b038211156131915761319161310d565b5060051b60200190565b5f5f604083850312156131ac575f5ffd5b6131b583612df0565b915060208301356001600160401b038111156131cf575f5ffd5b8301601f810185136131df575f5ffd5b80356131f26131ed82613179565b613149565b8082825260208201915060208360051b850101925087831115613213575f5ffd5b6020840193505b8284101561323557833582526020938401939091019061321a565b809450505050509250929050565b634e487b7160e01b5f52602160045260245ffd5b602081016002831061327757634e487b7160e01b5f52602160045260245ffd5b91905290565b5f82601f83011261328c575f5ffd5b813561329a6131ed82613179565b8082825260208201915060208360051b8601019250858311156132bb575f5ffd5b602085015b838110156132d85780358352602092830192016132c0565b5095945050505050565b5f5f5f606084860312156132f4575f5ffd5b83356001600160401b03811115613309575f5ffd5b8401601f81018613613319575f5ffd5b80356133276131ed82613179565b8082825260208201915060208360051b850101925088831115613348575f5ffd5b6020840193505b8284101561337357833561336281612e68565b82526020938401939091019061334f565b955050505060208401356001600160401b03811115613390575f5ffd5b61339c8682870161327d565b9250506133ab60408501612df0565b90509250925092565b602080825282518282018190525f918401906040840190835b8181101561310257835115158352602093840193909201916001016133cd565b80356001600160601b0381168114612e00575f5ffd5b5f82601f830112613412575f5ffd5b81356134206131ed82613179565b8082825260208201915060208360061b860101925085831115613441575f5ffd5b602085015b838110156132d8576040818803121561345d575f5ffd5b613465613121565b813561347081612e68565b815261347e602083016133ed565b602082015280845250602083019250604081019050613446565b5f5f5f606084860312156134aa575f5ffd5b6134b384612df0565b92506134c1602085016133ed565b915060408401356001600160401b038111156134db575f5ffd5b6134e786828701613403565b9150509250925092565b803563ffffffff81168114612e00575f5ffd5b5f5f5f60408486031215613516575f5ffd5b61351f846134f1565b925060208401356001600160401b03811115613539575f5ffd5b61354586828701612f6f565b9497909650939450505050565b602080825282518282018190525f918401906040840190835b8181101561310257835163ffffffff1683526020938401939092019160010161356b565b5f5f5f606084860312156135a1575f5ffd5b6135aa84612df0565b95602085013595506040909401359392505050565b60608101610aac828463ffffffff815116825263ffffffff60208201511660208301526001600160601b0360408201511660408301525050565b5f5f6040838503121561360a575f5ffd5b61361383612df0565b915061308b602084016133ed565b5f5f5f60408486031215613633575f5ffd5b8335925060208401356001600160401b03811115613539575f5ffd5b5f5f60408385031215613660575f5ffd5b61366983612df0565b915060208301356001600160401b03811115613683575f5ffd5b61368f85828601613403565b9150509250929050565b5f5f5f606084860312156136ab575f5ffd5b6136b484612df0565b92506136c2602085016134f1565b929592945050506040919091013590565b5f5f5f5f608085870312156136e6575f5ffd5b6136ef85612df0565b93506136fd602086016133ed565b925061370b604086016134f1565b915060608501356001600160401b03811115613725575f5ffd5b61373187828801613403565b91505092959194509250565b5f5f5f6060848603121561374f575f5ffd5b8335925061375f60208501612df0565b91506133ab604085016134f1565b5f5f6040838503121561377e575f5ffd5b61378783612df0565b915061308b602084016134f1565b5f5f5f5f608085870312156137a8575f5ffd5b6137b185612df0565b93506137bf602086016134f1565b93969395505050506040820135916060013590565b634e487b7160e01b5f52603260045260245ffd5b5f602082840312156137f8575f5ffd5b61115c826133ed565b634e487b7160e01b5f52601160045260245ffd5b81810381811115610aac57610aac613801565b634e487b7160e01b5f52603160045260245ffd5b5f6020828403121561384c575f5ffd5b815161115c81612e68565b81516001600160a01b0316815260208083015163ffffffff169082015260408101610aac565b5f6020828403121561388d575f5ffd5b8151801515811461115c575f5ffd5b6001600160a01b038416815260ff831660208083019190915260606040830181905283519083018190525f918401906080840190835b818110156138f95783516001600160a01b03168352602093840193909201916001016138d2565b5090979650505050505050565b8082018281125f831280158216821582161715611c1957611c19613801565b5f8151808452602084019350602083015f5b8281101561303c5781516001600160a01b0316865260209586019590910190600101613937565b5f8154808452602084019350825f5260205f205f5b8281101561303c5781546001600160a01b0316865260209095019460019182019101613973565b604081525f6139ac6040830185613925565b828103602084015261223a818561395e565b5f602082840312156139ce575f5ffd5b81516001600160401b038111156139e3575f5ffd5b8201601f810184136139f3575f5ffd5b8051613a016131ed82613179565b8082825260208201915060208360051b850101925086831115613a22575f5ffd5b602084015b83811015613abf5780516001600160401b03811115613a44575f5ffd5b8501603f81018913613a54575f5ffd5b6020810151613a656131ed82613179565b808282526020820191506020808460051b8601010192508b831115613a88575f5ffd5b6040840193505b82841015613aaa578351825260209384019390910190613a8f565b86525050602093840193919091019050613a27565b509695505050505050565b8082028115828204841417610aac57610aac613801565b5f82613afb57634e487b7160e01b5f52601260045260245ffd5b500490565b6001600160601b038181168382160190811115610aac57610aac613801565b80820180821115610aac57610aac613801565b5f81613b4057613b40613801565b505f190190565b8181035f8312801583831316838312821617156106e8576106e8613801565b5f600160ff1b8201613b7a57613b7a613801565b505f0390565b6001600160601b038281168282160390811115610aac57610aac613801565b84516001600160a01b0316815260208086015163ffffffff169082015260a060408201525f613bd160a0830186613925565b8281036060840152613be3818661395e565b91505063ffffffff831660808301529594505050505056fea26469706673582212202b0a19c33d3c55a3ae6288d7f55fbec0ea64f5ccaf5a76847ccf84b4f80c632a64736f6c634300081b0033","sourceMap":"1372:30589:136:-:0;;;1795:394;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3406:50:137;;;;;3466:31;;;;;3507:28;;;;3545:38;;;1372:30589:136;;14:161:237;-1:-1:-1;;;;;119:31:237;;109:42;;99:70;;165:1;162;155:12;99:70;14:161;:::o;180:890::-;393:6;401;409;417;470:3;458:9;449:7;445:23;441:33;438:53;;;487:1;484;477:12;438:53;519:9;513:16;538:61;593:5;538:61;:::i;:::-;668:2;653:18;;647:25;618:5;;-1:-1:-1;681:63:237;647:25;681:63;:::i;:::-;815:2;800:18;;794:25;763:7;;-1:-1:-1;828:63:237;794:25;828:63;:::i;:::-;962:2;947:18;;941:25;910:7;;-1:-1:-1;975:63:237;941:25;975:63;:::i;:::-;180:890;;;;-1:-1:-1;180:890:237;;-1:-1:-1;;180:890:237:o;:::-;1372:30589:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561000f575f5ffd5b506004361061021e575f3560e01c80639ab4d6ff1161012a578063c8294c56116100b4578063df5cf72311610079578063df5cf72314610615578063e086adb31461063c578063f2be94ae1461064f578063f851e19814610662578063fa28c62714610675575f5ffd5b8063c8294c56146105a2578063ca8aa7c7146105b5578063cc5a7c20146105dc578063d5eccc05146105ef578063dd9846b914610602575f5ffd5b8063b6904b78116100fa578063b6904b781461052e578063bc9a40c314610541578063bd29b8cd14610554578063c46778a514610567578063c601527d1461058f575f5ffd5b80639ab4d6ff146104815780639f3ccf65146104bb578063ac6bfb03146104ce578063adc804da146104ee575f5ffd5b80635e5a6775116101ab5780636c3fb4bf1161017b5780636c3fb4bf146103ed5780636d14a9871461040d57806375d4173a146104345780637c1723471461044757806381c0750214610461575f5ffd5b80635e5a67751461035d5780635f1f2d771461036c578063697fbd931461037f5780636b3aa72e146103ae575f5ffd5b806325504777116101f157806325504777146102b85780632cd95940146102d95780633ca5a5f5146102f95780634bd26e091461031b5780635401ed271461034a575f5ffd5b80630491b41c1461022257806308732461146102575780631f9b74e01461027857806320b66298146102a3575b5f5ffd5b610244610230366004612e05565b60ff165f9081526001602052604090205490565b6040519081526020015b60405180910390f35b61026a610265366004612e1e565b610688565b60405161024e929190612e46565b61028b610286366004612e7c565b6106cd565b6040516001600160601b03909116815260200161024e565b6102b66102b1366004612ef1565b6106ef565b005b6102cb6102c6366004612fac565b61088d565b60405161024e929190613046565b6102ec6102e736600461306a565b610a15565b60405161024e9190613094565b610244610307366004612e05565b60ff165f9081526003602052604090205490565b61024461032936600461306a565b5f91825260026020908152604080842060ff93909316845291905290205490565b61028b61035836600461306a565b610ab2565b610244670de0b6b3a764000081565b6102b661037a36600461319b565b610aca565b6103a161038d366004612e05565b60056020525f908152604090205460ff1681565b60405161024e9190613257565b6103d57f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161024e565b6104006103fb3660046132e2565b611008565b60405161024e91906133b4565b6103d57f000000000000000000000000000000000000000000000000000000000000000081565b6102b6610442366004613498565b611163565b61044f602081565b60405160ff909116815260200161024e565b61047461046f366004613504565b611249565b60405161024e9190613552565b6104a661048f366004612e05565b60066020525f908152604090205463ffffffff1681565b60405163ffffffff909116815260200161024e565b6103d56104c9366004612e1e565b6113ef565b6104e16104dc36600461358f565b611423565b60405161024e91906135bf565b6105016104fc366004612e1e565b6114b9565b6040805182516001600160a01b031681526020928301516001600160601b0316928101929092520161024e565b6104e161053c366004612e1e565b611530565b6102b661054f3660046135f9565b6115bd565b6102b6610562366004613621565b6115de565b61028b610575366004612e05565b5f602081905290815260409020546001600160601b031681565b6102b661059d36600461364f565b611641565b61028b6105b0366004613699565b6118b1565b6103d57f000000000000000000000000000000000000000000000000000000000000000081565b6102b66105ea3660046136d3565b61192d565b61028b6105fd366004612e05565b611a1f565b6104a661061036600461373d565b611a70565b6103d57f000000000000000000000000000000000000000000000000000000000000000081565b6102b661064a36600461376d565b611a84565b61028b61065d366004613795565b611aa0565b6104e161067036600461306a565b611b33565b61028b61068336600461373d565b611c21565b6003602052815f5260405f2081815481106106a1575f80fd5b5f918252602090912001546001600160a01b0381169250600160a01b90046001600160601b0316905082565b5f826106d881611c80565b5f6106e38585611cb2565b509250505b5092915050565b6106f7611d5d565b8461070181611c80565b83806107205760405163796cc52560e01b815260040160405180910390fd5b828114610740576040516343714afd60e01b815260040160405180910390fd5b60ff87165f908152600360205260408120905b828110156108825785858281811061076d5761076d6137d4565b905060200201602081019061078291906137e8565b82898984818110610795576107956137d4565b90506020020135815481106107ac576107ac6137d4565b905f5260205f20015f0160146101000a8154816001600160601b0302191690836001600160601b031602179055508860ff167f11a5641322da1dff56a4b66eaac31ffa465295ece907cd163437793b4d009a75838a8a85818110610812576108126137d4565b9050602002013581548110610829576108296137d4565b5f918252602090912001546001600160a01b031688888581811061084f5761084f6137d4565b905060200201602081019061086491906137e8565b604051610872929190612e46565b60405180910390a2600101610753565b505050505050505050565b606080610898611e10565b5f836001600160401b038111156108b1576108b161310d565b6040519080825280602002602001820160405280156108da578160200160208202803683370190505b5090505f846001600160401b038111156108f6576108f661310d565b60405190808252806020026020018201604052801561091f578160200160208202803683370190505b5090505f5b85811015610a07575f87878381811061093f5761093f6137d4565b919091013560f81c9150610954905081611c80565b5f5f610960838d611cb2565b91509150806109825760405163207f13e360e11b815260040160405180910390fd5b5f61098e8c8585611e59565b9050828786815181106109a3576109a36137d4565b60200260200101906001600160601b031690816001600160601b0316815250506109cd84826120d2565b8686815181106109df576109df6137d4565b6001600160601b03909216602092830291909101909101525050600190920191506109249050565b509097909650945050505050565b5f82815260026020908152604080832060ff851684528252808320805482518185028101850190935280835260609492939192909184015b82821015610aa5575f848152602090819020604080516060810182529185015463ffffffff8082168452600160201b82041683850152600160401b90046001600160601b031690820152825260019092019101610a4d565b5050505090505b92915050565b5f5f610abe8484611b33565b60400151949350505050565b610ad2611d5d565b81610adc81611c80565b815180610afc5760405163796cc52560e01b815260040160405180910390fd5b60ff84165f908152600360209081526040808320600490925282209091836001600160401b03811115610b3157610b3161310d565b604051908082528060200260200182016040528015610b5a578160200160208202803683370190505b5090505f5b84811015610e555783878281518110610b7a57610b7a6137d4565b602002602001015181548110610b9257610b926137d4565b5f9182526020909120015482516001600160a01b0390911690839083908110610bbd57610bbd6137d4565b60200260200101906001600160a01b031690816001600160a01b0316815250508760ff167f31fa2e2cd280c9375e13ffcf3d81e2378100186e4058f8d3ddb690b82dcd31f785898481518110610c1557610c156137d4565b602002602001015181548110610c2d57610c2d6137d4565b5f91825260209182902001546040516001600160a01b0390911681520160405180910390a28760ff167f11a5641322da1dff56a4b66eaac31ffa465295ece907cd163437793b4d009a7585898481518110610c8a57610c8a6137d4565b602002602001015181548110610ca257610ca26137d4565b5f91825260208083209190910154604080516001600160a01b039092168252918101929092520160405180910390a283548490610ce190600190613815565b81548110610cf157610cf16137d4565b905f5260205f200184888381518110610d0c57610d0c6137d4565b602002602001015181548110610d2457610d246137d4565b5f91825260209091208254910180546001600160a01b0319166001600160a01b03909216918217815591546001600160601b03600160a01b9182900416021790558354849080610d7657610d76613828565b5f8281526020812082015f199081019190915501905582548390610d9c90600190613815565b81548110610dac57610dac6137d4565b905f5260205f20015f9054906101000a90046001600160a01b031683888381518110610dda57610dda6137d4565b602002602001015181548110610df257610df26137d4565b905f5260205f20015f6101000a8154816001600160a01b0302191690836001600160a01b0316021790555082805480610e2d57610e2d613828565b5f8281526020902081015f1990810180546001600160a01b0319169055019055600101610b5f565b505f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663de1164bb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610eb3573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ed7919061383c565b6040805180820182526001600160a01b03838116825260ff8c16602083015291516304c1b8eb60e31b81529293507f00000000000000000000000000000000000000000000000000000000000000009091169163260dc75891610f3c91600401613857565b602060405180830381865afa158015610f57573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f7b919061387d565b15610ffe5760405163b66bd98960e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063b66bd98990610fd09084908c90879060040161389c565b5f604051808303815f87803b158015610fe7575f5ffd5b505af1158015610ff9573d5f5f3e3d5ffd5b505050505b5050505050505050565b6060611012611e10565b5f84516001600160401b0381111561102c5761102c61310d565b604051908082528060200260200182016040528015611055578160200160208202803683370190505b50905061106183611c80565b5f5f61106d8588612243565b90925090505f805b885181101561114957828181518110611090576110906137d4565b60200260200101516110f4575f8482815181106110af576110af6137d4565b60200260200101906001600160601b031690816001600160601b03168152505060018582815181106110e3576110e36137d4565b911515602092830291909101909101525b5f61113289838151811061110a5761110a6137d4565b602002602001015189878581518110611125576111256137d4565b6020026020010151611e59565b905061113e8184613906565b925050600101611075565b5061115486826120d2565b509293505050505b9392505050565b61116b611e10565b60ff83165f908152600160205260409020541561119b576040516310cda51760e21b815260040160405180910390fd5b6111a583826125e9565b6111af83836128da565b6111b9835f612942565b505060ff165f908152600160208181526040808420815160608101835263ffffffff438116825281850187815293820187815283549687018455928752939095209451949093018054915193516001600160601b0316600160401b02600160401b600160a01b0319948416600160201b0267ffffffffffffffff1990931695909316949094171791909116179055565b60605f826001600160401b038111156112645761126461310d565b60405190808252806020026020018201604052801561128d578160200160208202803683370190505b5090505f5b838110156113e6575f8585838181106112ad576112ad6137d4565b919091013560f81c91506112c2905081611c80565b60ff81165f908152600160205260408120805463ffffffff8a1692906112ea576112ea6137d4565b5f9182526020909120015463ffffffff16111561131a5760405163cc64657360e01b815260040160405180910390fd5b60ff81165f90815260016020526040812054905b818110156113db5760ff83165f90815260016020819052604090912063ffffffff8b169161135c8486613815565b6113669190613815565b81548110611376576113766137d4565b5f9182526020909120015463ffffffff16116113d35760016113988284613815565b6113a29190613815565b8585815181106113b4576113b46137d4565b602002602001019063ffffffff16908163ffffffff16815250506113db565b60010161132e565b505050600101611292565b50949350505050565b6004602052815f5260405f208181548110611408575f80fd5b5f918252602090912001546001600160a01b03169150829050565b604080516060810182525f80825260208083018290528284018290528582526002815283822060ff88168352905291909120805483908110611467576114676137d4565b5f91825260209182902060408051606081018252929091015463ffffffff8082168452600160201b82041693830193909352600160401b9092046001600160601b031691810191909152949350505050565b604080518082019091525f808252602082015260ff83165f9081526003602052604090208054839081106114ef576114ef6137d4565b5f918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101919091529392505050565b604080516060810182525f808252602080830182905282840182905260ff86168252600190529190912080548390811061156c5761156c6137d4565b5f91825260209182902060408051606081018252929091015463ffffffff8082168452600160201b82041693830193909352600160401b9092046001600160601b0316918101919091529392505050565b6115c5611d5d565b816115cf81611c80565b6115d983836128da565b505050565b6115e6611e10565b5f5b8181101561163b575f838383818110611603576116036137d4565b919091013560f81c9150611618905081611c80565b5f61162486835f611e59565b905061163082826120d2565b5050506001016115e8565b50505050565b611649611d5d565b8161165381611c80565b61165d83836125e9565b5f825190505f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663de1164bb6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116bf573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116e3919061383c565b6040805180820182526001600160a01b03838116825260ff8916602083015291516304c1b8eb60e31b81529293507f00000000000000000000000000000000000000000000000000000000000000009091169163260dc7589161174891600401613857565b602060405180830381865afa158015611763573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611787919061387d565b156118aa575f826001600160401b038111156117a5576117a561310d565b6040519080825280602002602001820160405280156117ce578160200160208202803683370190505b5090505f5b8381101561182a578581815181106117ed576117ed6137d4565b60200260200101515f015182828151811061180a5761180a6137d4565b6001600160a01b03909216602092830291909101909101526001016117d3565b50604051630287f75160e51b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906350feea209061187b9085908a90869060040161389c565b5f604051808303815f87803b158015611892575f5ffd5b505af11580156118a4573d5f5f3e3d5ffd5b50505050505b5050505050565b60ff83165f9081526001602052604081208054829190849081106118d7576118d76137d4565b5f91825260209182902060408051606081018252919092015463ffffffff8082168352600160201b820416938201939093526001600160601b03600160401b90930492909216908201529050610abe81856129af565b611935611e10565b60ff84165f9081526001602052604090205415611965576040516310cda51760e21b815260040160405180910390fd5b61196f84826125e9565b61197984846128da565b611984846001612942565b61198e8483612a26565b50505060ff165f908152600160208181526040808420815160608101835263ffffffff438116825281850187815293820187815283549687018455928752939095209451949093018054915193516001600160601b0316600160401b02600160401b600160a01b0319948416600160201b0267ffffffffffffffff1990931695909316949094171791909116179055565b60ff81165f908152600160208190526040822080549091611a3f91613815565b81548110611a4f57611a4f6137d4565b5f91825260209091200154600160401b90046001600160601b031692915050565b5f611a7c848484612ad7565b949350505050565b611a8c611d5d565b81611a9681611c80565b6115d98383612a26565b5f82815260026020908152604080832060ff881684529091528120805482919084908110611ad057611ad06137d4565b5f91825260209182902060408051606081018252919092015463ffffffff8082168352600160201b820416938201939093526001600160601b03600160401b90930492909216908201529050611b2681866129af565b6040015195945050505050565b60408051606080820183525f80835260208084018290528385018290528682526002815284822060ff8716835281528482205485519384018652828452908301829052938201819052919291829003611b8f579150610aac9050565b5f85815260026020908152604080832060ff881684529091529020611bb5600184613815565b81548110611bc557611bc56137d4565b5f91825260209182902060408051606081018252919092015463ffffffff8082168352600160201b820416938201939093526001600160601b03600160401b90930492909216908201529250610aac915050565b505092915050565b5f83815260026020908152604080832060ff861684529091528120611c47858585612ad7565b63ffffffff1681548110611c5d57611c5d6137d4565b5f91825260209091200154600160401b90046001600160601b0316949350505050565b60ff81165f90815260016020526040902054611caf57604051637310cff560e11b815260040160405180910390fd5b50565b6040805160018082528183019092525f91829182916020808301908036833701905050905083815f81518110611cea57611cea6137d4565b60200260200101906001600160a01b031690816001600160a01b0316815250505f5f611d168784612243565b91509150815f81518110611d2c57611d2c6137d4565b6020026020010151815f81518110611d4657611d466137d4565b6020026020010151945094505050505b9250929050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611db9573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611ddd919061383c565b6001600160a01b0316336001600160a01b031614611e0e5760405163ce98c24b60e01b815260040160405180910390fd5b565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611e0e57604051632c01b20560e21b815260040160405180910390fd5b5f83815260026020908152604080832060ff861684529091528120548190808203611f1d575f86815260026020908152604080832060ff891684528252808320815160608101835263ffffffff43811682528185018681526001600160601b03808c16958401958652845460018101865594885295909620915191909201805495519351909416600160401b02600160401b600160a01b0319938316600160201b0267ffffffffffffffff1990961691909216179390931716919091179055612078565b5f86815260026020908152604080832060ff891684529091528120611f43600184613815565b81548110611f5357611f536137d4565b5f91825260209091200180546001600160601b03600160401b9091048116945090915085168303611f89575f935050505061115c565b805463ffffffff438116911603611fc1578054600160401b600160a01b031916600160401b6001600160601b03871602178155612076565b805467ffffffff000000001916600160201b4363ffffffff9081168281029390931784555f8a815260026020908152604080832060ff8d168452825280832081516060810183529687528683018481526001600160601b038d81169389019384528254600181018455928652939094209651960180549351915196851667ffffffffffffffff1990941693909317931690930291909117600160401b600160a01b031916600160401b93909216929092021790555b505b6040805160ff871681526001600160601b038616602082015287917f2f527d527e95d8fe40aec55377743bb779087da3f6d0d08f12e36444da62327d910160405180910390a26120c88285612c3e565b9695505050505050565b60ff82165f90815260016020819052604082208054918391906120f59084613815565b81548110612105576121056137d4565b905f5260205f20019050835f036121305754600160401b90046001600160601b03169150610aac9050565b80545f9061214e90600160401b90046001600160601b031686612c55565b825490915063ffffffff438116911603612189578154600160401b600160a01b031916600160401b6001600160601b0383160217825561223a565b815463ffffffff438116600160201b81810267ffffffff000000001990941693909317855560ff89165f90815260016020818152604080842081516060810183529586528583018581526001600160601b03808b169388019384528254958601835591865292909420945194909201805491519251909316600160401b02600160401b600160a01b031992861690960267ffffffffffffffff19909116939094169290921792909217169190911790555b95945050505050565b6060805f83516001600160401b038111156122605761226061310d565b604051908082528060200260200182016040528015612289578160200160208202803683370190505b5090505f84516001600160401b038111156122a6576122a661310d565b6040519080825280602002602001820160405280156122cf578160200160208202803683370190505b5090505f6122eb8760ff165f9081526003602052604090205490565b60ff88165f90815260036020908152604080832080548251818502810185019093528083529495509293909291849084015b8282101561236b575f84815260209081902060408051808201909152908401546001600160a01b0381168252600160a01b90046001600160601b03168183015282526001909201910161231d565b505050509050606060018081111561238557612385613243565b60ff808b165f908152600560205260409020541660018111156123aa576123aa613243565b036123c0576123b98989612c82565b9050612463565b60ff89165f908152600460208190526040918290209151637870733b60e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169263f0e0e6769261241f928d92910161399a565b5f60405180830381865afa158015612439573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261246091908101906139be565b90505b5f5b88518110156125d9575f5b84811015612569575f84828151811061248b5761248b6137d4565b602002602001015190505f8484815181106124a8576124a86137d4565b602002602001015183815181106124c1576124c16137d4565b6020026020010151111561256057670de0b6b3a764000081602001516001600160601b03168585815181106124f8576124f86137d4565b60200260200101518481518110612511576125116137d4565b60200260200101516125239190613aca565b61252d9190613ae1565b88848151811061253f5761253f6137d4565b602002602001018181516125539190613b00565b6001600160601b03169052505b50600101612470565b5060ff8a165f9081526020819052604090205486516001600160601b039091169087908390811061259c5761259c6137d4565b60200260200101516001600160601b031610158582815181106125c1576125c16137d4565b91151560209283029190910190910152600101612465565b5093989297509195505050505050565b5f81511161260a5760405163796cc52560e01b815260040160405180910390fd5b805160ff83165f908152600360209081526040909120549061262c8383613b1f565b111561264b576040516343714afd60e01b815260040160405180910390fd5b5f5b828110156118aa575f5b6126618284613b1f565b8110156126f05784828151811061267a5761267a6137d4565b60200260200101515f01516001600160a01b031660035f8860ff1660ff1681526020019081526020015f2082815481106126b6576126b66137d4565b5f918252602090912001546001600160a01b0316036126e857604051637b74340b60e01b815260040160405180910390fd5b600101612657565b505f848281518110612704576127046137d4565b6020026020010151602001516001600160601b03161161273757604051637257125160e01b815260040160405180910390fd5b60ff85165f908152600360205260409020845185908390811061275c5761275c6137d4565b60209081029190910181015182546001810184555f9384528284208251928401516001600160601b0316600160a01b026001600160a01b039093169290921791015560ff87168252600490526040902084518590839081106127c0576127c06137d4565b6020908102919091018101515182546001810184555f938452919092200180546001600160a01b0319166001600160a01b03909216919091179055835160ff8616907f10565e56cacbf32eca267945f054fec02e59750032d113d3302182ad967f540490869084908110612836576128366137d4565b602090810291909101810151516040516001600160a01b0390911681520160405180910390a28460ff167f11a5641322da1dff56a4b66eaac31ffa465295ece907cd163437793b4d009a75858381518110612893576128936137d4565b60200260200101515f01518684815181106128b0576128b06137d4565b6020026020010151602001516040516128ca929190612e46565b60405180910390a260010161264d565b60ff82165f818152602081815260409182902080546bffffffffffffffffffffffff19166001600160601b03861690811790915591519182527f26eecff2b70b0a71104ff4d940ba7162d23a95c248771fc487a7be17a596b3cf910160405180910390a25050565b60ff82165f908152600560205260409020805482919060ff19166001838181111561296f5761296f613243565b02179055507f7c112e863ccf007862e2c9e25819c933fedbc9350a6443423b4a8599c2e8a52d816040516129a39190613257565b60405180910390a15050565b815f015163ffffffff168163ffffffff1610156129df57604051631391e11b60e21b815260040160405180910390fd5b602082015163ffffffff161580612a055750816020015163ffffffff168163ffffffff16105b612a2257604051631391e11b60e21b815260040160405180910390fd5b5050565b600160ff8084165f90815260056020526040902054166001811115612a4d57612a4d613243565b14612a6b5760405163a3be258360e01b815260040160405180910390fd5b60ff82165f90815260066020908152604091829020805463ffffffff19811663ffffffff8681169182179093558451929091168083529282015290917f28d7358b79f02d21b8b7e17aefc4185a64308aa37406fa5befc05b91932c39c7910160405180910390a1505050565b5f83815260026020908152604080832060ff86168452909152812054805b8015612b75575f86815260026020908152604080832060ff89168452909152902063ffffffff851690612b29600184613815565b81548110612b3957612b396137d4565b5f9182526020909120015463ffffffff1611612b6357612b5a600182613815565b9250505061115c565b80612b6d81613b32565b915050612af5565b5060405162461bcd60e51b815260206004820152608160248201527f5374616b6552656769737472792e5f6765745374616b65557064617465496e6460448201527f6578466f724f70657261746f724174426c6f636b4e756d6265723a206e6f207360648201527f74616b652075706461746520666f756e6420666f72206f70657261746f72496460848201527f20616e642071756f72756d4e756d62657220617420626c6f636b206e756d626560a4820152603960f91b60c482015260e40160405180910390fd5b5f61115c6001600160601b03808516908416613b47565b5f5f821215612c7857612c6782613b66565b612c719084613b80565b9050610aac565b612c718284613b00565b60ff82165f9081526006602052604081205460609190612ca89063ffffffff1643613b1f565b90505f7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632bab2c4a60405180604001604052807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663de1164bb6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d41573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190612d65919061383c565b6001600160a01b0316815260ff891660209182018190525f90815260049182905260409081902090516001600160e01b031960e086901b168152612daf93928a9291899101613b9f565b5f60405180830381865afa158015612dc9573d5f5f3e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261223a91908101906139be565b803560ff81168114612e00575f5ffd5b919050565b5f60208284031215612e15575f5ffd5b61115c82612df0565b5f5f60408385031215612e2f575f5ffd5b612e3883612df0565b946020939093013593505050565b6001600160a01b039290921682526001600160601b0316602082015260400190565b6001600160a01b0381168114611caf575f5ffd5b5f5f60408385031215612e8d575f5ffd5b612e9683612df0565b91506020830135612ea681612e68565b809150509250929050565b5f5f83601f840112612ec1575f5ffd5b5081356001600160401b03811115612ed7575f5ffd5b6020830191508360208260051b8501011115611d56575f5ffd5b5f5f5f5f5f60608688031215612f05575f5ffd5b612f0e86612df0565b945060208601356001600160401b03811115612f28575f5ffd5b612f3488828901612eb1565b90955093505060408601356001600160401b03811115612f52575f5ffd5b612f5e88828901612eb1565b969995985093965092949392505050565b5f5f83601f840112612f7f575f5ffd5b5081356001600160401b03811115612f95575f5ffd5b602083019150836020828501011115611d56575f5ffd5b5f5f5f5f60608587031215612fbf575f5ffd5b8435612fca81612e68565b93506020850135925060408501356001600160401b03811115612feb575f5ffd5b612ff787828801612f6f565b95989497509550505050565b5f8151808452602084019350602083015f5b8281101561303c5781516001600160601b0316865260209586019590910190600101613015565b5093949350505050565b604081525f6130586040830185613003565b828103602084015261223a8185613003565b5f5f6040838503121561307b575f5ffd5b8235915061308b60208401612df0565b90509250929050565b602080825282518282018190525f918401906040840190835b81811015613102576130ec83855163ffffffff815116825263ffffffff60208201511660208301526001600160601b0360408201511660408301525050565b60209390930192606092909201916001016130ad565b509095945050505050565b634e487b7160e01b5f52604160045260245ffd5b604080519081016001600160401b03811182821017156131435761314361310d565b60405290565b604051601f8201601f191681016001600160401b03811182821017156131715761317161310d565b604052919050565b5f6001600160401b038211156131915761319161310d565b5060051b60200190565b5f5f604083850312156131ac575f5ffd5b6131b583612df0565b915060208301356001600160401b038111156131cf575f5ffd5b8301601f810185136131df575f5ffd5b80356131f26131ed82613179565b613149565b8082825260208201915060208360051b850101925087831115613213575f5ffd5b6020840193505b8284101561323557833582526020938401939091019061321a565b809450505050509250929050565b634e487b7160e01b5f52602160045260245ffd5b602081016002831061327757634e487b7160e01b5f52602160045260245ffd5b91905290565b5f82601f83011261328c575f5ffd5b813561329a6131ed82613179565b8082825260208201915060208360051b8601019250858311156132bb575f5ffd5b602085015b838110156132d85780358352602092830192016132c0565b5095945050505050565b5f5f5f606084860312156132f4575f5ffd5b83356001600160401b03811115613309575f5ffd5b8401601f81018613613319575f5ffd5b80356133276131ed82613179565b8082825260208201915060208360051b850101925088831115613348575f5ffd5b6020840193505b8284101561337357833561336281612e68565b82526020938401939091019061334f565b955050505060208401356001600160401b03811115613390575f5ffd5b61339c8682870161327d565b9250506133ab60408501612df0565b90509250925092565b602080825282518282018190525f918401906040840190835b8181101561310257835115158352602093840193909201916001016133cd565b80356001600160601b0381168114612e00575f5ffd5b5f82601f830112613412575f5ffd5b81356134206131ed82613179565b8082825260208201915060208360061b860101925085831115613441575f5ffd5b602085015b838110156132d8576040818803121561345d575f5ffd5b613465613121565b813561347081612e68565b815261347e602083016133ed565b602082015280845250602083019250604081019050613446565b5f5f5f606084860312156134aa575f5ffd5b6134b384612df0565b92506134c1602085016133ed565b915060408401356001600160401b038111156134db575f5ffd5b6134e786828701613403565b9150509250925092565b803563ffffffff81168114612e00575f5ffd5b5f5f5f60408486031215613516575f5ffd5b61351f846134f1565b925060208401356001600160401b03811115613539575f5ffd5b61354586828701612f6f565b9497909650939450505050565b602080825282518282018190525f918401906040840190835b8181101561310257835163ffffffff1683526020938401939092019160010161356b565b5f5f5f606084860312156135a1575f5ffd5b6135aa84612df0565b95602085013595506040909401359392505050565b60608101610aac828463ffffffff815116825263ffffffff60208201511660208301526001600160601b0360408201511660408301525050565b5f5f6040838503121561360a575f5ffd5b61361383612df0565b915061308b602084016133ed565b5f5f5f60408486031215613633575f5ffd5b8335925060208401356001600160401b03811115613539575f5ffd5b5f5f60408385031215613660575f5ffd5b61366983612df0565b915060208301356001600160401b03811115613683575f5ffd5b61368f85828601613403565b9150509250929050565b5f5f5f606084860312156136ab575f5ffd5b6136b484612df0565b92506136c2602085016134f1565b929592945050506040919091013590565b5f5f5f5f608085870312156136e6575f5ffd5b6136ef85612df0565b93506136fd602086016133ed565b925061370b604086016134f1565b915060608501356001600160401b03811115613725575f5ffd5b61373187828801613403565b91505092959194509250565b5f5f5f6060848603121561374f575f5ffd5b8335925061375f60208501612df0565b91506133ab604085016134f1565b5f5f6040838503121561377e575f5ffd5b61378783612df0565b915061308b602084016134f1565b5f5f5f5f608085870312156137a8575f5ffd5b6137b185612df0565b93506137bf602086016134f1565b93969395505050506040820135916060013590565b634e487b7160e01b5f52603260045260245ffd5b5f602082840312156137f8575f5ffd5b61115c826133ed565b634e487b7160e01b5f52601160045260245ffd5b81810381811115610aac57610aac613801565b634e487b7160e01b5f52603160045260245ffd5b5f6020828403121561384c575f5ffd5b815161115c81612e68565b81516001600160a01b0316815260208083015163ffffffff169082015260408101610aac565b5f6020828403121561388d575f5ffd5b8151801515811461115c575f5ffd5b6001600160a01b038416815260ff831660208083019190915260606040830181905283519083018190525f918401906080840190835b818110156138f95783516001600160a01b03168352602093840193909201916001016138d2565b5090979650505050505050565b8082018281125f831280158216821582161715611c1957611c19613801565b5f8151808452602084019350602083015f5b8281101561303c5781516001600160a01b0316865260209586019590910190600101613937565b5f8154808452602084019350825f5260205f205f5b8281101561303c5781546001600160a01b0316865260209095019460019182019101613973565b604081525f6139ac6040830185613925565b828103602084015261223a818561395e565b5f602082840312156139ce575f5ffd5b81516001600160401b038111156139e3575f5ffd5b8201601f810184136139f3575f5ffd5b8051613a016131ed82613179565b8082825260208201915060208360051b850101925086831115613a22575f5ffd5b602084015b83811015613abf5780516001600160401b03811115613a44575f5ffd5b8501603f81018913613a54575f5ffd5b6020810151613a656131ed82613179565b808282526020820191506020808460051b8601010192508b831115613a88575f5ffd5b6040840193505b82841015613aaa578351825260209384019390910190613a8f565b86525050602093840193919091019050613a27565b509695505050505050565b8082028115828204841417610aac57610aac613801565b5f82613afb57634e487b7160e01b5f52601260045260245ffd5b500490565b6001600160601b038181168382160190811115610aac57610aac613801565b80820180821115610aac57610aac613801565b5f81613b4057613b40613801565b505f190190565b8181035f8312801583831316838312821617156106e8576106e8613801565b5f600160ff1b8201613b7a57613b7a613801565b505f0390565b6001600160601b038281168282160390811115610aac57610aac613801565b84516001600160a01b0316815260208086015163ffffffff169082015260a060408201525f613bd160a0830186613925565b8281036060840152613be3818661395e565b91505063ffffffff831660808301529594505050505056fea26469706673582212202b0a19c33d3c55a3ae6288d7f55fbec0ea64f5ccaf5a76847ccf84b4f80c632a64736f6c634300081b0033","sourceMap":"1372:30589:136:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28102:165;;;;;;:::i;:::-;28221:32;;28195:7;28221:32;;;:18;:32;;;;;:39;;28102:165;;;;508:25:237;;;496:2;481:18;28102:165:136;;;;;;;;2547:69:137;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;24399:266:136:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1794:39:237;;;1776:58;;1764:2;1749:18;24399:266:136;1632:208:237;11477:844:136;;;;;;:::i;:::-;;:::i;:::-;;2328:1377;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;25471:202::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;24706:153::-;;;;;;:::i;:::-;24817:28;;24791:7;24817:28;;;:14;:28;;;;;:35;;24706:153;25228:202;;;;;;:::i;:::-;25344:7;25370:32;;;:20;:32;;;;;;;;:46;;;;;;;;;;;;:53;;25228:202;25714:264;;;;;;:::i;:::-;;:::i;997:48:137:-;;1041:4;997:48;;9747:1689:136;;;;;;:::i;:::-;;:::i;2909:86:137:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;1511:43::-;;;;;;;;-1:-1:-1;;;;;8826:32:237;;;8808:51;;8796:2;8781:18;1511:43:137;8640:225:237;4712:1984:136;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1769:65:137:-;;;;;6737:706:136;;;;;;:::i;:::-;;:::i;1133:55:137:-;;1186:2;1133:55;;;;;13637:4:237;13625:17;;;13607:36;;13595:2;13580:18;1133:55:137;13465:184:237;29200:993:136;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3096:77:137:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15113:10:237;15101:23;;;15083:42;;15071:2;15056:18;3096:77:137;14939:192:237;2728:69:137;;;;;;:::i;:::-;;:::i;26577:236:136:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;24900:191::-;;;;;;:::i;:::-;;:::i;:::-;;;;16283:13:237;;-1:-1:-1;;;;;16279:39:237;16261:58;;16379:4;16367:17;;;16361:24;-1:-1:-1;;;;;16357:57:237;16335:20;;;16328:87;;;;16234:18;24900:191:136;16049:372:237;28551:199:136;;;;;;:::i;:::-;;:::i;8323:230::-;;;;;;:::i;:::-;;:::i;3746:925::-;;;;;;:::i;:::-;;:::i;2010:53:137:-;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;2010:53:137;;;8863:843:136;;;;;;:::i;:::-;;:::i;28791:368::-;;;;;;:::i;:::-;;:::i;1630:53:137:-;;;;;7484:798:136;;;;;;:::i;:::-;;:::i;28308:202::-;;;;;;:::i;:::-;;:::i;27230:270::-;;;;;;:::i;:::-;;:::i;1387:46:137:-;;;;;8594:228:136;;;;;;:::i;:::-;;:::i;27541:425::-;;;;;;:::i;:::-;;:::i;26019:517::-;;;;;;:::i;:::-;;:::i;26854:335::-;;;;;;:::i;:::-;;:::i;2547:69:137:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2547:69:137;;;-1:-1:-1;;;;2547:69:137;;-1:-1:-1;;;;;2547:69:137;;-1:-1:-1;2547:69:137;:::o;24399:266:136:-;24550:6;24527:12;1739:32;1758:12;1739:18;:32::i;:::-;24569:12:::1;24586:50;24613:12;24627:8;24586:26;:50::i;:::-;-1:-1:-1::0;24568:68:136;-1:-1:-1;;1781:1:136::1;24399:266:::0;;;;;:::o;11477:844::-;1609:40;:38;:40::i;:::-;11676:12:::1;1739:32;1758:12;1739:18;:32::i;:::-;11720:15:::0;11760:13;11752:46:::2;;;;-1:-1:-1::0;;;11752:46:136::2;;;;;;;;;;;;11816:34:::0;;::::2;11808:71;;;;-1:-1:-1::0;;;11808:71:136::2;;;;;;;;;;;;11933:28;::::0;::::2;11890:40;11933:28:::0;;;:14:::2;:28;::::0;;;;;11972:343:::2;11996:9;11992:1;:13;11972:343;;;12134:14;;12149:1;12134:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;12085:15;12101;;12117:1;12101:18;;;;;;;:::i;:::-;;;;;;;12085:35;;;;;;;;:::i;:::-;;;;;;;;:46;;;:66;;;;;-1:-1:-1::0;;;;;12085:66:136::2;;;;;-1:-1:-1::0;;;;;12085:66:136::2;;;;;;12213:12;12170:134;;;12227:15;12243;;12259:1;12243:18;;;;;;;:::i;:::-;;;;;;;12227:35;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;::::2;:44:::0;-1:-1:-1;;;;;12227:44:136::2;12273:14:::0;;12288:1;12273:17;;::::2;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;12170:134;;;;;;;:::i;:::-;;;;;;;;12007:3;;11972:343;;;;11690:631;;1659:1:::1;11477:844:::0;;;;;:::o;2328:1377::-;2508:15;2525;1508:35;:33;:35::i;:::-;2552:29:::1;2597:13:::0;-1:-1:-1;;;;;2584:34:136;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;2584:34:136::1;-1:-1:-1::0;2552:66:136;-1:-1:-1;2628:27:136::1;2671:13:::0;-1:-1:-1;;;;;2658:34:136;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;2658:34:136::1;-1:-1:-1::0;2628:64:136;-1:-1:-1;2707:9:136::1;2702:951;2722:24:::0;;::::1;2702:951;;;2767:18;2794:13;;2808:1;2794:16;;;;;;;:::i;:::-;::::0;;;::::1;;;;::::0;-1:-1:-1;2825:32:136::1;::::0;-1:-1:-1;2794:16:136;2825:18:::1;:32::i;:::-;3010:19;3031:20;3071:50;3098:12;3112:8;3071:26;:50::i;:::-;3009:112;;;;3143:15;3135:56;;;;-1:-1:-1::0;;;3135:56:136::1;;;;;;;;;;;;3249:17;3269:166;3326:10;3368:12;3408;3269:26;:166::i;:::-;3249:186;;3550:12;3531:13;3545:1;3531:16;;;;;;;;:::i;:::-;;;;;;:31;-1:-1:-1::0;;;;;3531:31:136::1;;;-1:-1:-1::0;;;;;3531:31:136::1;;;::::0;::::1;3593:49;3617:12;3631:10;3593:23;:49::i;:::-;3576:11;3588:1;3576:14;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3576:66:136;;::::1;:14;::::0;;::::1;::::0;;;;;;;:66;-1:-1:-1;;2748:3:136::1;::::0;;::::1;::::0;-1:-1:-1;2702:951:136::1;::::0;-1:-1:-1;2702:951:136::1;;-1:-1:-1::0;3671:13:136;;;;-1:-1:-1;2328:1377:136;-1:-1:-1;;;;;2328:1377:136:o;25471:202::-;25620:32;;;;:20;:32;;;;;;;;:46;;;;;;;;;;25613:53;;;;;;;;;;;;;;;;;25581:20;;25613:53;;25620:46;;25613:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;25613:53:136;;;;;;;-1:-1:-1;;;25613:53:136;;-1:-1:-1;;;;;25613:53:136;;;;;;;;;;;;;;;;;;;;;;25471:202;;;;;:::o;25714:264::-;25824:6;25842:38;25883:46;25904:10;25916:12;25883:20;:46::i;:::-;25946:25;;;;25714:264;-1:-1:-1;;;;25714:264:136:o;9747:1689::-;1609:40;:38;:40::i;:::-;9898:12:::1;1739:32;1758:12;1739:18;:32::i;:::-;9947:22:::0;;9987:18;9979:51:::2;;;;-1:-1:-1::0;;;9979:51:136::2;;;;;;;;;;;;10084:28;::::0;::::2;10041:40;10084:28:::0;;;:14:::2;:28;::::0;;;;;;;10165:19:::2;:33:::0;;;;;10084:28;;10265:14;-1:-1:-1;;;;;10249:31:136;::::2;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;10249:31:136::2;-1:-1:-1::0;10208:72:136;-1:-1:-1;10296:9:136::2;10291:801;10315:14;10311:1;:18;10291:801;;;10375:15;10391;10407:1;10391:18;;;;;;;;:::i;:::-;;;;;;;10375:35;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;::::2;:44:::0;10350:22;;-1:-1:-1;;;;;10375:44:136;;::::2;::::0;10350:19;;10370:1;;10350:22;::::2;;;;;:::i;:::-;;;;;;:69;-1:-1:-1::0;;;;;10350:69:136::2;;;-1:-1:-1::0;;;;;10350:69:136::2;;;::::0;::::2;10481:12;10438:115;;;10495:15;10511;10527:1;10511:18;;;;;;;;:::i;:::-;;;;;;;10495:35;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;;::::2;:44:::0;10438:115:::2;::::0;-1:-1:-1;;;;;10495:44:136;;::::2;8808:51:237::0;;8781:18;10438:115:136::2;;;;;;;10615:12;10572:118;;;10629:15;10645;10661:1;10645:18;;;;;;;;:::i;:::-;;;;;;;10629:35;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;;;;::::2;:44:::0;10572:118:::2;::::0;;-1:-1:-1;;;;;10629:44:136;;::::2;21121:51:237::0;;21188:18;;;21181:34;;;;21094:18;10572:118:136::2;;;;;;;10853:22:::0;;10837:15;;10853:26:::2;::::0;10878:1:::2;::::0;10853:26:::2;:::i;:::-;10837:43;;;;;;;;:::i;:::-;;;;;;;;10799:15;10815;10831:1;10815:18;;;;;;;;:::i;:::-;;;;;;;10799:35;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;:81;;:35;::::2;:81:::0;;-1:-1:-1;;;;;;10799:81:136::2;-1:-1:-1::0;;;;;10799:81:136;;::::2;::::0;;::::2;::::0;;;;-1:-1:-1;;;;;;;;10799:81:136;;;::::2;;;;::::0;;10894:21;;:15;;:21;::::2;;;;:::i;:::-;;::::0;;;::::2;::::0;;;;-1:-1:-1;;10894:21:136;;;;;;;;;;11009:27;;10988:20;;11009:31:::2;::::0;10894:21:::2;::::0;11009:31:::2;:::i;:::-;10988:53;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;10988:53:136::2;10929:20;10950:15;10966:1;10950:18;;;;;;;;:::i;:::-;;;;;;;10929:40;;;;;;;;:::i;:::-;;;;;;;;;:112;;;;;-1:-1:-1::0;;;;;10929:112:136::2;;;;;-1:-1:-1::0;;;;;10929:112:136::2;;;;;;11055:20;:26;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;;-1:-1:-1;;11055:26:136;;;;;-1:-1:-1;;;;;;11055:26:136::2;::::0;;;;;::::2;10331:3;10291:801;;;;11102:11;11116:19;-1:-1:-1::0;;;;;11116:23:136::2;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11187:30;::::0;;;;::::2;::::0;;-1:-1:-1;;;;;11187:30:136;;::::2;::::0;;::::2;::::0;::::2;;::::0;::::2;::::0;11155:63;;-1:-1:-1;;;11155:63:136;;11187:30;;-1:-1:-1;11155:17:136::2;:31:::0;;::::2;::::0;::::2;::::0;:63:::2;::::0;::::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11151:279;;;11234:185;::::0;-1:-1:-1;;;11234:185:136;;-1:-1:-1;;;;;11234:17:136::2;:49;::::0;::::2;::::0;:185:::2;::::0;11307:3;;11343:12;;11385:19;;11234:185:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11151:279;9912:1524;;;;;1659:1:::1;9747:1689:::0;;:::o;4712:1984::-;4900:13;1508:35;:33;:35::i;:::-;4925:34:::1;4973:9;:16;-1:-1:-1::0;;;;;4962:28:136::1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;4962:28:136::1;;4925:65;;5371:32;5390:12;5371:18;:32::i;:::-;5571:28;5601:30;5647:52;5675:12;5689:9;5647:27;:52::i;:::-;5570:129:::0;;-1:-1:-1;5570:129:136;-1:-1:-1;5710:22:136::1;::::0;5948:584:::1;5972:9;:16;5968:1;:20;5948:584;;;6014:16;6031:1;6014:19;;;;;;;;:::i;:::-;;;;;;;6009:126;;6071:1;6053:12;6066:1;6053:15;;;;;;;;:::i;:::-;;;;;;:19;-1:-1:-1::0;;;;;6053:19:136::1;;;-1:-1:-1::0;;;;;6053:19:136::1;;;::::0;::::1;6116:4;6090:20;6111:1;6090:23;;;;;;;;:::i;:::-;:30:::0;::::1;;:23;::::0;;::::1;::::0;;;;;;;:30;6009:126:::1;6284:17;6304:173;6361:11;6373:1;6361:14;;;;;;;;:::i;:::-;;;;;;;6407:12;6447;6460:1;6447:15;;;;;;;;:::i;:::-;;;;;;;6304:26;:173::i;:::-;6284:193:::0;-1:-1:-1;6492:29:136::1;6284:193:::0;6492:29;::::1;:::i;:::-;::::0;-1:-1:-1;;5990:3:136::1;;5948:584;;;;6597:54;6621:12;6635:15;6597:23;:54::i;:::-;-1:-1:-1::0;6669:20:136;;-1:-1:-1;;;;1553:1:136::1;4712:1984:::0;;;;;:::o;6737:706::-;1508:35;:33;:35::i;:::-;24230:32;;;24207:4;24230:32;;;:18;:32;;;;;:39;:44;6946:60:::1;;;;-1:-1:-1::0;;;6946:60:136::1;;;;;;;;;;;;7016:49;7035:12;7049:15;7016:18;:49::i;:::-;7075:53;7101:12;7115;7075:25;:53::i;:::-;7138:74;7152:12;7166:45;7138:13;:74::i;:::-;-1:-1:-1::0;;7223:32:136::1;;;::::0;;;:18:::1;:32;::::0;;;;;;;7274:152;;::::1;::::0;::::1;::::0;;::::1;7330:12;7274:152:::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;7223:213;;;;::::1;::::0;;;;;;;;;;;;;;::::1;::::0;;;;;;-1:-1:-1;;;;;7223:213:136::1;-1:-1:-1::0;;;7223:213:136::1;-1:-1:-1::0;;;;;;;;7223:213:136;;::::1;-1:-1:-1::0;;;7223:213:136::1;-1:-1:-1::0;;7223:213:136;;;;;;::::1;::::0;;;;::::1;::::0;;;::::1;;::::0;;6737:706::o;29200:993::-;29338:15;29365:23;29404:13;-1:-1:-1;;;;;29391:34:136;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;29391:34:136;-1:-1:-1;29365:60:136;-1:-1:-1;29440:9:136;29435:728;29455:24;;;29435:728;;;29500:18;29527:13;;29541:1;29527:16;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;29558:32:136;;-1:-1:-1;29527:16:136;29558:18;:32::i;:::-;29629;;;;;;;:18;:32;;;;;:35;;:68;;;;:32;:35;;;;:::i;:::-;;;;;;;;;;:53;;;:68;;29604:144;;;;-1:-1:-1;;;29604:144:136;;;;;;;;;;;;29779:32;;;29762:14;29779:32;;;:18;:32;;;;;:39;;29832:321;29856:6;29852:1;:10;29832:321;;;29912:32;;;;;;;:18;:32;;;;;;;;:105;;;;29945:10;29954:1;29945:6;:10;:::i;:::-;:14;;;;:::i;:::-;29912:48;;;;;;;;:::i;:::-;;;;;;;;;;:66;;;:105;29887:252;;30091:1;30078:10;30087:1;30078:6;:10;:::i;:::-;:14;;;;:::i;:::-;30058:7;30066:1;30058:10;;;;;;;;:::i;:::-;;;;;;:35;;;;;;;;;;;30115:5;;29887:252;29864:3;;29832:321;;;-1:-1:-1;;;29481:3:136;;29435:728;;;-1:-1:-1;30179:7:136;29200:993;-1:-1:-1;;;;29200:993:136:o;2728:69:137:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2728:69:137;;-1:-1:-1;2728:69:137;;-1:-1:-1;2728:69:137:o;26577:236:136:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;26753:32:136;;;:20;:32;;;;;:46;;;;;;;;;;;:53;;26800:5;;26753:53;;;;;;:::i;:::-;;;;;;;;;;26746:60;;;;;;;;26753:53;;;;26746:60;;;;;;;-1:-1:-1;;;26746:60:136;;;;;;;;;;-1:-1:-1;;;26746:60:136;;;-1:-1:-1;;;;;26746:60:136;;;;;;;;;26577:236;-1:-1:-1;;;;26577:236:136:o;24900:191::-;-1:-1:-1;;;;;;;;;;;;;;;;;25049:28:136;;;;;;;:14;:28;;;;;:35;;25078:5;;25049:35;;;;;;:::i;:::-;;;;;;;;;;25042:42;;;;;;;;;25049:35;;25042:42;-1:-1:-1;;;;;25042:42:136;;;;-1:-1:-1;;;25042:42:136;;-1:-1:-1;;;;;25042:42:136;;;;;;;;;24900:191;-1:-1:-1;;;24900:191:136:o;28551:199::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;28704:32:136;;;;;:18;:32;;;;;;:39;;28737:5;;28704:39;;;;;;:::i;:::-;;;;;;;;;;28697:46;;;;;;;;28704:39;;;;28697:46;;;;;;;-1:-1:-1;;;28697:46:136;;;;;;;;;;-1:-1:-1;;;28697:46:136;;;-1:-1:-1;;;;;28697:46:136;;;;;;;;;28551:199;-1:-1:-1;;;28551:199:136:o;8323:230::-;1609:40;:38;:40::i;:::-;8469:12:::1;1739:32;1758:12;1739:18;:32::i;:::-;8493:53:::2;8519:12;8533;8493:25;:53::i;:::-;1659:1:::1;8323:230:::0;;:::o;3746:925::-;1508:35;:33;:35::i;:::-;4077:9:::1;4072:593;4092:24:::0;;::::1;4072:593;;;4137:18;4164:13;;4178:1;4164:16;;;;;;;:::i;:::-;::::0;;;::::1;;;;::::0;-1:-1:-1;4195:32:136::1;::::0;-1:-1:-1;4164:16:136;4195:18:::1;:32::i;:::-;4332:17;4352:155;4409:10;4451:12;4491:1;4352:26;:155::i;:::-;4332:175;;4605:49;4629:12;4643:10;4605:23;:49::i;:::-;-1:-1:-1::0;;;4118:3:136::1;;4072:593;;;;3746:925:::0;;;:::o;8863:843::-;1609:40;:38;:40::i;:::-;9018:12:::1;1739:32;1758:12;1739:18;:32::i;:::-;9042:49:::2;9061:12;9075:15;9042:18;:49::i;:::-;9102:22;9127:15;:22;9102:47;;9160:11;9174:19;-1:-1:-1::0;;;;;9174:23:136::2;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9245:30;::::0;;;;::::2;::::0;;-1:-1:-1;;;;;9245:30:136;;::::2;::::0;;::::2;::::0;::::2;;::::0;::::2;::::0;9213:63;;-1:-1:-1;;;9213:63:136;;9245:30;;-1:-1:-1;9213:17:136::2;:31:::0;;::::2;::::0;::::2;::::0;:63:::2;::::0;::::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9209:491;;;9292:34;9345:14;-1:-1:-1::0;;;;;9329:31:136::2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;9329:31:136::2;-1:-1:-1::0;9292:68:136;-1:-1:-1;9379:9:136::2;9374:126;9398:14;9394:1;:18;9374:126;;;9458:15;9474:1;9458:18;;;;;;;;:::i;:::-;;;;;;;:27;;;9437:15;9453:1;9437:18;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;9437:48:136;;::::2;:18;::::0;;::::2;::::0;;;;;;;:48;9414:3:::2;;9374:126;;;-1:-1:-1::0;9513:176:136::2;::::0;-1:-1:-1;;;9513:176:136;;-1:-1:-1;;;;;9513:17:136::2;:44;::::0;::::2;::::0;:176:::2;::::0;9581:3;;9617:12;;9659:15;;9513:176:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9278:422;9209:491;9032:674;;1659:1:::1;8863:843:::0;;:::o;28791:368::-;29000:32;;;28944:6;29000:32;;;:18;:32;;;;;:39;;28944:6;;29000:32;29033:5;;29000:39;;;;;;:::i;:::-;;;;;;;;;;28962:77;;;;;;;;29000:39;;;;28962:77;;;;;;;-1:-1:-1;;;28962:77:136;;;;;;;;;;-1:-1:-1;;;;;;;;28962:77:136;;;;;;;;;;;;-1:-1:-1;29049:64:136;28962:77;29101:11;29049:33;:64::i;7484:798::-;1508:35;:33;:35::i;:::-;24230:32;;;24207:4;24230:32;;;:18;:32;;;;;:39;:44;7725:60:::1;;;;-1:-1:-1::0;;;7725:60:136::1;;;;;;;;;;;;7795:49;7814:12;7828:15;7795:18;:49::i;:::-;7854:53;7880:12;7894;7854:25;:53::i;:::-;7917:74;7931:12;7945:45;7917:13;:74::i;:::-;8001:50;8021:12;8035:15;8001:19;:50::i;:::-;-1:-1:-1::0;;;8062:32:136::1;;;::::0;;;:18:::1;:32;::::0;;;;;;;8113:152;;::::1;::::0;::::1;::::0;;::::1;8169:12;8113:152:::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;8062:213;;;;::::1;::::0;;;;;;;;;;;;;;::::1;::::0;;;;;;-1:-1:-1;;;;;8062:213:136::1;-1:-1:-1::0;;;8062:213:136::1;-1:-1:-1::0;;;;;;;;8062:213:136;;::::1;-1:-1:-1::0;;;8062:213:136::1;-1:-1:-1::0;;8062:213:136;;;;;;::::1;::::0;;;;::::1;::::0;;;::::1;;::::0;;7484:798::o;28308:202::-;28420:32;;;28395:6;28420:32;;;:18;:32;;;;;;;28453:39;;28420:32;;28453:43;;;:::i;:::-;28420:77;;;;;;;;:::i;:::-;;;;;;;;;;:83;-1:-1:-1;;;28420:83:136;;-1:-1:-1;;;;;28420:83:136;;;-1:-1:-1;;28308:202:136:o;27230:270::-;27385:6;27410:83;27455:10;27467:12;27481:11;27410:44;:83::i;:::-;27403:90;27230:270;-1:-1:-1;;;;27230:270:136:o;8594:228::-;1609:40;:38;:40::i;:::-;8740:12:::1;1739:32;1758:12;1739:18;:32::i;:::-;8764:51:::2;8784:12;8798:16;8764:19;:51::i;27541:425::-:0;27716:6;27787:32;;;:20;:32;;;;;;;;:46;;;;;;;;;;:53;;27716:6;;27787:46;27834:5;;27787:53;;;;;;:::i;:::-;;;;;;;;;;27734:106;;;;;;;;27787:53;;;;27734:106;;;;;;;-1:-1:-1;;;27734:106:136;;;;;;;;;;-1:-1:-1;;;;;;;;27734:106:136;;;;;;;;;;;;-1:-1:-1;27850:67:136;27734:106;27905:11;27850:33;:67::i;:::-;27934:25;;;;27541:425;-1:-1:-1;;;;;27541:425:136:o;26019:517::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;26186:32:136;;;:20;:32;;;;;:46;;;;;;;;;;:53;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;26186:53:136;26301:18;;;26297:233;;26342:19;-1:-1:-1;26335:26:136;;-1:-1:-1;26335:26:136;26297:233;26414:32;;;;:20;:32;;;;;;;;:46;;;;;;;;;;26461:17;26477:1;26461:13;:17;:::i;:::-;26414:65;;;;;;;;:::i;:::-;;;;;;;;;;26392:87;;;;;;;;26414:65;;;;26392:87;;;;;;;-1:-1:-1;;;26392:87:136;;;;;;;;;;-1:-1:-1;;;;;;;;26392:87:136;;;;;;;;;;;;-1:-1:-1;26493:26:136;;-1:-1:-1;;26493:26:136;26297:233;26152:384;;26019:517;;;;:::o;26854:335::-;26998:6;27023:32;;;:20;:32;;;;;;;;:46;;;;;;;;;;27070:105;27044:10;27056:12;27154:11;27070:44;:105::i;:::-;27023:153;;;;;;;;;;:::i;:::-;;;;;;;;;;:159;-1:-1:-1;;;27023:159:136;;-1:-1:-1;;;;;27023:159:136;;26854:335;-1:-1:-1;;;;26854:335:136:o;31808:151::-;24230:32;;;24207:4;24230:32;;;:18;:32;;;;;:39;31894:58;;;;-1:-1:-1;;;31894:58:136;;;;;;;;;;;;31808:151;:::o;23635:420::-;23815:16;;;23829:1;23815:16;;;;;;;;;23762:6;;;;;;23815:16;;;;;;;;;;;-1:-1:-1;23815:16:136;23786:45;;23856:8;23841:9;23851:1;23841:12;;;;;;;;:::i;:::-;;;;;;:23;-1:-1:-1;;;;;23841:23:136;;;-1:-1:-1;;;;;23841:23:136;;;;;23875;23900:30;23946:52;23974:12;23988:9;23946:27;:52::i;:::-;23874:124;;;;24016:7;24024:1;24016:10;;;;;;;;:::i;:::-;;;;;;;24028:16;24045:1;24028:19;;;;;;;;:::i;:::-;;;;;;;24008:40;;;;;;;23635:420;;;;;;:::o;31579:223::-;31704:19;-1:-1:-1;;;;;31688:43:136;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;31674:59:136;:10;-1:-1:-1;;;;;31674:59:136;;31653:142;;;;-1:-1:-1;;;31653:142:136;;;;;;;;;;;;31579:223::o;31411:162::-;31488:10;-1:-1:-1;;;;;31510:19:136;31488:42;;31480:86;;;;-1:-1:-1;;;31480:86:136;;;;;;;;;;;13700:1970;13841:6;13909:32;;;:20;:32;;;;;;;;:46;;;;;;;;;;:53;13841:6;;13977:18;;;13973:1509;;14072:32;;;;:20;:32;;;;;;;;:46;;;;;;;;;;14141:175;;;;;;;;14201:12;14141:175;;;;;;;;;;-1:-1:-1;;;;;14141:175:136;;;;;;;;;14072:258;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;14072:258:136;-1:-1:-1;;;;;;;;14072:258:136;;;-1:-1:-1;;;14072:258:136;-1:-1:-1;;14072:258:136;;;;;;;;;;;;;;;;;;;13973:1509;;;14436:30;14485:32;;;:20;:32;;;;;;;;:46;;;;;;;;;;14532:17;14548:1;14532:13;:17;:::i;:::-;14485:65;;;;;;;;:::i;:::-;;;;;;;;;;14576:16;;-1:-1:-1;;;;;;;;14576:16:136;;;;;;-1:-1:-1;14485:65:136;;-1:-1:-1;14675:21:136;;;;14671:68;;14723:1;14716:8;;;;;;;14671:68;14964:28;;:52;15003:12;14964:52;;:28;;:52;14960:512;;15036:27;;-1:-1:-1;;;;;;;;15036:27:136;-1:-1:-1;;;;;;;;15036:27:136;;;;;;14960:512;;;15102:55;;-1:-1:-1;;15102:55:136;-1:-1:-1;;;15144:12:136;15102:55;;;;;;;;;;;;;-1:-1:-1;15175:32:136;;;:20;:32;;;;;;;;:46;;;;;;;;;;15248:191;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15248:191:136;;;;;;;;;15175:282;;-1:-1:-1;15175:282:136;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15175:282:136;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;15175:282:136;-1:-1:-1;;;15175:282:136;;;;;;;;;;;14960:512;14347:1135;13973:1509;15542:55;;;23979:4:237;23967:17;;23949:36;;-1:-1:-1;;;;;24021:39:237;;24016:2;24001:18;;23994:67;15562:10:136;;15542:55;;23922:18:237;15542:55:136;;;;;;;15614:49;15637:9;15653:8;15614:15;:49::i;:::-;15607:56;13700:1970;-1:-1:-1;;;;;;13700:1970:136:o;15814:1332::-;16014:32;;;15926:6;16014:32;;;:18;:32;;;;;;;:39;;;15926:6;;16014:32;16134:17;;16014:39;16134:17;:::i;:::-;16101:51;;;;;;;;:::i;:::-;;;;;;;;16063:89;;16214:10;16228:1;16214:15;16210:74;;16252:21;-1:-1:-1;;;16252:21:136;;-1:-1:-1;;;;;16252:21:136;;-1:-1:-1;16245:28:136;;-1:-1:-1;16245:28:136;16210:74;16409:21;;16379:15;;16397:46;;-1:-1:-1;;;16409:21:136;;-1:-1:-1;;;;;16409:21:136;16432:10;16397:11;:46::i;:::-;16649:33;;16379:64;;-1:-1:-1;16649:57:136;16693:12;16649:57;;:33;;:57;16645:469;;16722:32;;-1:-1:-1;;;;;;;;16722:32:136;-1:-1:-1;;;;;;;;16722:32:136;;;;;;16645:469;;;16785:60;;;16832:12;16785:60;;-1:-1:-1;;;16785:60:136;;;-1:-1:-1;;16785:60:136;;;;;;;;;16859:32;;;16785:37;16859:32;;;-1:-1:-1;16859:32:136;;;;;;;;16914:175;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16914:175:136;;;;;;;;;16859:244;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;16859:244:136;-1:-1:-1;;;;;;;;16859:244:136;;;;;;-1:-1:-1;;16859:244:136;;;;;;;;;;;;;;;;;;;;;;16645:469;17131:8;15814:1332;-1:-1:-1;;;;;15814:1332:136:o;21490:2139::-;21628:15;21645:13;21670:23;21709:9;:16;-1:-1:-1;;;;;21696:30:136;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21696:30:136;;21670:56;;21736:30;21780:9;:16;-1:-1:-1;;;;;21769:28:136;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;21769:28:136;;21736:61;;21808:20;21831:34;21852:12;24817:28;;24791:7;24817:28;;;:14;:28;;;;;:35;;24706:153;21831:34;21922:28;;;21875:44;21922:28;;;:14;:28;;;;;;;;21875:75;;;;;;;;;;;;;;;;;21808:57;;-1:-1:-1;21875:44:136;;:75;;21922:28;21875:44;;:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21875:75:136;;;;-1:-1:-1;;;21875:75:136;;-1:-1:-1;;;;;21875:75:136;;;;;;;;;;;;;;;;;;;;;;21960:33;22044:45;22008:81;;;;;;;;:::i;:::-;:32;;;;;;;;:18;:32;;;;;;;;:81;;;;;;;:::i;:::-;;22004:474;;22198:54;22228:12;22242:9;22198:29;:54::i;:::-;22181:71;;22004:474;;;22433:33;;;;;;;:19;:33;;;;;;;;;22392:75;;-1:-1:-1;;;22392:75:136;;-1:-1:-1;;;;;22392:10:136;:29;;;;:75;;22422:9;;22433:33;22392:75;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22392:75:136;;;;;;;;;;;;:::i;:::-;22359:108;;22004:474;22592:15;22587:991;22623:9;:16;22613:7;:26;22587:991;;;22807:18;22802:594;22844:12;22831:10;:25;22802:594;;;22937:43;22983:20;23004:10;22983:32;;;;;;;;:::i;:::-;;;;;;;22937:78;;23146:1;23108:14;23123:7;23108:23;;;;;;;;:::i;:::-;;;;;;;23132:10;23108:35;;;;;;;;:::i;:::-;;;;;;;:39;23104:278;;;1041:4:137;23261:21:136;:32;;;-1:-1:-1;;;;;23223:70:136;:14;23238:7;23223:23;;;;;;;;:::i;:::-;;;;;;;23247:10;23223:35;;;;;;;;:::i;:::-;;;;;;;:70;;;;:::i;:::-;:118;;;;:::i;:::-;23171:7;23179;23171:16;;;;;;;;:::i;:::-;;;;;;:192;;;;;;;:::i;:::-;-1:-1:-1;;;;;23171:192:136;;;-1:-1:-1;23104:278:136;-1:-1:-1;22858:12:136;;22802:594;;;-1:-1:-1;23532:35:136;;;:21;:35;;;;;;;;;;;23512:16;;-1:-1:-1;;;;;23532:35:136;;;;23512:7;;23520;;23512:16;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;23512:55:136;;;23484:16;23501:7;23484:25;;;;;;;;:::i;:::-;:83;;;:25;;;;;;;;;;;:83;22641:9;;22587:991;;;-1:-1:-1;23596:7:136;;23605:16;;-1:-1:-1;21490:2139:136;;-1:-1:-1;;;;;;21490:2139:136:o;17688:1379::-;17851:1;17826:15;:22;:26;17818:59;;;;-1:-1:-1;;;17818:59:136;;;;;;;;;;;;17912:22;;17972:28;;;17887:22;17972:28;;;:14;:28;;;;;;;;:35;;18038:34;17912:22;17972:35;18038:34;:::i;:::-;:66;;18017:137;;;;-1:-1:-1;;;18017:137:136;;;;;;;;;;;;18169:9;18164:897;18188:14;18184:1;:18;18164:897;;;18347:9;18342:251;18367:21;18387:1;18367:17;:21;:::i;:::-;18362:1;:27;18342:251;;;18487:15;18503:1;18487:18;;;;;;;;:::i;:::-;;;;;;;:27;;;-1:-1:-1;;;;;18443:71:136;:14;:28;18458:12;18443:28;;;;;;;;;;;;;;;18472:1;18443:31;;;;;;;;:::i;:::-;;;;;;;;;;:40;-1:-1:-1;;;;;18443:40:136;:71;18414:164;;;;-1:-1:-1;;;18414:164:136;;;;;;;;;;;;18391:3;;18342:251;;;;18646:1;18614:15;18630:1;18614:18;;;;;;;;:::i;:::-;;;;;;;:29;;;-1:-1:-1;;;;;18614:33:136;;18606:65;;;;-1:-1:-1;;;18606:65:136;;;;;;;;;;;;18685:28;;;;;;;:14;:28;;;;;18719:18;;:15;;18735:1;;18719:18;;;;;;:::i;:::-;;;;;;;;;;;;18685:53;;;;;;;-1:-1:-1;18685:53:136;;;;;;;;;;;;-1:-1:-1;;;;;18685:53:136;-1:-1:-1;;;18685:53:136;-1:-1:-1;;;;;18685:53:136;;;;;;;;;;18752:33;;;;;:19;:33;;;;;18791:18;;:15;;18807:1;;18791:18;;;;;;:::i;:::-;;;;;;;;;;;;:27;18752:67;;;;;;;-1:-1:-1;18752:67:136;;;;;;;;;;-1:-1:-1;;;;;;18752:67:136;-1:-1:-1;;;;;18752:67:136;;;;;;;;;18874:18;;18838:64;;;;;;18874:18;;18890:1;;18874:18;;;;;;:::i;:::-;;;;;;;;;;;;:27;18838:64;;-1:-1:-1;;;;;8826:32:237;;;8808:51;;8781:18;18838:64:136;;;;;;;18964:12;18921:129;;;18978:15;18994:1;18978:18;;;;;;;;:::i;:::-;;;;;;;:27;;;19007:15;19023:1;19007:18;;;;;;;;:::i;:::-;;;;;;;:29;;;18921:129;;;;;;;:::i;:::-;;;;;;;;18204:3;;18164:897;;13292:223;13387:35;;;:21;:35;;;;;;;;;;;;:50;;-1:-1:-1;;13387:50:136;-1:-1:-1;;;;;13387:50:136;;;;;;;;13452:56;;1776:58:237;;;13452:56:136;;1749:18:237;13452:56:136;;;;;;;13292:223;;:::o;30456:195::-;30560:32;;;;;;;:18;:32;;;;;:45;;30595:10;;30560:32;-1:-1:-1;;30560:45:136;;30595:10;30560:45;;;;;;;;:::i;:::-;;;;;;30620:24;30633:10;30620:24;;;;;;:::i;:::-;;;;;;;;30456:195;;:::o;19721:656::-;20138:11;:29;;;20123:44;;:11;:44;;;;20115:75;;;;-1:-1:-1;;;20115:75:136;;;;;;;;;;;;20221:33;;;;:38;;;;:105;;;20293:11;:33;;;20279:47;;:11;:47;;;20221:105;20200:170;;;;-1:-1:-1;;;20200:170:136;;;;;;;;;;;;19721:656;;:::o;30929:476::-;31079:45;31043:32;;;;;;;;:18;:32;;;;;;;;:81;;;;;;;:::i;:::-;;31022:146;;;;-1:-1:-1;;;31022:146:136;;;;;;;;;;;;31204:46;;;31178:23;31204:46;;;:32;:46;;;;;;;;;;;-1:-1:-1;;31260:65:136;;31204:46;31260:65;;;;;;;;;31340:58;;31204:46;;;;28276:42:237;;;28334:18;;;28327:51;31204:46:136;;31340:58;;28249:18:237;31340:58:136;;;;;;;31012:393;30929:476;;:::o;12407:879::-;12574:6;12609:32;;;:20;:32;;;;;;;;:46;;;;;;;;;;:53;;12781:256;12806:5;;12781:256;;12853:32;;;;:20;:32;;;;;;;;:46;;;;;;;;;;:106;;;;12900:5;12904:1;12900;:5;:::i;:::-;12853:53;;;;;;;;:::i;:::-;;;;;;;;;;:71;;;:106;12832:195;;13006:5;13010:1;13006;:5;:::i;:::-;12992:20;;;;;;12832:195;12813:3;;;;:::i;:::-;;;;12781:256;;;-1:-1:-1;13118:161:136;;-1:-1:-1;;;13118:161:136;;28732:2:237;13118:161:136;;;28714:21:237;28771:3;28751:18;;;28744:31;28811:34;28791:18;;;28784:62;28882:34;28862:18;;;28855:62;28954:34;28933:19;;;28926:63;29026:34;29005:19;;;28998:63;-1:-1:-1;;;29077:19:237;;;29070:32;29119:19;;13118:161:136;;;;;;;19161:149;19234:6;19259:44;-1:-1:-1;;;;;19289:13:136;;;;19266:12;;19259:44;:::i;19390:242::-;19462:6;19492:1;19484:5;:9;19480:146;;;19539:6;19540:5;19539:6;:::i;:::-;19516:31;;:5;:31;:::i;:::-;19509:38;;;;19480:146;19585:30;19608:5;19585;:30;:::i;20522:553::-;20727:46;;;20684:18;20727:46;;;:32;:46;;;;;;20654:18;;20684;20712:61;;20727:46;;20712:12;:61;:::i;:::-;20684:90;;20785:34;20822:17;-1:-1:-1;;;;;20822:42:136;;20878:52;;;;;;;;20890:19;-1:-1:-1;;;;;20890:23:136;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;20878:52:136;;;;;;;;;;;;;-1:-1:-1;20967:33:136;;;:19;:33;;;;;;;;;20822:213;;-1:-1:-1;;;;;;20822:213:136;;;;;;;;;;20944:9;;20967:33;21014:11;;20822:213;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20822:213:136;;;;;;;;;;;;:::i;14:156:237:-;80:20;;140:4;129:16;;119:27;;109:55;;160:1;157;150:12;109:55;14:156;;;:::o;175:182::-;232:6;285:2;273:9;264:7;260:23;256:32;253:52;;;301:1;298;291:12;253:52;324:27;341:9;324:27;:::i;544:296::-;610:6;618;671:2;659:9;650:7;646:23;642:32;639:52;;;687:1;684;677:12;639:52;710:27;727:9;710:27;:::i;:::-;700:37;806:2;791:18;;;;778:32;;-1:-1:-1;;;544:296:237:o;845:324::-;-1:-1:-1;;;;;1054:32:237;;;;1036:51;;-1:-1:-1;;;;;1123:39:237;1118:2;1103:18;;1096:67;1024:2;1009:18;;845:324::o;1174:131::-;-1:-1:-1;;;;;1249:31:237;;1239:42;;1229:70;;1295:1;1292;1285:12;1310:317;1376:6;1384;1437:2;1425:9;1416:7;1412:23;1408:32;1405:52;;;1453:1;1450;1443:12;1405:52;1476:27;1493:9;1476:27;:::i;:::-;1466:37;;1553:2;1542:9;1538:18;1525:32;1566:31;1591:5;1566:31;:::i;:::-;1616:5;1606:15;;;1310:317;;;;;:::o;1845:367::-;1908:8;1918:6;1972:3;1965:4;1957:6;1953:17;1949:27;1939:55;;1990:1;1987;1980:12;1939:55;-1:-1:-1;2013:20:237;;-1:-1:-1;;;;;2045:30:237;;2042:50;;;2088:1;2085;2078:12;2042:50;2125:4;2117:6;2113:17;2101:29;;2185:3;2178:4;2168:6;2165:1;2161:14;2153:6;2149:27;2145:38;2142:47;2139:67;;;2202:1;2199;2192:12;2217:837;2345:6;2353;2361;2369;2377;2430:2;2418:9;2409:7;2405:23;2401:32;2398:52;;;2446:1;2443;2436:12;2398:52;2469:27;2486:9;2469:27;:::i;:::-;2459:37;;2547:2;2536:9;2532:18;2519:32;-1:-1:-1;;;;;2566:6:237;2563:30;2560:50;;;2606:1;2603;2596:12;2560:50;2645:70;2707:7;2698:6;2687:9;2683:22;2645:70;:::i;:::-;2734:8;;-1:-1:-1;2619:96:237;-1:-1:-1;;2822:2:237;2807:18;;2794:32;-1:-1:-1;;;;;2838:32:237;;2835:52;;;2883:1;2880;2873:12;2835:52;2922:72;2986:7;2975:8;2964:9;2960:24;2922:72;:::i;:::-;2217:837;;;;-1:-1:-1;2217:837:237;;-1:-1:-1;3013:8:237;;2896:98;2217:837;-1:-1:-1;;;2217:837:237:o;3059:347::-;3110:8;3120:6;3174:3;3167:4;3159:6;3155:17;3151:27;3141:55;;3192:1;3189;3182:12;3141:55;-1:-1:-1;3215:20:237;;-1:-1:-1;;;;;3247:30:237;;3244:50;;;3290:1;3287;3280:12;3244:50;3327:4;3319:6;3315:17;3303:29;;3379:3;3372:4;3363:6;3355;3351:19;3347:30;3344:39;3341:59;;;3396:1;3393;3386:12;3411:664;3499:6;3507;3515;3523;3576:2;3564:9;3555:7;3551:23;3547:32;3544:52;;;3592:1;3589;3582:12;3544:52;3631:9;3618:23;3650:31;3675:5;3650:31;:::i;:::-;3700:5;-1:-1:-1;3778:2:237;3763:18;;3750:32;;-1:-1:-1;3859:2:237;3844:18;;3831:32;-1:-1:-1;;;;;3875:30:237;;3872:50;;;3918:1;3915;3908:12;3872:50;3957:58;4007:7;3998:6;3987:9;3983:22;3957:58;:::i;:::-;3411:664;;;;-1:-1:-1;4034:8:237;-1:-1:-1;;;;3411:664:237:o;4080:452::-;4132:3;4170:5;4164:12;4197:6;4192:3;4185:19;4229:4;4224:3;4220:14;4213:21;;4268:4;4261:5;4257:16;4291:1;4301:206;4315:6;4312:1;4309:13;4301:206;;;4380:13;;-1:-1:-1;;;;;4376:46:237;4364:59;;4452:4;4443:14;;;;4480:17;;;;4337:1;4330:9;4301:206;;;-1:-1:-1;4523:3:237;;4080:452;-1:-1:-1;;;;4080:452:237:o;4537:459::-;4790:2;4779:9;4772:21;4753:4;4816:55;4867:2;4856:9;4852:18;4844:6;4816:55;:::i;:::-;4919:9;4911:6;4907:22;4902:2;4891:9;4887:18;4880:50;4947:43;4983:6;4975;4947:43;:::i;5001:296::-;5067:6;5075;5128:2;5116:9;5107:7;5103:23;5099:32;5096:52;;;5144:1;5141;5134:12;5096:52;5189:23;;;-1:-1:-1;5255:36:237;5287:2;5272:18;;5255:36;:::i;:::-;5245:46;;5001:296;;;;;:::o;5582:696::-;5832:2;5844:21;;;5914:13;;5817:18;;;5936:22;;;5784:4;;6015:15;;;5989:2;5974:18;;;5784:4;6058:194;6072:6;6069:1;6066:13;6058:194;;;6121:49;6166:3;6157:6;6151:13;5397:10;5389:5;5383:12;5379:29;5374:3;5367:42;5470:10;5462:4;5455:5;5451:16;5445:23;5441:40;5434:4;5429:3;5425:14;5418:64;-1:-1:-1;;;;;5535:4:237;5528:5;5524:16;5518:23;5514:56;5507:4;5502:3;5498:14;5491:80;;;5302:275;6121:49;6239:2;6227:15;;;;;6199:4;6190:14;;;;;6094:1;6087:9;6058:194;;;-1:-1:-1;6269:3:237;;5582:696;-1:-1:-1;;;;;5582:696:237:o;6283:127::-;6344:10;6339:3;6335:20;6332:1;6325:31;6375:4;6372:1;6365:15;6399:4;6396:1;6389:15;6415:257;6487:4;6481:11;;;6519:17;;-1:-1:-1;;;;;6551:34:237;;6587:22;;;6548:62;6545:88;;;6613:18;;:::i;:::-;6649:4;6642:24;6415:257;:::o;6677:275::-;6748:2;6742:9;6813:2;6794:13;;-1:-1:-1;;6790:27:237;6778:40;;-1:-1:-1;;;;;6833:34:237;;6869:22;;;6830:62;6827:88;;;6895:18;;:::i;:::-;6931:2;6924:22;6677:275;;-1:-1:-1;6677:275:237:o;6957:183::-;7017:4;-1:-1:-1;;;;;7042:6:237;7039:30;7036:56;;;7072:18;;:::i;:::-;-1:-1:-1;7117:1:237;7113:14;7129:4;7109:25;;6957:183::o;7145:1010::-;7236:6;7244;7297:2;7285:9;7276:7;7272:23;7268:32;7265:52;;;7313:1;7310;7303:12;7265:52;7336:27;7353:9;7336:27;:::i;:::-;7326:37;;7414:2;7403:9;7399:18;7386:32;-1:-1:-1;;;;;7433:6:237;7430:30;7427:50;;;7473:1;7470;7463:12;7427:50;7496:22;;7549:4;7541:13;;7537:27;-1:-1:-1;7527:55:237;;7578:1;7575;7568:12;7527:55;7618:2;7605:16;7641:64;7657:47;7697:6;7657:47;:::i;:::-;7641:64;:::i;:::-;7727:3;7751:6;7746:3;7739:19;7783:2;7778:3;7774:12;7767:19;;7838:2;7828:6;7825:1;7821:14;7817:2;7813:23;7809:32;7795:46;;7864:7;7856:6;7853:19;7850:39;;;7885:1;7882;7875:12;7850:39;7917:2;7913;7909:11;7898:22;;7929:196;7945:6;7940:3;7937:15;7929:196;;;8035:17;;8065:18;;8112:2;7962:12;;;;8103;;;;7929:196;;;8144:5;8134:15;;;;;;7145:1010;;;;;:::o;8160:127::-;8221:10;8216:3;8212:20;8209:1;8202:31;8252:4;8249:1;8242:15;8276:4;8273:1;8266:15;8292:343;8439:2;8424:18;;8472:1;8461:13;;8451:144;;8517:10;8512:3;8508:20;8505:1;8498:31;8552:4;8549:1;8542:15;8580:4;8577:1;8570:15;8451:144;8604:25;;;8292:343;:::o;8870:723::-;8924:5;8977:3;8970:4;8962:6;8958:17;8954:27;8944:55;;8995:1;8992;8985:12;8944:55;9035:6;9022:20;9062:64;9078:47;9118:6;9078:47;:::i;9062:64::-;9150:3;9174:6;9169:3;9162:19;9206:4;9201:3;9197:14;9190:21;;9267:4;9257:6;9254:1;9250:14;9242:6;9238:27;9234:38;9220:52;;9295:3;9287:6;9284:15;9281:35;;;9312:1;9309;9302:12;9281:35;9348:4;9340:6;9336:17;9362:200;9378:6;9373:3;9370:15;9362:200;;;9470:17;;9500:18;;9547:4;9538:14;;;;9395;9362:200;;;-1:-1:-1;9580:7:237;8870:723;-1:-1:-1;;;;;8870:723:237:o;9598:1285::-;9723:6;9731;9739;9792:2;9780:9;9771:7;9767:23;9763:32;9760:52;;;9808:1;9805;9798:12;9760:52;9848:9;9835:23;-1:-1:-1;;;;;9873:6:237;9870:30;9867:50;;;9913:1;9910;9903:12;9867:50;9936:22;;9989:4;9981:13;;9977:27;-1:-1:-1;9967:55:237;;10018:1;10015;10008:12;9967:55;10058:2;10045:16;10081:64;10097:47;10137:6;10097:47;:::i;10081:64::-;10167:3;10191:6;10186:3;10179:19;10223:4;10218:3;10214:14;10207:21;;10280:4;10270:6;10267:1;10263:14;10259:2;10255:23;10251:34;10237:48;;10308:7;10300:6;10297:19;10294:39;;;10329:1;10326;10319:12;10294:39;10361:4;10357:2;10353:13;10342:24;;10375:221;10391:6;10386:3;10383:15;10375:221;;;10473:3;10460:17;10490:31;10515:5;10490:31;:::i;:::-;10534:18;;10581:4;10408:14;;;;10572;;;;10375:221;;;10615:5;-1:-1:-1;;;;10673:4:237;10658:20;;10645:34;-1:-1:-1;;;;;10691:32:237;;10688:52;;;10736:1;10733;10726:12;10688:52;10759:63;10814:7;10803:8;10792:9;10788:24;10759:63;:::i;:::-;10749:73;;;10841:36;10873:2;10862:9;10858:18;10841:36;:::i;:::-;10831:46;;9598:1285;;;;;:::o;10888:621::-;11072:2;11084:21;;;11154:13;;11057:18;;;11176:22;;;11024:4;;11255:15;;;11229:2;11214:18;;;11024:4;11298:185;11312:6;11309:1;11306:13;11298:185;;;11387:13;;11380:21;11373:29;11361:42;;11432:2;11458:15;;;;11423:12;;;;11334:1;11327:9;11298:185;;11760:179;11827:20;;-1:-1:-1;;;;;11876:38:237;;11866:49;;11856:77;;11929:1;11926;11919:12;11944:974;12012:5;12065:3;12058:4;12050:6;12046:17;12042:27;12032:55;;12083:1;12080;12073:12;12032:55;12123:6;12110:20;12150:64;12166:47;12206:6;12166:47;:::i;12150:64::-;12238:3;12262:6;12257:3;12250:19;12294:4;12289:3;12285:14;12278:21;;12355:4;12345:6;12342:1;12338:14;12330:6;12326:27;12322:38;12308:52;;12383:3;12375:6;12372:15;12369:35;;;12400:1;12397;12390:12;12369:35;12436:4;12428:6;12424:17;12450:437;12466:6;12461:3;12458:15;12450:437;;;12544:4;12538:3;12533;12529:13;12525:24;12522:44;;;12562:1;12559;12552:12;12522:44;12592:22;;:::i;:::-;12655:3;12642:17;12672:33;12697:7;12672:33;:::i;:::-;12718:22;;12778:33;12805:4;12796:14;;12778:33;:::i;:::-;12771:4;12764:5;12760:16;12753:59;12837:5;12832:3;12825:18;;12872:4;12867:3;12863:14;12856:21;;12492:4;12487:3;12483:14;12476:21;;12450:437;;12923:537;13055:6;13063;13071;13124:2;13112:9;13103:7;13099:23;13095:32;13092:52;;;13140:1;13137;13130:12;13092:52;13163:27;13180:9;13163:27;:::i;:::-;13153:37;;13209;13242:2;13231:9;13227:18;13209:37;:::i;:::-;13199:47;;13297:2;13286:9;13282:18;13269:32;-1:-1:-1;;;;;13316:6:237;13313:30;13310:50;;;13356:1;13353;13346:12;13310:50;13379:75;13446:7;13437:6;13426:9;13422:22;13379:75;:::i;:::-;13369:85;;;12923:537;;;;;:::o;13654:163::-;13721:20;;13781:10;13770:22;;13760:33;;13750:61;;13807:1;13804;13797:12;13822:481;13900:6;13908;13916;13969:2;13957:9;13948:7;13944:23;13940:32;13937:52;;;13985:1;13982;13975:12;13937:52;14008:28;14026:9;14008:28;:::i;:::-;13998:38;;14087:2;14076:9;14072:18;14059:32;-1:-1:-1;;;;;14106:6:237;14103:30;14100:50;;;14146:1;14143;14136:12;14100:50;14185:58;14235:7;14226:6;14215:9;14211:22;14185:58;:::i;:::-;13822:481;;14262:8;;-1:-1:-1;14159:84:237;;-1:-1:-1;;;;13822:481:237:o;14308:626::-;14496:2;14508:21;;;14578:13;;14481:18;;;14600:22;;;14448:4;;14679:15;;;14653:2;14638:18;;;14448:4;14722:186;14736:6;14733:1;14730:13;14722:186;;;14801:13;;14816:10;14797:30;14785:43;;14857:2;14883:15;;;;14848:12;;;;14758:1;14751:9;14722:186;;15363:416;15438:6;15446;15454;15507:2;15495:9;15486:7;15482:23;15478:32;15475:52;;;15523:1;15520;15513:12;15475:52;15546:27;15563:9;15546:27;:::i;:::-;15536:37;15642:2;15627:18;;15614:32;;-1:-1:-1;15743:2:237;15728:18;;;15715:32;;15363:416;-1:-1:-1;;;15363:416:237:o;15784:260::-;15978:2;15963:18;;15990:48;15967:9;16020:6;5397:10;5389:5;5383:12;5379:29;5374:3;5367:42;5470:10;5462:4;5455:5;5451:16;5445:23;5441:40;5434:4;5429:3;5425:14;5418:64;-1:-1:-1;;;;;5535:4:237;5528:5;5524:16;5518:23;5514:56;5507:4;5502:3;5498:14;5491:80;;;5302:275;16426:254;16491:6;16499;16552:2;16540:9;16531:7;16527:23;16523:32;16520:52;;;16568:1;16565;16558:12;16520:52;16591:27;16608:9;16591:27;:::i;:::-;16581:37;;16637;16670:2;16659:9;16655:18;16637:37;:::i;16685:523::-;16764:6;16772;16780;16833:2;16821:9;16812:7;16808:23;16804:32;16801:52;;;16849:1;16846;16839:12;16801:52;16894:23;;;-1:-1:-1;16992:2:237;16977:18;;16964:32;-1:-1:-1;;;;;17008:30:237;;17005:50;;;17051:1;17048;17041:12;17213:465;17337:6;17345;17398:2;17386:9;17377:7;17373:23;17369:32;17366:52;;;17414:1;17411;17404:12;17366:52;17437:27;17454:9;17437:27;:::i;:::-;17427:37;;17515:2;17504:9;17500:18;17487:32;-1:-1:-1;;;;;17534:6:237;17531:30;17528:50;;;17574:1;17571;17564:12;17528:50;17597:75;17664:7;17655:6;17644:9;17640:22;17597:75;:::i;:::-;17587:85;;;17213:465;;;;;:::o;17683:368::-;17757:6;17765;17773;17826:2;17814:9;17805:7;17801:23;17797:32;17794:52;;;17842:1;17839;17832:12;17794:52;17865:27;17882:9;17865:27;:::i;:::-;17855:37;;17911;17944:2;17933:9;17929:18;17911:37;:::i;:::-;17683:368;;17901:47;;-1:-1:-1;;;18017:2:237;18002:18;;;;17989:32;;17683:368::o;18292:610::-;18432:6;18440;18448;18456;18509:3;18497:9;18488:7;18484:23;18480:33;18477:53;;;18526:1;18523;18516:12;18477:53;18549:27;18566:9;18549:27;:::i;:::-;18539:37;;18595;18628:2;18617:9;18613:18;18595:37;:::i;:::-;18585:47;;18651:37;18684:2;18673:9;18669:18;18651:37;:::i;:::-;18641:47;;18739:2;18728:9;18724:18;18711:32;-1:-1:-1;;;;;18758:6:237;18755:30;18752:50;;;18798:1;18795;18788:12;18752:50;18821:75;18888:7;18879:6;18868:9;18864:22;18821:75;:::i;:::-;18811:85;;;18292:610;;;;;;;:::o;18907:368::-;18981:6;18989;18997;19050:2;19038:9;19029:7;19025:23;19021:32;19018:52;;;19066:1;19063;19056:12;19018:52;19111:23;;;-1:-1:-1;19177:36:237;19209:2;19194:18;;19177:36;:::i;:::-;19167:46;;19232:37;19265:2;19254:9;19250:18;19232:37;:::i;19516:254::-;19581:6;19589;19642:2;19630:9;19621:7;19617:23;19613:32;19610:52;;;19658:1;19655;19648:12;19610:52;19681:27;19698:9;19681:27;:::i;:::-;19671:37;;19727;19760:2;19749:9;19745:18;19727:37;:::i;19775:489::-;19858:6;19866;19874;19882;19935:3;19923:9;19914:7;19910:23;19906:33;19903:53;;;19952:1;19949;19942:12;19903:53;19975:27;19992:9;19975:27;:::i;:::-;19965:37;;20021;20054:2;20043:9;20039:18;20021:37;:::i;:::-;19775:489;;20011:47;;-1:-1:-1;;;;20127:2:237;20112:18;;20099:32;;20228:2;20213:18;20200:32;;19775:489::o;20269:127::-;20330:10;20325:3;20321:20;20318:1;20311:31;20361:4;20358:1;20351:15;20385:4;20382:1;20375:15;20401:184;20459:6;20512:2;20500:9;20491:7;20487:23;20483:32;20480:52;;;20528:1;20525;20518:12;20480:52;20551:28;20569:9;20551:28;:::i;21226:127::-;21287:10;21282:3;21278:20;21275:1;21268:31;21318:4;21315:1;21308:15;21342:4;21339:1;21332:15;21358:128;21425:9;;;21446:11;;;21443:37;;;21460:18;;:::i;21491:127::-;21552:10;21547:3;21543:20;21540:1;21533:31;21583:4;21580:1;21573:15;21607:4;21604:1;21597:15;21623:251;21693:6;21746:2;21734:9;21725:7;21721:23;21717:32;21714:52;;;21762:1;21759;21752:12;21714:52;21794:9;21788:16;21813:31;21838:5;21813:31;:::i;22079:260::-;21960:12;;-1:-1:-1;;;;;21956:38:237;21944:51;;22048:4;22037:16;;;22031:23;22056:10;22027:40;22011:14;;;22004:64;22273:2;22258:18;;22285:48;21879:195;22344:277;22411:6;22464:2;22452:9;22443:7;22439:23;22435:32;22432:52;;;22480:1;22477;22470:12;22432:52;22512:9;22506:16;22565:5;22558:13;22551:21;22544:5;22541:32;22531:60;;22587:1;22584;22577:12;22626:929;-1:-1:-1;;;;;22918:32:237;;22900:51;;22999:4;22987:17;;22982:2;22967:18;;;22960:45;;;;22888:2;23036;23021:18;;23014:30;;;23093:13;;22873:18;;;23115:22;;;22840:4;;23195:15;;;23168:3;23153:19;;;22840:4;23238:291;23252:6;23249:1;23246:13;23238:291;;;23311:13;;-1:-1:-1;;;;;23381:28:237;23369:41;;23446:4;23504:15;;;;23437:14;;;;23406:1;23267:9;23238:291;;;-1:-1:-1;23546:3:237;;22626:929;-1:-1:-1;;;;;;;22626:929:237:o;23560:216::-;23624:9;;;23652:11;;;23599:3;23682:9;;23710:10;;23706:19;;23735:10;;23727:19;;23703:44;23700:70;;;23750:18;;:::i;24072:446::-;24125:3;24163:5;24157:12;24190:6;24185:3;24178:19;24222:4;24217:3;24213:14;24206:21;;24261:4;24254:5;24250:16;24284:1;24294:199;24308:6;24305:1;24302:13;24294:199;;;24373:13;;-1:-1:-1;;;;;24369:39:237;24357:52;;24438:4;24429:14;;;;24466:17;;;;24405:1;24323:9;24294:199;;24523:619;24595:3;24633:5;24627:12;24660:6;24655:3;24648:19;24692:4;24687:3;24683:14;24676:21;;24716:5;24713:1;24706:16;24758:4;24755:1;24745:18;24781:1;24791:326;24805:6;24802:1;24799:13;24791:326;;;24873:13;;-1:-1:-1;;;;;24869:39:237;24953:46;;25035:4;25026:14;;;;24905:1;25093:14;;;;24820:9;24791:326;;25147:500;25420:2;25409:9;25402:21;25383:4;25446:56;25498:2;25487:9;25483:18;25475:6;25446:56;:::i;:::-;25550:9;25542:6;25538:22;25533:2;25522:9;25518:18;25511:50;25578:63;25634:6;25626;25578:63;:::i;25652:1704::-;25772:6;25825:2;25813:9;25804:7;25800:23;25796:32;25793:52;;;25841:1;25838;25831:12;25793:52;25874:9;25868:16;-1:-1:-1;;;;;25899:6:237;25896:30;25893:50;;;25939:1;25936;25929:12;25893:50;25962:22;;26015:4;26007:13;;26003:27;-1:-1:-1;25993:55:237;;26044:1;26041;26034:12;25993:55;26077:2;26071:9;26100:64;26116:47;26156:6;26116:47;:::i;26100:64::-;26186:3;26210:6;26205:3;26198:19;26242:2;26237:3;26233:12;26226:19;;26297:2;26287:6;26284:1;26280:14;26276:2;26272:23;26268:32;26254:46;;26323:7;26315:6;26312:19;26309:39;;;26344:1;26341;26334:12;26309:39;26376:2;26372;26368:11;26388:938;26404:6;26399:3;26396:15;26388:938;;;26483:3;26477:10;-1:-1:-1;;;;;26506:11:237;26503:35;26500:55;;;26551:1;26548;26541:12;26500:55;26578:20;;26633:2;26625:11;;26621:25;-1:-1:-1;26611:53:237;;26660:1;26657;26650:12;26611:53;26707:2;26703;26699:11;26693:18;26737:66;26753:49;26793:8;26753:49;:::i;26737:66::-;26831:5;26863:8;26856:5;26849:23;26905:2;26898:5;26894:14;26885:23;;26977:2;26972;26960:8;26957:1;26953:16;26949:2;26945:25;26941:34;26937:43;26921:59;;27009:7;26999:8;26996:21;26993:41;;;27030:1;27027;27020:12;26993:41;27068:2;27064;27060:11;27047:24;;27084:167;27102:8;27095:5;27092:19;27084:167;;;27184:12;;27170:27;;27234:2;27123:14;;;;27223;;;;27084:167;;;27264:20;;-1:-1:-1;;27313:2:237;27304:12;;;;26421;;;;;-1:-1:-1;26388:938:237;;;-1:-1:-1;27345:5:237;25652:1704;-1:-1:-1;;;;;;25652:1704:237:o;27361:168::-;27434:9;;;27465;;27482:15;;;27476:22;;27462:37;27452:71;;27503:18;;:::i;27534:217::-;27574:1;27600;27590:132;;27644:10;27639:3;27635:20;27632:1;27625:31;27679:4;27676:1;27669:15;27707:4;27704:1;27697:15;27590:132;-1:-1:-1;27736:9:237;;27534:217::o;27756:215::-;-1:-1:-1;;;;;27824:34:237;;;27860;;;27820:75;;27907:35;;27904:61;;;27945:18;;:::i;27976:125::-;28041:9;;;28062:10;;;28059:36;;;28075:18;;:::i;28389:136::-;28428:3;28456:5;28446:39;;28465:18;;:::i;:::-;-1:-1:-1;;;28501:18:237;;28389:136::o;29149:200::-;29215:9;;;29188:4;29243:9;;29271:10;;29283:12;;;29267:29;29306:12;;;29298:21;;29264:56;29261:82;;;29323:18;;:::i;29354:136::-;29389:3;-1:-1:-1;;;29410:22:237;;29407:48;;29435:18;;:::i;:::-;-1:-1:-1;29475:1:237;29471:13;;29354:136::o;29495:218::-;-1:-1:-1;;;;;29601:34:237;;;29565;;;29561:75;;29648:36;;29645:62;;;29687:18;;:::i;29718:743::-;21960:12;;-1:-1:-1;;;;;21956:38:237;21944:51;;22048:4;22037:16;;;22031:23;22056:10;22027:40;22011:14;;;22004:64;30171:3;30166:2;30155:9;30151:18;30144:31;30068:4;30198:57;30250:3;30239:9;30235:19;30227:6;30198:57;:::i;:::-;30303:9;30295:6;30291:22;30286:2;30275:9;30271:18;30264:50;30331:63;30387:6;30379;30331:63;:::i;:::-;30323:71;;;30443:10;30435:6;30431:23;30425:3;30414:9;30410:19;30403:52;29718:743;;;;;;;:::o","linkReferences":{},"immutableReferences":{"81842":[{"start":1562,"length":32},{"start":9195,"length":32}],"81846":[{"start":947,"length":32}],"81850":[{"start":1466,"length":32},{"start":3847,"length":32},{"start":3991,"length":32},{"start":5907,"length":32},{"start":6210,"length":32},{"start":11437,"length":32}],"81854":[{"start":1042,"length":32},{"start":3673,"length":32},{"start":5733,"length":32},{"start":7519,"length":32},{"start":7707,"length":32},{"start":11495,"length":32}]}},"methodIdentifiers":{"MAX_WEIGHING_FUNCTION_LENGTH()":"7c172347","WEIGHTING_DIVISOR()":"5e5a6775","addStrategies(uint8,(address,uint96)[])":"c601527d","allocationManager()":"ca8aa7c7","avsDirectory()":"6b3aa72e","delegation()":"df5cf723","deregisterOperator(bytes32,bytes)":"bd29b8cd","getCurrentStake(bytes32,uint8)":"5401ed27","getCurrentTotalStake(uint8)":"d5eccc05","getLatestStakeUpdate(bytes32,uint8)":"f851e198","getStakeAtBlockNumber(bytes32,uint8,uint32)":"fa28c627","getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)":"f2be94ae","getStakeHistory(bytes32,uint8)":"2cd95940","getStakeHistoryLength(bytes32,uint8)":"4bd26e09","getStakeUpdateAtIndex(uint8,bytes32,uint256)":"ac6bfb03","getStakeUpdateIndexAtBlockNumber(bytes32,uint8,uint32)":"dd9846b9","getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)":"c8294c56","getTotalStakeHistoryLength(uint8)":"0491b41c","getTotalStakeIndicesAtBlockNumber(uint32,bytes)":"81c07502","getTotalStakeUpdateAtIndex(uint8,uint256)":"b6904b78","initializeDelegatedStakeQuorum(uint8,uint96,(address,uint96)[])":"75d4173a","initializeSlashableStakeQuorum(uint8,uint96,uint32,(address,uint96)[])":"cc5a7c20","minimumStakeForQuorum(uint8)":"c46778a5","modifyStrategyParams(uint8,uint256[],uint96[])":"20b66298","registerOperator(address,bytes32,bytes)":"25504777","registryCoordinator()":"6d14a987","removeStrategies(uint8,uint256[])":"5f1f2d77","setMinimumStakeForQuorum(uint8,uint96)":"bc9a40c3","setSlashableStakeLookahead(uint8,uint32)":"e086adb3","slashableStakeLookAheadPerQuorum(uint8)":"9ab4d6ff","stakeTypePerQuorum(uint8)":"697fbd93","strategiesPerQuorum(uint8,uint256)":"9f3ccf65","strategyParams(uint8,uint256)":"08732461","strategyParamsByIndex(uint8,uint256)":"adc804da","strategyParamsLength(uint8)":"3ca5a5f5","updateOperatorsStake(address[],bytes32[],uint8)":"6c3fb4bf","weightOfOperatorForQuorum(uint8,address)":"1f9b74e0"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISlashingRegistryCoordinator\",\"name\":\"_slashingRegistryCoordinator\",\"type\":\"address\"},{\"internalType\":\"contract IDelegationManager\",\"name\":\"_delegationManager\",\"type\":\"address\"},{\"internalType\":\"contract IAVSDirectory\",\"name\":\"_avsDirectory\",\"type\":\"address\"},{\"internalType\":\"contract IAllocationManager\",\"name\":\"_allocationManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BelowMinimumStakeRequirement\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyStakeHistory\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputArrayLengthZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputDuplicateStrategy\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InputMultiplierZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBlockNumber\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlySlashingRegistryCoordinator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlySlashingRegistryCoordinatorOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QuorumAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QuorumDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QuorumNotSlashable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"oldLookAheadBlocks\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newLookAheadBlocks\",\"type\":\"uint32\"}],\"name\":\"LookAheadPeriodChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"minimumStake\",\"type\":\"uint96\"}],\"name\":\"MinimumStakeForQuorumUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"name\":\"OperatorStakeUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"QuorumCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum IStakeRegistryTypes.StakeType\",\"name\":\"newStakeType\",\"type\":\"uint8\"}],\"name\":\"StakeTypeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyAddedToQuorum\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"}],\"name\":\"StrategyMultiplierUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyRemovedFromQuorum\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_WEIGHING_FUNCTION_LENGTH\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WEIGHTING_DIVISOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistryTypes.StrategyParams[]\",\"name\":\"_strategyParams\",\"type\":\"tuple[]\"}],\"name\":\"addStrategies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allocationManager\",\"outputs\":[{\"internalType\":\"contract IAllocationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"avsDirectory\",\"outputs\":[{\"internalType\":\"contract IAVSDirectory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegation\",\"outputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"}],\"name\":\"deregisterOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getCurrentStake\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getCurrentTotalStake\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getLatestStakeUpdate\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistryTypes.StakeUpdate\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"}],\"name\":\"getStakeAtBlockNumber\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getStakeAtBlockNumberAndIndex\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getStakeHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistryTypes.StakeUpdate[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getStakeHistoryLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getStakeUpdateAtIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistryTypes.StakeUpdate\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"}],\"name\":\"getStakeUpdateIndexAtBlockNumber\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTotalStakeAtBlockNumberFromIndex\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"getTotalStakeHistoryLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"}],\"name\":\"getTotalStakeIndicesAtBlockNumber\",\"outputs\":[{\"internalType\":\"uint32[]\",\"name\":\"\",\"type\":\"uint32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTotalStakeUpdateAtIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"stake\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistryTypes.StakeUpdate\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"minimumStake\",\"type\":\"uint96\"},{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistryTypes.StrategyParams[]\",\"name\":\"_strategyParams\",\"type\":\"tuple[]\"}],\"name\":\"initializeDelegatedStakeQuorum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"minimumStake\",\"type\":\"uint96\"},{\"internalType\":\"uint32\",\"name\":\"lookAheadPeriod\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistryTypes.StrategyParams[]\",\"name\":\"_strategyParams\",\"type\":\"tuple[]\"}],\"name\":\"initializeSlashableStakeQuorum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"minimumStakeForQuorum\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"strategyIndices\",\"type\":\"uint256[]\"},{\"internalType\":\"uint96[]\",\"name\":\"newMultipliers\",\"type\":\"uint96[]\"}],\"name\":\"modifyStrategyParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"operatorId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"quorumNumbers\",\"type\":\"bytes\"}],\"name\":\"registerOperator\",\"outputs\":[{\"internalType\":\"uint96[]\",\"name\":\"\",\"type\":\"uint96[]\"},{\"internalType\":\"uint96[]\",\"name\":\"\",\"type\":\"uint96[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registryCoordinator\",\"outputs\":[{\"internalType\":\"contract ISlashingRegistryCoordinator\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"indicesToRemove\",\"type\":\"uint256[]\"}],\"name\":\"removeStrategies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"minimumStake\",\"type\":\"uint96\"}],\"name\":\"setMinimumStakeForQuorum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"_lookAheadBlocks\",\"type\":\"uint32\"}],\"name\":\"setSlashableStakeLookahead\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"slashableStakeLookAheadPerQuorum\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"stakeTypePerQuorum\",\"outputs\":[{\"internalType\":\"enum IStakeRegistryTypes.StakeType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"strategiesPerQuorum\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"strategyParams\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"strategyParamsByIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IStakeRegistryTypes.StrategyParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"strategyParamsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"operators\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"operatorIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"}],\"name\":\"updateOperatorsStake\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"quorumNumber\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"weightOfOperatorForQuorum\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"errors\":{\"BelowMinimumStakeRequirement()\":[{\"details\":\"Thrown when the stake is below the minimum required for a quorum\"}],\"OnlySlashingRegistryCoordinator()\":[{\"details\":\"Thrown when the caller is not the registry coordinator\"}],\"OnlySlashingRegistryCoordinatorOwner()\":[{\"details\":\"Thrown when the caller is not the owner of the registry coordinator\"}]},\"events\":{\"LookAheadPeriodChanged(uint32,uint32)\":{\"params\":{\"newLookAheadBlocks\":\"The new look ahead period.\",\"oldLookAheadBlocks\":\"The previous look ahead period.\"}},\"MinimumStakeForQuorumUpdated(uint8,uint96)\":{\"params\":{\"minimumStake\":\"The new minimum stake requirement.\",\"quorumNumber\":\"The quorum number being updated (indexed).\"}},\"OperatorStakeUpdate(bytes32,uint8,uint96)\":{\"params\":{\"operatorId\":\"The unique identifier of the operator (indexed).\",\"quorumNumber\":\"The quorum number for which the stake was updated.\",\"stake\":\"The new stake amount.\"}},\"QuorumCreated(uint8)\":{\"params\":{\"quorumNumber\":\"The number of the newly created quorum (indexed).\"}},\"StakeTypeSet(uint8)\":{\"params\":{\"newStakeType\":\"The new stake type being set.\"}},\"StrategyAddedToQuorum(uint8,address)\":{\"params\":{\"quorumNumber\":\"The quorum number the strategy was added to (indexed).\",\"strategy\":\"The strategy contract that was added.\"}},\"StrategyMultiplierUpdated(uint8,address,uint256)\":{\"params\":{\"multiplier\":\"The new multiplier value.\",\"quorumNumber\":\"The quorum number for the strategy update (indexed).\",\"strategy\":\"The strategy contract being updated.\"}},\"StrategyRemovedFromQuorum(uint8,address)\":{\"params\":{\"quorumNumber\":\"The quorum number the strategy was removed from (indexed).\",\"strategy\":\"The strategy contract that was removed.\"}}},\"kind\":\"dev\",\"methods\":{\"addStrategies(uint8,(address,uint96)[])\":{\"details\":\"Checks to make sure that the *same* strategy cannot be added multiple times (checks against both against existing and new strategies).This function has no check to make sure that the strategies for a single quorum have the same underlying asset. This is a concious choice, since a middleware may want, e.g., a stablecoin quorum that accepts USDC, USDT, DAI, etc. as underlying assets and trades them as \\\"equivalent\\\".\",\"params\":{\"quorumNumber\":\"The quorum number to add strategies to.\",\"strategyParams\":\"The strategy parameters to add.\"}},\"deregisterOperator(bytes32,bytes)\":{\"details\":\"Access restricted to the RegistryCoordinator.Preconditions (these are assumed, not validated in this contract):     1) `quorumNumbers` has no duplicates.     2) `quorumNumbers.length` != 0.     3) `quorumNumbers` is ordered in ascending order.     4) The operator is not already deregistered.     5) `quorumNumbers` is a subset of the quorumNumbers that the operator is registered for.\",\"params\":{\"operatorId\":\"The id of the operator to deregister.\",\"quorumNumbers\":\"The quorum numbers the operator is deregistering from, where each byte is an 8 bit integer quorumNumber.\"}},\"getCurrentStake(bytes32,uint8)\":{\"details\":\"Returns 0 if the operator has no stake history.\",\"params\":{\"operatorId\":\"The id of the operator to query.\",\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The current stake amount.\"}},\"getCurrentTotalStake(uint8)\":{\"details\":\"Will revert if `_totalStakeHistory[quorumNumber]` is empty.\",\"params\":{\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The current total stake amount.\"}},\"getLatestStakeUpdate(bytes32,uint8)\":{\"details\":\"Returns a StakeUpdate struct with all entries equal to 0 if the operator has no stake history.\",\"params\":{\"operatorId\":\"The id of the operator to query.\",\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The most recent stake update.\"}},\"getStakeAtBlockNumber(bytes32,uint8,uint32)\":{\"params\":{\"blockNumber\":\"The block number to query.\",\"operatorId\":\"The id of the operator to query.\",\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The stake amount at the specified block.\"}},\"getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)\":{\"details\":\"Function will revert if `index` is out-of-bounds.Used by the BLSSignatureChecker to get past stakes of signing operators.\",\"params\":{\"blockNumber\":\"The block number to query.\",\"index\":\"The index to query.\",\"operatorId\":\"The id of the operator to query.\",\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The stake amount.\"}},\"getStakeHistory(bytes32,uint8)\":{\"params\":{\"operatorId\":\"The id of the operator of interest.\",\"quorumNumber\":\"The quorum number to get the stake for.\"},\"returns\":{\"_0\":\"The array of stake updates.\"}},\"getStakeHistoryLength(bytes32,uint8)\":{\"params\":{\"operatorId\":\"The id of the operator to query.\",\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The length of the stake history array.\"}},\"getStakeUpdateAtIndex(uint8,bytes32,uint256)\":{\"details\":\"Function will revert if `index` is out-of-bounds.\",\"params\":{\"index\":\"The index to query.\",\"operatorId\":\"The id of the operator to query.\",\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The stake update at the specified index.\"}},\"getStakeUpdateIndexAtBlockNumber(bytes32,uint8,uint32)\":{\"params\":{\"blockNumber\":\"The block number to query.\",\"operatorId\":\"The id of the operator to query.\",\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The index of the stake update.\"}},\"getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)\":{\"details\":\"Function will revert if `index` is out-of-bounds.Used by the BLSSignatureChecker to get past stakes of signing operators.\",\"params\":{\"blockNumber\":\"The block number to query.\",\"index\":\"The index to query.\",\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The total stake amount.\"}},\"getTotalStakeHistoryLength(uint8)\":{\"params\":{\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The length of the total stake history array.\"}},\"getTotalStakeIndicesAtBlockNumber(uint32,bytes)\":{\"params\":{\"blockNumber\":\"The block number to query.\",\"quorumNumbers\":\"The quorum numbers to query.\"},\"returns\":{\"_0\":\"The array of stake update indices.\"}},\"getTotalStakeUpdateAtIndex(uint8,uint256)\":{\"params\":{\"index\":\"The index to query.\",\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The stake update at the specified index.\"}},\"initializeDelegatedStakeQuorum(uint8,uint96,(address,uint96)[])\":{\"params\":{\"minimumStake\":\"The minimum stake required for the quorum.\",\"quorumNumber\":\"The number of the quorum to initialize.\",\"strategyParams\":\"The initial strategy parameters for the quorum.\"}},\"initializeSlashableStakeQuorum(uint8,uint96,uint32,(address,uint96)[])\":{\"params\":{\"lookAheadPeriod\":\"The look ahead period for checking operator shares.\",\"minimumStake\":\"The minimum stake required for the quorum.\",\"quorumNumber\":\"The number of the quorum to initialize.\",\"strategyParams\":\"The initial strategy parameters for the quorum.\"}},\"modifyStrategyParams(uint8,uint256[],uint96[])\":{\"params\":{\"newMultipliers\":\"The new multipliers for the strategies.\",\"quorumNumber\":\"The quorum number to change the strategy for.\",\"strategyIndices\":\"The indices of the strategies to change.\"}},\"registerOperator(address,bytes32,bytes)\":{\"details\":\"Access restricted to the RegistryCoordinator.Preconditions (these are assumed, not validated in this contract):     1) `quorumNumbers` has no duplicates.     2) `quorumNumbers.length` != 0.     3) `quorumNumbers` is ordered in ascending order.     4) The operator is not already registered.\",\"params\":{\"operator\":\"The address of the operator to register.\",\"operatorId\":\"The id of the operator to register.\",\"quorumNumbers\":\"The quorum numbers the operator is registering for, where each byte is an 8 bit integer quorumNumber.\"},\"returns\":{\"_0\":\"The operator's current stake for each quorum.\",\"_1\":\"The total stake for each quorum.\"}},\"removeStrategies(uint8,uint256[])\":{\"details\":\"Higher indices should be *first* in the list of `indicesToRemove`, since otherwise     the removal of lower index entries will cause a shift in the indices of the other strategiesToRemove.\",\"params\":{\"indicesToRemove\":\"The indices of strategies to remove.\",\"quorumNumber\":\"The quorum number to remove strategies from.\"}},\"setMinimumStakeForQuorum(uint8,uint96)\":{\"params\":{\"minimumStake\":\"The new minimum stake requirement.\",\"quorumNumber\":\"The quorum number to set the minimum stake for.\"}},\"setSlashableStakeLookahead(uint8,uint32)\":{\"params\":{\"lookAheadBlocks\":\"The number of blocks to look ahead when checking shares.\",\"quorumNumber\":\"The quorum number to set the look ahead period for.\"}},\"strategyParamsByIndex(uint8,uint256)\":{\"params\":{\"index\":\"The index of the strategy to query.\",\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The strategy parameters.\"}},\"strategyParamsLength(uint8)\":{\"params\":{\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The number of strategies for the quorum.\"}},\"updateOperatorsStake(address[],bytes32[],uint8)\":{\"params\":{\"operatorIds\":\"The ids of the operators to update.\",\"operators\":\"The addresses of the operators to update.\",\"quorumNumber\":\"The quorum number to update the stake for.\"},\"returns\":{\"_0\":\"A list of bools, true if the corresponding operator should be deregistered since they no longer meet the minimum stake requirement.\"}},\"weightOfOperatorForQuorum(uint8,address)\":{\"details\":\"Reverts if `quorumNumber` is greater than or equal to `quorumCount`.\",\"params\":{\"operator\":\"The operator address to query.\",\"quorumNumber\":\"The quorum number to query.\"},\"returns\":{\"_0\":\"The total weight of the operator.\"}}},\"title\":\"A `Registry` that keeps track of stakes of operators for up to 256 quorums. Specifically, it keeps track of      1) The stake of each operator in all the quorums they are a part of for block ranges      2) The total stake of all operators in each quorum for block ranges      3) The minimum stake required to register for each quorum It allows an additional functionality (in addition to registering and deregistering) to update the stake of an operator.\",\"version\":1},\"userdoc\":{\"errors\":{\"EmptyStakeHistory()\":[{\"notice\":\"Thrown when attempting to access stake history that doesn't exist for a quorum.\"}],\"InputArrayLengthMismatch()\":[{\"notice\":\"Thrown when two array parameters have mismatching lengths.\"}],\"InputArrayLengthZero()\":[{\"notice\":\"Thrown when an input array has zero length.\"}],\"InputDuplicateStrategy()\":[{\"notice\":\"Thrown when a duplicate strategy is provided in an input array.\"}],\"InputMultiplierZero()\":[{\"notice\":\"Thrown when a multiplier input is zero.\"}],\"InvalidBlockNumber()\":[{\"notice\":\"Thrown when the provided block number is invalid for the stake update.\"}],\"QuorumAlreadyExists()\":[{\"notice\":\"Thrown when attempting to create a quorum that already exists.\"}],\"QuorumDoesNotExist()\":[{\"notice\":\"Thrown when attempting to interact with a quorum that does not exist.\"}],\"QuorumNotSlashable()\":[{\"notice\":\"Thrown when the quorum is not slashable and the caller attempts to set the look ahead period.\"}]},\"events\":{\"LookAheadPeriodChanged(uint32,uint32)\":{\"notice\":\"Emitted when the look ahead period for checking operator shares is updated.\"},\"MinimumStakeForQuorumUpdated(uint8,uint96)\":{\"notice\":\"Emitted when the minimum stake for a quorum is updated.\"},\"OperatorStakeUpdate(bytes32,uint8,uint96)\":{\"notice\":\"Emitted when an operator's stake is updated.\"},\"QuorumCreated(uint8)\":{\"notice\":\"Emitted when a new quorum is created.\"},\"StakeTypeSet(uint8)\":{\"notice\":\"Emitted when the stake type is updated.\"},\"StrategyAddedToQuorum(uint8,address)\":{\"notice\":\"Emitted when a strategy is added to a quorum.\"},\"StrategyMultiplierUpdated(uint8,address,uint256)\":{\"notice\":\"Emitted when a strategy's multiplier is updated.\"},\"StrategyRemovedFromQuorum(uint8,address)\":{\"notice\":\"Emitted when a strategy is removed from a quorum.\"}},\"kind\":\"user\",\"methods\":{\"MAX_WEIGHING_FUNCTION_LENGTH()\":{\"notice\":\"Maximum length of dynamic arrays in the `strategyParams` mapping.\"},\"WEIGHTING_DIVISOR()\":{\"notice\":\"Constant used as a divisor in calculating weights.\"},\"addStrategies(uint8,(address,uint96)[])\":{\"notice\":\"Adds new strategies and their associated multipliers to the specified quorum.\"},\"allocationManager()\":{\"notice\":\"the address of the AllocationManager for EigenLayer.\"},\"avsDirectory()\":{\"notice\":\"The address of the Delegation contract for EigenLayer.\"},\"delegation()\":{\"notice\":\"The address of the Delegation contract for EigenLayer.\"},\"deregisterOperator(bytes32,bytes)\":{\"notice\":\"Deregisters the operator with `operatorId` for the specified `quorumNumbers`.\"},\"getCurrentStake(bytes32,uint8)\":{\"notice\":\"Returns the current stake for an operator in a quorum.\"},\"getCurrentTotalStake(uint8)\":{\"notice\":\"Returns the current total stake for a quorum.\"},\"getLatestStakeUpdate(bytes32,uint8)\":{\"notice\":\"Returns the most recent stake update for an operator in a quorum.\"},\"getStakeAtBlockNumber(bytes32,uint8,uint32)\":{\"notice\":\"Returns the stake of an operator at a specific block number.\"},\"getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)\":{\"notice\":\"Returns the stake at the specified block number and index for an operator in a quorum.\"},\"getStakeHistory(bytes32,uint8)\":{\"notice\":\"Returns the entire stake history array for an operator in a quorum.\"},\"getStakeHistoryLength(bytes32,uint8)\":{\"notice\":\"Returns the length of the stake history for an operator in a quorum.\"},\"getStakeUpdateAtIndex(uint8,bytes32,uint256)\":{\"notice\":\"Returns the stake update at the specified index for an operator in a quorum.\"},\"getStakeUpdateIndexAtBlockNumber(bytes32,uint8,uint32)\":{\"notice\":\"Returns the index of the operator's stake update at the specified block number.\"},\"getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)\":{\"notice\":\"Returns the total stake at the specified block number and index for a quorum.\"},\"getTotalStakeHistoryLength(uint8)\":{\"notice\":\"Returns the length of the total stake history for a quorum.\"},\"getTotalStakeIndicesAtBlockNumber(uint32,bytes)\":{\"notice\":\"Returns the indices of total stakes for the provided quorums at the given block number.\"},\"getTotalStakeUpdateAtIndex(uint8,uint256)\":{\"notice\":\"Returns the stake update at the specified index in the total stake history.\"},\"initializeDelegatedStakeQuorum(uint8,uint96,(address,uint96)[])\":{\"notice\":\"Initialize a new quorum created by the registry coordinator by setting strategies, weights, and minimum stake.\"},\"initializeSlashableStakeQuorum(uint8,uint96,uint32,(address,uint96)[])\":{\"notice\":\"Initialize a new quorum and push its first history update.\"},\"minimumStakeForQuorum(uint8)\":{\"notice\":\"In order to register for a quorum i, an operator must have at least `minimumStakeForQuorum[i]` evaluated by this contract's 'VoteWeigher' logic.\"},\"modifyStrategyParams(uint8,uint256[],uint96[])\":{\"notice\":\"Modifies the weights of strategies that are already in the mapping strategyParams.\"},\"registerOperator(address,bytes32,bytes)\":{\"notice\":\"Registers the `operator` with `operatorId` for the specified `quorumNumbers`.\"},\"registryCoordinator()\":{\"notice\":\"the coordinator contract that this registry is associated with\"},\"removeStrategies(uint8,uint256[])\":{\"notice\":\"Removes strategies and their associated weights from the specified quorum.\"},\"setMinimumStakeForQuorum(uint8,uint96)\":{\"notice\":\"Sets the minimum stake requirement for a quorum `quorumNumber`.\"},\"setSlashableStakeLookahead(uint8,uint32)\":{\"notice\":\"Sets the look ahead time to `lookAheadBlocks` for checking operator shares for a specific quorum.\"},\"slashableStakeLookAheadPerQuorum(uint8)\":{\"notice\":\"mapping from quorum number to the slashable stake look ahead time (in blocks)\"},\"stakeTypePerQuorum(uint8)\":{\"notice\":\"mapping from quorum number to the IStakeRegistryTypes.StakeType for that specific quorum\"},\"strategiesPerQuorum(uint8,uint256)\":{\"notice\":\"mapping from quorum number to the list of strategies considered for that specific quorum\"},\"strategyParams(uint8,uint256)\":{\"notice\":\"mapping from quorum number to the list of strategies considered and their corresponding multipliers for that specific quorum\"},\"strategyParamsByIndex(uint8,uint256)\":{\"notice\":\"Returns the strategy and weight multiplier for the `index`'th strategy in the quorum.\"},\"strategyParamsLength(uint8)\":{\"notice\":\"Returns the length of the dynamic array stored in `strategyParams[quorumNumber]`.\"},\"updateOperatorsStake(address[],bytes32[],uint8)\":{\"notice\":\"Called by the registry coordinator to update the stake of a list of operators for a specific quorum.\"},\"weightOfOperatorForQuorum(uint8,address)\":{\"notice\":\"Computes the total weight of the operator in the specified quorum.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/StakeRegistry.sol\":\"StakeRegistry\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-contracts/\",\":erc4626-tests/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/contracts/\",\":zeus-templates/=lib/eigenlayer-contracts/lib/zeus-templates/src/\"]},\"sources\":{\"lib/eigenlayer-contracts/src/contracts/interfaces/IAVSDirectory.sol\":{\"keccak256\":\"0x569fe9a3c56b730d11bd359231c96f2f4e0b4eabd3d5a3b2bbba789a473e2bc8\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://94ed1d615914a886896cd694240c7bd87aa87396f81a85203db6b384b5a54e6d\",\"dweb:/ipfs/QmQYFc94Xsm9LsoVwtczVvwBWBo6njgdM9DwUHe4qTPR5L\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IAVSRegistrar.sol\":{\"keccak256\":\"0x3849ea6d0ec5bcc3315fb359dd98bb0d9bb9e2e5f4dd1c6be4753402af5909b3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1246544c6741420365a96dbe4ec13a57a14f3ffcad13edba69176a98826ce505\",\"dweb:/ipfs/QmRdt4FZHS3oXKun2mDpzGErfmnDNSnJm8WKctkjd2sbaW\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IAllocationManager.sol\":{\"keccak256\":\"0x68f1cc9fcb33237a49977fa1b16891d6fcbdc1421ccfbee77c219811bc9206e5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c8ddef2761c75bb1118f61aa3fb86009d29b3988842ad8c49cdee98a4c8bc7e9\",\"dweb:/ipfs/Qmcrm1QubPp8bUNpF8ERgEcxV4VS4e49hRf8hAE3wucYht\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0x95093989fb52a3544c2296c8da36223247cab1cf4e788af25f9b4ec482c4526f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f5e15fd4da8e17789a8cd2162d70b8a878d8e412442214a25eb01229f4635cbe\",\"dweb:/ipfs/QmRzPvMhmX9FBt1oLZCjNutGZpy4YRg9TU9nVgVMEqhKut\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol\":{\"keccak256\":\"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c\",\"license\":\"CC0-1.0\",\"urls\":[\"bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91\",\"dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0x34641f2a5250d80fca927168a4d071d374b2fc66094c5c1ed6d3b9f0e041251c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://80ab9987fe8f7ad5c3ae57aed8191bc9d7aa56548266fae5738aade190298150\",\"dweb:/ipfs/QmaPFGoLTBqXgXCRP1JKt8RNpQtbBmSKyFHfd5deBRyGWE\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0xacf744ab9a97e62b80a664063decad5ef1746fa100e650060c5f5b06f42c5a6a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8ae714e8fd53143d3880ca2597b8e949c2963af5a268062ef0eb5093355ecd8a\",\"dweb:/ipfs/QmdiuQUCw55gs8KdinU5HvCBS4A9k9ffQuUQr8YUfoZUMN\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8\",\"dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72\",\"dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IShareManager.sol\":{\"keccak256\":\"0xd03653bc25fe5a64ec6071a0d3fb375280d1e32ece3a19c5d10fb14374de3537\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://65d3275df462c8db23b74ed96caa8cb7dbc7219e26bee2794c168b842517a1a5\",\"dweb:/ipfs/Qmen14WFvNLPE21WVdfcW33FQtEcLxMHEXZnwCkTbWNTQ1\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x5164971b2648837bc100798df3633080b0f8076692a5c900f6b1aacc342241de\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2b1676f5d44cf9680c12e56b569ed876ca3038ee266c3a6c37dddf9cb2b3d87b\",\"dweb:/ipfs/QmVp4JbR9SYHDaBjfGfTh1gqoiKf2rhwV78kRPSHhjddcq\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x601384e7910d2edcbaf58e4480261d0c11996256e810736377f37844bea3cac3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://dcfec053867cd3a4454d7c9f07d8a7c74abbae12aed45524c8bf40e8cf8e57d4\",\"dweb:/ipfs/QmbXGprDnnsvDyMcEkfZPAb5QBnzbJdnRjutfRLuPeh8V8\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0xf5aa4a3486f10ba84a87ba4e9d90f0035c5ee7f8163e353edb113c45944fee99\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e9a7899486cf82b0c73bc3cbcdfb9924fcd1b1b0353248be1554de28cdb849bc\",\"dweb:/ipfs/QmNSvzDqizi6oQiuRZhsbx2W2e33JCdzYRv6ujUGtyPsag\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x6f1fec603853d6b8b610e97c5a7a8dc411ddcad49df03ddd0e2d77881d36788b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f51cded4081cf69cd658c87194388e567485cc901e16a53ef7ae9f947365fb7f\",\"dweb:/ipfs/QmQ2weAkzee5goE7BwdNsURJ7qhJeZ9wSocT2gTwMB1AeX\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0xe8ec0e6bef36311170e2447bdd2fe8b19aad7244024926243428ffe02754b136\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a628118c581ef8393ff09e50d0db45470bed040c45ed463f71144ef344fee48e\",\"dweb:/ipfs/QmUz7nTJfzXKL2Sy175LPHNeUfKFHGarWvJFeCG4ZBqRuX\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0xf6ef9925d5a6db7de81efac1e85b2a4ec64249abc13d4a2ff3ff73e41c8df436\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d3e5dc3ef9a117ac18ac2c0371d34b948d3e1e93c0eba6dbb7a75a1e15abfc6\",\"dweb:/ipfs/QmT4PrXoTJpnTNUxvXk3r4tzrfzSUYg4Lr2GyWNWeVXhAk\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/OperatorSetLib.sol\":{\"keccak256\":\"0xac130991039e2a885fa0f820397e80354af115d9580be357ea0c76f30e59bcec\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4528c14d2b0bc84fe13996bdd299aa71235c49a3412c1073d73b5eef502305c5\",\"dweb:/ipfs/QmReiQ95MHLrj3tvP8xdSkq4UAkmQzH6KijZqX1Hzijy6S\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/SlashingLib.sol\":{\"keccak256\":\"0xb5bfa03e58ee71e8672bf93c2c8f4067950f8fb61f4c5a699efbd00f96317401\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c7569fab9522bc239e3954b36f6000b7767a319ae05ad44831ebca51515103b5\",\"dweb:/ipfs/QmSnBpbagyoj3FRLDMvtoo7NiNNo6du2D5oiQZE4zeTJpZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xd7ebe0f80affaa622b9efd95cc8db3e03e70d699176f7457b4a95e34a11f9834\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8cf00c5981b953e57af6f8d6dad38ff0c90c61f1f1b03042039a41797aa198b\",\"dweb:/ipfs/QmdngJRARxdVwxqG7vHDRf2QSBxK6294Ab16G6hsMoXqew\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"src/StakeRegistry.sol\":{\"keccak256\":\"0x230faa7ee87fe4b26b04e71316dd155f4101a417683c243463349ee31de9c9b9\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://09a9b7d24d4b8a86f13833f099167895f336f96ff14a6a6ec6f28a7c06d2f8c1\",\"dweb:/ipfs/QmQsupLcoQ8zbYFSkYhDwuGgyLxGpgvvyTCD4dcKsH73VP\"]},\"src/StakeRegistryStorage.sol\":{\"keccak256\":\"0x335ea4c9f7ad4cbb1fe1fc990319478a74de1083ee6e0768ed66112d2b31b116\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://33b2120657ad6aeeffeaa3681aeca6dad717ec600034b2d53d9c673dacebe9ea\",\"dweb:/ipfs/QmeHABPTqijRthq1EvhngD5WUc5YzGBFWLLb6vmd8oBNSK\"]},\"src/interfaces/IBLSApkRegistry.sol\":{\"keccak256\":\"0x342339e2d04b7ce0a28a73d47e50842b2d14f6a26b460e8e5d37fcb474890a22\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bca75a44514ec4c6c9470df2f70cd8e362a232e143a5dda99adf93abcd9f0b84\",\"dweb:/ipfs/QmW8NWKp9sgsBDkYfFsSsv9tbY6Bb6ewPsWDTEir1vq2P2\"]},\"src/interfaces/IIndexRegistry.sol\":{\"keccak256\":\"0x8a53d093c37a76dfb20a6d765c834cafadc0706ca997282191179ee1bdce6a68\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://87c14b3e34e9e8a13176a04d0d693996f9d8a44b274822670729161255b39f80\",\"dweb:/ipfs/QmbGB1HqQwAK9BgGVRGqLSxYYuQnWhgZqsZpqN5Bp3b1hq\"]},\"src/interfaces/ISlashingRegistryCoordinator.sol\":{\"keccak256\":\"0x16e0c44b56e6435074ca849b77b7e67c237628d2fec216e0646319ddb78fe653\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://43d8907f9ca04344b2bf5213032e7136f499e204509bebed6589cf94edef224c\",\"dweb:/ipfs/QmaF5SCbG8rSMGdHf4mLLgZ6J7cBguKujb2TN3Fq98vh7B\"]},\"src/interfaces/ISocketRegistry.sol\":{\"keccak256\":\"0x5d4497f995bdc0f56d242b218065a9d0b9ab7f8b47421e66cb3ae37e25674d8f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://47cfc86fd6147928011e8ab8ca3689b3cee0b155a4b01700ac7e8146012d86da\",\"dweb:/ipfs/QmcqDwW5WHKWi5arVERE1j7RikN7GuQtmfX7fpSyRu5zBe\"]},\"src/interfaces/IStakeRegistry.sol\":{\"keccak256\":\"0x7d8239df5f3ea4b6919a1e1ee2a2b31615346c0d919521ca38f3958800c1dfd3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://94faa00a86a293cd0e6aa1565d3534580b964853674eaf79b1b1bbb407d6ed07\",\"dweb:/ipfs/QmUqhLCUKy6NttwXg9Jv83Yg7rpLEx1MCL3VUQP4TaVvoW\"]},\"src/libraries/BN254.sol\":{\"keccak256\":\"0x941414cfbfb510409428e51e197e5e28be3b45fb81440e183afa0caa1f077ec7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa245501f99b6f77564fe7e38f8130a0a6d589424bf413b2d1e46da8b5214982\",\"dweb:/ipfs/QmXCJx2GktmrbpYLnsAZ4KrResizL3JuhDjA3MNgito8AQ\"]},\"src/libraries/BitmapUtils.sol\":{\"keccak256\":\"0xfac31fd5a3ad9b6c1a659ed320e2171b7bec8a34cb602fb39576135574a4d6ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5bc75c2237e1e9c4e0c55069167207345bb28066c51174e1a5febb7beed888c\",\"dweb:/ipfs/QmWNUk7SYnAab7Eu6f7DBR2Cy2cAZPUbp5ZEATSsjjjwqP\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract ISlashingRegistryCoordinator","name":"_slashingRegistryCoordinator","type":"address"},{"internalType":"contract IDelegationManager","name":"_delegationManager","type":"address"},{"internalType":"contract IAVSDirectory","name":"_avsDirectory","type":"address"},{"internalType":"contract IAllocationManager","name":"_allocationManager","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"type":"error","name":"BelowMinimumStakeRequirement"},{"inputs":[],"type":"error","name":"EmptyStakeHistory"},{"inputs":[],"type":"error","name":"InputArrayLengthMismatch"},{"inputs":[],"type":"error","name":"InputArrayLengthZero"},{"inputs":[],"type":"error","name":"InputDuplicateStrategy"},{"inputs":[],"type":"error","name":"InputMultiplierZero"},{"inputs":[],"type":"error","name":"InvalidBlockNumber"},{"inputs":[],"type":"error","name":"OnlySlashingRegistryCoordinator"},{"inputs":[],"type":"error","name":"OnlySlashingRegistryCoordinatorOwner"},{"inputs":[],"type":"error","name":"QuorumAlreadyExists"},{"inputs":[],"type":"error","name":"QuorumDoesNotExist"},{"inputs":[],"type":"error","name":"QuorumNotSlashable"},{"inputs":[{"internalType":"uint32","name":"oldLookAheadBlocks","type":"uint32","indexed":false},{"internalType":"uint32","name":"newLookAheadBlocks","type":"uint32","indexed":false}],"type":"event","name":"LookAheadPeriodChanged","anonymous":false},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8","indexed":true},{"internalType":"uint96","name":"minimumStake","type":"uint96","indexed":false}],"type":"event","name":"MinimumStakeForQuorumUpdated","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32","indexed":true},{"internalType":"uint8","name":"quorumNumber","type":"uint8","indexed":false},{"internalType":"uint96","name":"stake","type":"uint96","indexed":false}],"type":"event","name":"OperatorStakeUpdate","anonymous":false},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8","indexed":true}],"type":"event","name":"QuorumCreated","anonymous":false},{"inputs":[{"internalType":"enum IStakeRegistryTypes.StakeType","name":"newStakeType","type":"uint8","indexed":false}],"type":"event","name":"StakeTypeSet","anonymous":false},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8","indexed":true},{"internalType":"contract IStrategy","name":"strategy","type":"address","indexed":false}],"type":"event","name":"StrategyAddedToQuorum","anonymous":false},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8","indexed":true},{"internalType":"contract IStrategy","name":"strategy","type":"address","indexed":false},{"internalType":"uint256","name":"multiplier","type":"uint256","indexed":false}],"type":"event","name":"StrategyMultiplierUpdated","anonymous":false},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8","indexed":true},{"internalType":"contract IStrategy","name":"strategy","type":"address","indexed":false}],"type":"event","name":"StrategyRemovedFromQuorum","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"MAX_WEIGHING_FUNCTION_LENGTH","outputs":[{"internalType":"uint8","name":"","type":"uint8"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"WEIGHTING_DIVISOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"struct IStakeRegistryTypes.StrategyParams[]","name":"_strategyParams","type":"tuple[]","components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]}],"stateMutability":"nonpayable","type":"function","name":"addStrategies"},{"inputs":[],"stateMutability":"view","type":"function","name":"allocationManager","outputs":[{"internalType":"contract IAllocationManager","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"avsDirectory","outputs":[{"internalType":"contract IAVSDirectory","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"delegation","outputs":[{"internalType":"contract IDelegationManager","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"bytes","name":"quorumNumbers","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"deregisterOperator"},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"getCurrentStake","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"getCurrentTotalStake","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"getLatestStakeUpdate","outputs":[{"internalType":"struct IStakeRegistryTypes.StakeUpdate","name":"","type":"tuple","components":[{"internalType":"uint32","name":"updateBlockNumber","type":"uint32"},{"internalType":"uint32","name":"nextUpdateBlockNumber","type":"uint32"},{"internalType":"uint96","name":"stake","type":"uint96"}]}]},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint32","name":"blockNumber","type":"uint32"}],"stateMutability":"view","type":"function","name":"getStakeAtBlockNumber","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint32","name":"blockNumber","type":"uint32"},{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"getStakeAtBlockNumberAndIndex","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"getStakeHistory","outputs":[{"internalType":"struct IStakeRegistryTypes.StakeUpdate[]","name":"","type":"tuple[]","components":[{"internalType":"uint32","name":"updateBlockNumber","type":"uint32"},{"internalType":"uint32","name":"nextUpdateBlockNumber","type":"uint32"},{"internalType":"uint96","name":"stake","type":"uint96"}]}]},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"getStakeHistoryLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"getStakeUpdateAtIndex","outputs":[{"internalType":"struct IStakeRegistryTypes.StakeUpdate","name":"","type":"tuple","components":[{"internalType":"uint32","name":"updateBlockNumber","type":"uint32"},{"internalType":"uint32","name":"nextUpdateBlockNumber","type":"uint32"},{"internalType":"uint96","name":"stake","type":"uint96"}]}]},{"inputs":[{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint32","name":"blockNumber","type":"uint32"}],"stateMutability":"view","type":"function","name":"getStakeUpdateIndexAtBlockNumber","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint32","name":"blockNumber","type":"uint32"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"getTotalStakeAtBlockNumberFromIndex","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"getTotalStakeHistoryLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint32","name":"blockNumber","type":"uint32"},{"internalType":"bytes","name":"quorumNumbers","type":"bytes"}],"stateMutability":"view","type":"function","name":"getTotalStakeIndicesAtBlockNumber","outputs":[{"internalType":"uint32[]","name":"","type":"uint32[]"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"getTotalStakeUpdateAtIndex","outputs":[{"internalType":"struct IStakeRegistryTypes.StakeUpdate","name":"","type":"tuple","components":[{"internalType":"uint32","name":"updateBlockNumber","type":"uint32"},{"internalType":"uint32","name":"nextUpdateBlockNumber","type":"uint32"},{"internalType":"uint96","name":"stake","type":"uint96"}]}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint96","name":"minimumStake","type":"uint96"},{"internalType":"struct IStakeRegistryTypes.StrategyParams[]","name":"_strategyParams","type":"tuple[]","components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]}],"stateMutability":"nonpayable","type":"function","name":"initializeDelegatedStakeQuorum"},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint96","name":"minimumStake","type":"uint96"},{"internalType":"uint32","name":"lookAheadPeriod","type":"uint32"},{"internalType":"struct IStakeRegistryTypes.StrategyParams[]","name":"_strategyParams","type":"tuple[]","components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]}],"stateMutability":"nonpayable","type":"function","name":"initializeSlashableStakeQuorum"},{"inputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function","name":"minimumStakeForQuorum","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint256[]","name":"strategyIndices","type":"uint256[]"},{"internalType":"uint96[]","name":"newMultipliers","type":"uint96[]"}],"stateMutability":"nonpayable","type":"function","name":"modifyStrategyParams"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bytes32","name":"operatorId","type":"bytes32"},{"internalType":"bytes","name":"quorumNumbers","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"registerOperator","outputs":[{"internalType":"uint96[]","name":"","type":"uint96[]"},{"internalType":"uint96[]","name":"","type":"uint96[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"registryCoordinator","outputs":[{"internalType":"contract ISlashingRegistryCoordinator","name":"","type":"address"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint256[]","name":"indicesToRemove","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"removeStrategies"},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint96","name":"minimumStake","type":"uint96"}],"stateMutability":"nonpayable","type":"function","name":"setMinimumStakeForQuorum"},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint32","name":"_lookAheadBlocks","type":"uint32"}],"stateMutability":"nonpayable","type":"function","name":"setSlashableStakeLookahead"},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"slashableStakeLookAheadPerQuorum","outputs":[{"internalType":"uint32","name":"","type":"uint32"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"stakeTypePerQuorum","outputs":[{"internalType":"enum IStakeRegistryTypes.StakeType","name":"","type":"uint8"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","name":"strategiesPerQuorum","outputs":[{"internalType":"contract IStrategy","name":"","type":"address"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","name":"strategyParams","outputs":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"strategyParamsByIndex","outputs":[{"internalType":"struct IStakeRegistryTypes.StrategyParams","name":"","type":"tuple","components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"view","type":"function","name":"strategyParamsLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address[]","name":"operators","type":"address[]"},{"internalType":"bytes32[]","name":"operatorIds","type":"bytes32[]"},{"internalType":"uint8","name":"quorumNumber","type":"uint8"}],"stateMutability":"nonpayable","type":"function","name":"updateOperatorsStake","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"uint8","name":"quorumNumber","type":"uint8"},{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"weightOfOperatorForQuorum","outputs":[{"internalType":"uint96","name":"","type":"uint96"}]}],"devdoc":{"kind":"dev","methods":{"addStrategies(uint8,(address,uint96)[])":{"details":"Checks to make sure that the *same* strategy cannot be added multiple times (checks against both against existing and new strategies).This function has no check to make sure that the strategies for a single quorum have the same underlying asset. This is a concious choice, since a middleware may want, e.g., a stablecoin quorum that accepts USDC, USDT, DAI, etc. as underlying assets and trades them as \"equivalent\".","params":{"quorumNumber":"The quorum number to add strategies to.","strategyParams":"The strategy parameters to add."}},"deregisterOperator(bytes32,bytes)":{"details":"Access restricted to the RegistryCoordinator.Preconditions (these are assumed, not validated in this contract):     1) `quorumNumbers` has no duplicates.     2) `quorumNumbers.length` != 0.     3) `quorumNumbers` is ordered in ascending order.     4) The operator is not already deregistered.     5) `quorumNumbers` is a subset of the quorumNumbers that the operator is registered for.","params":{"operatorId":"The id of the operator to deregister.","quorumNumbers":"The quorum numbers the operator is deregistering from, where each byte is an 8 bit integer quorumNumber."}},"getCurrentStake(bytes32,uint8)":{"details":"Returns 0 if the operator has no stake history.","params":{"operatorId":"The id of the operator to query.","quorumNumber":"The quorum number to query."},"returns":{"_0":"The current stake amount."}},"getCurrentTotalStake(uint8)":{"details":"Will revert if `_totalStakeHistory[quorumNumber]` is empty.","params":{"quorumNumber":"The quorum number to query."},"returns":{"_0":"The current total stake amount."}},"getLatestStakeUpdate(bytes32,uint8)":{"details":"Returns a StakeUpdate struct with all entries equal to 0 if the operator has no stake history.","params":{"operatorId":"The id of the operator to query.","quorumNumber":"The quorum number to query."},"returns":{"_0":"The most recent stake update."}},"getStakeAtBlockNumber(bytes32,uint8,uint32)":{"params":{"blockNumber":"The block number to query.","operatorId":"The id of the operator to query.","quorumNumber":"The quorum number to query."},"returns":{"_0":"The stake amount at the specified block."}},"getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)":{"details":"Function will revert if `index` is out-of-bounds.Used by the BLSSignatureChecker to get past stakes of signing operators.","params":{"blockNumber":"The block number to query.","index":"The index to query.","operatorId":"The id of the operator to query.","quorumNumber":"The quorum number to query."},"returns":{"_0":"The stake amount."}},"getStakeHistory(bytes32,uint8)":{"params":{"operatorId":"The id of the operator of interest.","quorumNumber":"The quorum number to get the stake for."},"returns":{"_0":"The array of stake updates."}},"getStakeHistoryLength(bytes32,uint8)":{"params":{"operatorId":"The id of the operator to query.","quorumNumber":"The quorum number to query."},"returns":{"_0":"The length of the stake history array."}},"getStakeUpdateAtIndex(uint8,bytes32,uint256)":{"details":"Function will revert if `index` is out-of-bounds.","params":{"index":"The index to query.","operatorId":"The id of the operator to query.","quorumNumber":"The quorum number to query."},"returns":{"_0":"The stake update at the specified index."}},"getStakeUpdateIndexAtBlockNumber(bytes32,uint8,uint32)":{"params":{"blockNumber":"The block number to query.","operatorId":"The id of the operator to query.","quorumNumber":"The quorum number to query."},"returns":{"_0":"The index of the stake update."}},"getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)":{"details":"Function will revert if `index` is out-of-bounds.Used by the BLSSignatureChecker to get past stakes of signing operators.","params":{"blockNumber":"The block number to query.","index":"The index to query.","quorumNumber":"The quorum number to query."},"returns":{"_0":"The total stake amount."}},"getTotalStakeHistoryLength(uint8)":{"params":{"quorumNumber":"The quorum number to query."},"returns":{"_0":"The length of the total stake history array."}},"getTotalStakeIndicesAtBlockNumber(uint32,bytes)":{"params":{"blockNumber":"The block number to query.","quorumNumbers":"The quorum numbers to query."},"returns":{"_0":"The array of stake update indices."}},"getTotalStakeUpdateAtIndex(uint8,uint256)":{"params":{"index":"The index to query.","quorumNumber":"The quorum number to query."},"returns":{"_0":"The stake update at the specified index."}},"initializeDelegatedStakeQuorum(uint8,uint96,(address,uint96)[])":{"params":{"minimumStake":"The minimum stake required for the quorum.","quorumNumber":"The number of the quorum to initialize.","strategyParams":"The initial strategy parameters for the quorum."}},"initializeSlashableStakeQuorum(uint8,uint96,uint32,(address,uint96)[])":{"params":{"lookAheadPeriod":"The look ahead period for checking operator shares.","minimumStake":"The minimum stake required for the quorum.","quorumNumber":"The number of the quorum to initialize.","strategyParams":"The initial strategy parameters for the quorum."}},"modifyStrategyParams(uint8,uint256[],uint96[])":{"params":{"newMultipliers":"The new multipliers for the strategies.","quorumNumber":"The quorum number to change the strategy for.","strategyIndices":"The indices of the strategies to change."}},"registerOperator(address,bytes32,bytes)":{"details":"Access restricted to the RegistryCoordinator.Preconditions (these are assumed, not validated in this contract):     1) `quorumNumbers` has no duplicates.     2) `quorumNumbers.length` != 0.     3) `quorumNumbers` is ordered in ascending order.     4) The operator is not already registered.","params":{"operator":"The address of the operator to register.","operatorId":"The id of the operator to register.","quorumNumbers":"The quorum numbers the operator is registering for, where each byte is an 8 bit integer quorumNumber."},"returns":{"_0":"The operator's current stake for each quorum.","_1":"The total stake for each quorum."}},"removeStrategies(uint8,uint256[])":{"details":"Higher indices should be *first* in the list of `indicesToRemove`, since otherwise     the removal of lower index entries will cause a shift in the indices of the other strategiesToRemove.","params":{"indicesToRemove":"The indices of strategies to remove.","quorumNumber":"The quorum number to remove strategies from."}},"setMinimumStakeForQuorum(uint8,uint96)":{"params":{"minimumStake":"The new minimum stake requirement.","quorumNumber":"The quorum number to set the minimum stake for."}},"setSlashableStakeLookahead(uint8,uint32)":{"params":{"lookAheadBlocks":"The number of blocks to look ahead when checking shares.","quorumNumber":"The quorum number to set the look ahead period for."}},"strategyParamsByIndex(uint8,uint256)":{"params":{"index":"The index of the strategy to query.","quorumNumber":"The quorum number to query."},"returns":{"_0":"The strategy parameters."}},"strategyParamsLength(uint8)":{"params":{"quorumNumber":"The quorum number to query."},"returns":{"_0":"The number of strategies for the quorum."}},"updateOperatorsStake(address[],bytes32[],uint8)":{"params":{"operatorIds":"The ids of the operators to update.","operators":"The addresses of the operators to update.","quorumNumber":"The quorum number to update the stake for."},"returns":{"_0":"A list of bools, true if the corresponding operator should be deregistered since they no longer meet the minimum stake requirement."}},"weightOfOperatorForQuorum(uint8,address)":{"details":"Reverts if `quorumNumber` is greater than or equal to `quorumCount`.","params":{"operator":"The operator address to query.","quorumNumber":"The quorum number to query."},"returns":{"_0":"The total weight of the operator."}}},"version":1},"userdoc":{"kind":"user","methods":{"MAX_WEIGHING_FUNCTION_LENGTH()":{"notice":"Maximum length of dynamic arrays in the `strategyParams` mapping."},"WEIGHTING_DIVISOR()":{"notice":"Constant used as a divisor in calculating weights."},"addStrategies(uint8,(address,uint96)[])":{"notice":"Adds new strategies and their associated multipliers to the specified quorum."},"allocationManager()":{"notice":"the address of the AllocationManager for EigenLayer."},"avsDirectory()":{"notice":"The address of the Delegation contract for EigenLayer."},"delegation()":{"notice":"The address of the Delegation contract for EigenLayer."},"deregisterOperator(bytes32,bytes)":{"notice":"Deregisters the operator with `operatorId` for the specified `quorumNumbers`."},"getCurrentStake(bytes32,uint8)":{"notice":"Returns the current stake for an operator in a quorum."},"getCurrentTotalStake(uint8)":{"notice":"Returns the current total stake for a quorum."},"getLatestStakeUpdate(bytes32,uint8)":{"notice":"Returns the most recent stake update for an operator in a quorum."},"getStakeAtBlockNumber(bytes32,uint8,uint32)":{"notice":"Returns the stake of an operator at a specific block number."},"getStakeAtBlockNumberAndIndex(uint8,uint32,bytes32,uint256)":{"notice":"Returns the stake at the specified block number and index for an operator in a quorum."},"getStakeHistory(bytes32,uint8)":{"notice":"Returns the entire stake history array for an operator in a quorum."},"getStakeHistoryLength(bytes32,uint8)":{"notice":"Returns the length of the stake history for an operator in a quorum."},"getStakeUpdateAtIndex(uint8,bytes32,uint256)":{"notice":"Returns the stake update at the specified index for an operator in a quorum."},"getStakeUpdateIndexAtBlockNumber(bytes32,uint8,uint32)":{"notice":"Returns the index of the operator's stake update at the specified block number."},"getTotalStakeAtBlockNumberFromIndex(uint8,uint32,uint256)":{"notice":"Returns the total stake at the specified block number and index for a quorum."},"getTotalStakeHistoryLength(uint8)":{"notice":"Returns the length of the total stake history for a quorum."},"getTotalStakeIndicesAtBlockNumber(uint32,bytes)":{"notice":"Returns the indices of total stakes for the provided quorums at the given block number."},"getTotalStakeUpdateAtIndex(uint8,uint256)":{"notice":"Returns the stake update at the specified index in the total stake history."},"initializeDelegatedStakeQuorum(uint8,uint96,(address,uint96)[])":{"notice":"Initialize a new quorum created by the registry coordinator by setting strategies, weights, and minimum stake."},"initializeSlashableStakeQuorum(uint8,uint96,uint32,(address,uint96)[])":{"notice":"Initialize a new quorum and push its first history update."},"minimumStakeForQuorum(uint8)":{"notice":"In order to register for a quorum i, an operator must have at least `minimumStakeForQuorum[i]` evaluated by this contract's 'VoteWeigher' logic."},"modifyStrategyParams(uint8,uint256[],uint96[])":{"notice":"Modifies the weights of strategies that are already in the mapping strategyParams."},"registerOperator(address,bytes32,bytes)":{"notice":"Registers the `operator` with `operatorId` for the specified `quorumNumbers`."},"registryCoordinator()":{"notice":"the coordinator contract that this registry is associated with"},"removeStrategies(uint8,uint256[])":{"notice":"Removes strategies and their associated weights from the specified quorum."},"setMinimumStakeForQuorum(uint8,uint96)":{"notice":"Sets the minimum stake requirement for a quorum `quorumNumber`."},"setSlashableStakeLookahead(uint8,uint32)":{"notice":"Sets the look ahead time to `lookAheadBlocks` for checking operator shares for a specific quorum."},"slashableStakeLookAheadPerQuorum(uint8)":{"notice":"mapping from quorum number to the slashable stake look ahead time (in blocks)"},"stakeTypePerQuorum(uint8)":{"notice":"mapping from quorum number to the IStakeRegistryTypes.StakeType for that specific quorum"},"strategiesPerQuorum(uint8,uint256)":{"notice":"mapping from quorum number to the list of strategies considered for that specific quorum"},"strategyParams(uint8,uint256)":{"notice":"mapping from quorum number to the list of strategies considered and their corresponding multipliers for that specific quorum"},"strategyParamsByIndex(uint8,uint256)":{"notice":"Returns the strategy and weight multiplier for the `index`'th strategy in the quorum."},"strategyParamsLength(uint8)":{"notice":"Returns the length of the dynamic array stored in `strategyParams[quorumNumber]`."},"updateOperatorsStake(address[],bytes32[],uint8)":{"notice":"Called by the registry coordinator to update the stake of a list of operators for a specific quorum."},"weightOfOperatorForQuorum(uint8,address)":{"notice":"Computes the total weight of the operator in the specified quorum."}},"version":1}},"settings":{"remappings":["@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/","@openzeppelin/=lib/openzeppelin-contracts/","ds-test/=lib/ds-test/src/","eigenlayer-contracts/=lib/eigenlayer-contracts/","erc4626-tests/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/contracts/","zeus-templates/=lib/eigenlayer-contracts/lib/zeus-templates/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/StakeRegistry.sol":"StakeRegistry"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/eigenlayer-contracts/src/contracts/interfaces/IAVSDirectory.sol":{"keccak256":"0x569fe9a3c56b730d11bd359231c96f2f4e0b4eabd3d5a3b2bbba789a473e2bc8","urls":["bzz-raw://94ed1d615914a886896cd694240c7bd87aa87396f81a85203db6b384b5a54e6d","dweb:/ipfs/QmQYFc94Xsm9LsoVwtczVvwBWBo6njgdM9DwUHe4qTPR5L"],"license":"BUSL-1.1"},"lib/eigenlayer-contracts/src/contracts/interfaces/IAVSRegistrar.sol":{"keccak256":"0x3849ea6d0ec5bcc3315fb359dd98bb0d9bb9e2e5f4dd1c6be4753402af5909b3","urls":["bzz-raw://1246544c6741420365a96dbe4ec13a57a14f3ffcad13edba69176a98826ce505","dweb:/ipfs/QmRdt4FZHS3oXKun2mDpzGErfmnDNSnJm8WKctkjd2sbaW"],"license":"BUSL-1.1"},"lib/eigenlayer-contracts/src/contracts/interfaces/IAllocationManager.sol":{"keccak256":"0x68f1cc9fcb33237a49977fa1b16891d6fcbdc1421ccfbee77c219811bc9206e5","urls":["bzz-raw://c8ddef2761c75bb1118f61aa3fb86009d29b3988842ad8c49cdee98a4c8bc7e9","dweb:/ipfs/Qmcrm1QubPp8bUNpF8ERgEcxV4VS4e49hRf8hAE3wucYht"],"license":"BUSL-1.1"},"lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol":{"keccak256":"0x95093989fb52a3544c2296c8da36223247cab1cf4e788af25f9b4ec482c4526f","urls":["bzz-raw://f5e15fd4da8e17789a8cd2162d70b8a878d8e412442214a25eb01229f4635cbe","dweb:/ipfs/QmRzPvMhmX9FBt1oLZCjNutGZpy4YRg9TU9nVgVMEqhKut"],"license":"BUSL-1.1"},"lib/eigenlayer-contracts/src/contracts/interfaces/IETHPOSDeposit.sol":{"keccak256":"0x2e60e5f4b0da0a0a4e2a07c63141120998559970c21deac743ea0c64a60a880c","urls":["bzz-raw://e635c346bde5b7ade9bcf35bc733081520cb86015be4fbc6e761e6e9482c4c91","dweb:/ipfs/QmRoeazEnbFn5SPSWAkoFK2gSN9DMp3hJAnrLWuL2sKutz"],"license":"CC0-1.0"},"lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPod.sol":{"keccak256":"0x34641f2a5250d80fca927168a4d071d374b2fc66094c5c1ed6d3b9f0e041251c","urls":["bzz-raw://80ab9987fe8f7ad5c3ae57aed8191bc9d7aa56548266fae5738aade190298150","dweb:/ipfs/QmaPFGoLTBqXgXCRP1JKt8RNpQtbBmSKyFHfd5deBRyGWE"],"license":"BUSL-1.1"},"lib/eigenlayer-contracts/src/contracts/interfaces/IEigenPodManager.sol":{"keccak256":"0xacf744ab9a97e62b80a664063decad5ef1746fa100e650060c5f5b06f42c5a6a","urls":["bzz-raw://8ae714e8fd53143d3880ca2597b8e949c2963af5a268062ef0eb5093355ecd8a","dweb:/ipfs/QmdiuQUCw55gs8KdinU5HvCBS4A9k9ffQuUQr8YUfoZUMN"],"license":"BUSL-1.1"},"lib/eigenlayer-contracts/src/contracts/interfaces/IPausable.sol":{"keccak256":"0x0404f1db44005929899e00dcc50d553175951ff26c215c87215bbd92b4ebfde3","urls":["bzz-raw://cdb88bff60663f3418d271c7db93c2867d767e31ec592690e7b2e1f1ba1589e8","dweb:/ipfs/QmQfsZCiEqWYEFopZB5LvL9pq47Qba9EeMzeZcHN2e9ypc"],"license":"BUSL-1.1"},"lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol":{"keccak256":"0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc","urls":["bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72","dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD"],"license":"BUSL-1.1"},"lib/eigenlayer-contracts/src/contracts/interfaces/IShareManager.sol":{"keccak256":"0xd03653bc25fe5a64ec6071a0d3fb375280d1e32ece3a19c5d10fb14374de3537","urls":["bzz-raw://65d3275df462c8db23b74ed96caa8cb7dbc7219e26bee2794c168b842517a1a5","dweb:/ipfs/Qmen14WFvNLPE21WVdfcW33FQtEcLxMHEXZnwCkTbWNTQ1"],"license":"BUSL-1.1"},"lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol":{"keccak256":"0x5164971b2648837bc100798df3633080b0f8076692a5c900f6b1aacc342241de","urls":["bzz-raw://2b1676f5d44cf9680c12e56b569ed876ca3038ee266c3a6c37dddf9cb2b3d87b","dweb:/ipfs/QmVp4JbR9SYHDaBjfGfTh1gqoiKf2rhwV78kRPSHhjddcq"],"license":"BUSL-1.1"},"lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol":{"keccak256":"0x601384e7910d2edcbaf58e4480261d0c11996256e810736377f37844bea3cac3","urls":["bzz-raw://dcfec053867cd3a4454d7c9f07d8a7c74abbae12aed45524c8bf40e8cf8e57d4","dweb:/ipfs/QmbXGprDnnsvDyMcEkfZPAb5QBnzbJdnRjutfRLuPeh8V8"],"license":"BUSL-1.1"},"lib/eigenlayer-contracts/src/contracts/interfaces/IStrategyManager.sol":{"keccak256":"0xf5aa4a3486f10ba84a87ba4e9d90f0035c5ee7f8163e353edb113c45944fee99","urls":["bzz-raw://e9a7899486cf82b0c73bc3cbcdfb9924fcd1b1b0353248be1554de28cdb849bc","dweb:/ipfs/QmNSvzDqizi6oQiuRZhsbx2W2e33JCdzYRv6ujUGtyPsag"],"license":"BUSL-1.1"},"lib/eigenlayer-contracts/src/contracts/libraries/BeaconChainProofs.sol":{"keccak256":"0x6f1fec603853d6b8b610e97c5a7a8dc411ddcad49df03ddd0e2d77881d36788b","urls":["bzz-raw://f51cded4081cf69cd658c87194388e567485cc901e16a53ef7ae9f947365fb7f","dweb:/ipfs/QmQ2weAkzee5goE7BwdNsURJ7qhJeZ9wSocT2gTwMB1AeX"],"license":"BUSL-1.1"},"lib/eigenlayer-contracts/src/contracts/libraries/Endian.sol":{"keccak256":"0xe8ec0e6bef36311170e2447bdd2fe8b19aad7244024926243428ffe02754b136","urls":["bzz-raw://a628118c581ef8393ff09e50d0db45470bed040c45ed463f71144ef344fee48e","dweb:/ipfs/QmUz7nTJfzXKL2Sy175LPHNeUfKFHGarWvJFeCG4ZBqRuX"],"license":"BUSL-1.1"},"lib/eigenlayer-contracts/src/contracts/libraries/Merkle.sol":{"keccak256":"0xf6ef9925d5a6db7de81efac1e85b2a4ec64249abc13d4a2ff3ff73e41c8df436","urls":["bzz-raw://2d3e5dc3ef9a117ac18ac2c0371d34b948d3e1e93c0eba6dbb7a75a1e15abfc6","dweb:/ipfs/QmT4PrXoTJpnTNUxvXk3r4tzrfzSUYg4Lr2GyWNWeVXhAk"],"license":"MIT"},"lib/eigenlayer-contracts/src/contracts/libraries/OperatorSetLib.sol":{"keccak256":"0xac130991039e2a885fa0f820397e80354af115d9580be357ea0c76f30e59bcec","urls":["bzz-raw://4528c14d2b0bc84fe13996bdd299aa71235c49a3412c1073d73b5eef502305c5","dweb:/ipfs/QmReiQ95MHLrj3tvP8xdSkq4UAkmQzH6KijZqX1Hzijy6S"],"license":"BUSL-1.1"},"lib/eigenlayer-contracts/src/contracts/libraries/SlashingLib.sol":{"keccak256":"0xb5bfa03e58ee71e8672bf93c2c8f4067950f8fb61f4c5a699efbd00f96317401","urls":["bzz-raw://c7569fab9522bc239e3954b36f6000b7767a319ae05ad44831ebca51515103b5","dweb:/ipfs/QmSnBpbagyoj3FRLDMvtoo7NiNNo6du2D5oiQZE4zeTJpZ"],"license":"BUSL-1.1"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol":{"keccak256":"0xd7ebe0f80affaa622b9efd95cc8db3e03e70d699176f7457b4a95e34a11f9834","urls":["bzz-raw://f8cf00c5981b953e57af6f8d6dad38ff0c90c61f1f1b03042039a41797aa198b","dweb:/ipfs/QmdngJRARxdVwxqG7vHDRf2QSBxK6294Ab16G6hsMoXqew"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/access/Ownable.sol":{"keccak256":"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673","urls":["bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2","dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol":{"keccak256":"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61","urls":["bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354","dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b","urls":["bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34","dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Context.sol":{"keccak256":"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7","urls":["bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92","dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0","urls":["bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929","dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC"],"license":"MIT"},"src/StakeRegistry.sol":{"keccak256":"0x230faa7ee87fe4b26b04e71316dd155f4101a417683c243463349ee31de9c9b9","urls":["bzz-raw://09a9b7d24d4b8a86f13833f099167895f336f96ff14a6a6ec6f28a7c06d2f8c1","dweb:/ipfs/QmQsupLcoQ8zbYFSkYhDwuGgyLxGpgvvyTCD4dcKsH73VP"],"license":"BUSL-1.1"},"src/StakeRegistryStorage.sol":{"keccak256":"0x335ea4c9f7ad4cbb1fe1fc990319478a74de1083ee6e0768ed66112d2b31b116","urls":["bzz-raw://33b2120657ad6aeeffeaa3681aeca6dad717ec600034b2d53d9c673dacebe9ea","dweb:/ipfs/QmeHABPTqijRthq1EvhngD5WUc5YzGBFWLLb6vmd8oBNSK"],"license":"BUSL-1.1"},"src/interfaces/IBLSApkRegistry.sol":{"keccak256":"0x342339e2d04b7ce0a28a73d47e50842b2d14f6a26b460e8e5d37fcb474890a22","urls":["bzz-raw://bca75a44514ec4c6c9470df2f70cd8e362a232e143a5dda99adf93abcd9f0b84","dweb:/ipfs/QmW8NWKp9sgsBDkYfFsSsv9tbY6Bb6ewPsWDTEir1vq2P2"],"license":"BUSL-1.1"},"src/interfaces/IIndexRegistry.sol":{"keccak256":"0x8a53d093c37a76dfb20a6d765c834cafadc0706ca997282191179ee1bdce6a68","urls":["bzz-raw://87c14b3e34e9e8a13176a04d0d693996f9d8a44b274822670729161255b39f80","dweb:/ipfs/QmbGB1HqQwAK9BgGVRGqLSxYYuQnWhgZqsZpqN5Bp3b1hq"],"license":"BUSL-1.1"},"src/interfaces/ISlashingRegistryCoordinator.sol":{"keccak256":"0x16e0c44b56e6435074ca849b77b7e67c237628d2fec216e0646319ddb78fe653","urls":["bzz-raw://43d8907f9ca04344b2bf5213032e7136f499e204509bebed6589cf94edef224c","dweb:/ipfs/QmaF5SCbG8rSMGdHf4mLLgZ6J7cBguKujb2TN3Fq98vh7B"],"license":"BUSL-1.1"},"src/interfaces/ISocketRegistry.sol":{"keccak256":"0x5d4497f995bdc0f56d242b218065a9d0b9ab7f8b47421e66cb3ae37e25674d8f","urls":["bzz-raw://47cfc86fd6147928011e8ab8ca3689b3cee0b155a4b01700ac7e8146012d86da","dweb:/ipfs/QmcqDwW5WHKWi5arVERE1j7RikN7GuQtmfX7fpSyRu5zBe"],"license":"BUSL-1.1"},"src/interfaces/IStakeRegistry.sol":{"keccak256":"0x7d8239df5f3ea4b6919a1e1ee2a2b31615346c0d919521ca38f3958800c1dfd3","urls":["bzz-raw://94faa00a86a293cd0e6aa1565d3534580b964853674eaf79b1b1bbb407d6ed07","dweb:/ipfs/QmUqhLCUKy6NttwXg9Jv83Yg7rpLEx1MCL3VUQP4TaVvoW"],"license":"BUSL-1.1"},"src/libraries/BN254.sol":{"keccak256":"0x941414cfbfb510409428e51e197e5e28be3b45fb81440e183afa0caa1f077ec7","urls":["bzz-raw://aa245501f99b6f77564fe7e38f8130a0a6d589424bf413b2d1e46da8b5214982","dweb:/ipfs/QmXCJx2GktmrbpYLnsAZ4KrResizL3JuhDjA3MNgito8AQ"],"license":"MIT"},"src/libraries/BitmapUtils.sol":{"keccak256":"0xfac31fd5a3ad9b6c1a659ed320e2171b7bec8a34cb602fb39576135574a4d6ae","urls":["bzz-raw://c5bc75c2237e1e9c4e0c55069167207345bb28066c51174e1a5febb7beed888c","dweb:/ipfs/QmWNUk7SYnAab7Eu6f7DBR2Cy2cAZPUbp5ZEATSsjjjwqP"],"license":"MIT"}},"version":1},"id":136}