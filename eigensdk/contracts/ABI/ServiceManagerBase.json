{"abi":[{"type":"function","name":"addPendingAdmin","inputs":[{"name":"admin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"avsDirectory","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"createAVSRewardsSubmission","inputs":[{"name":"rewardsSubmissions","type":"tuple[]","internalType":"struct IRewardsCoordinatorTypes.RewardsSubmission[]","components":[{"name":"strategiesAndMultipliers","type":"tuple[]","internalType":"struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]","components":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}]},{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"startTimestamp","type":"uint32","internalType":"uint32"},{"name":"duration","type":"uint32","internalType":"uint32"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createOperatorDirectedAVSRewardsSubmission","inputs":[{"name":"operatorDirectedRewardsSubmissions","type":"tuple[]","internalType":"struct IRewardsCoordinatorTypes.OperatorDirectedRewardsSubmission[]","components":[{"name":"strategiesAndMultipliers","type":"tuple[]","internalType":"struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]","components":[{"name":"strategy","type":"address","internalType":"contract IStrategy"},{"name":"multiplier","type":"uint96","internalType":"uint96"}]},{"name":"token","type":"address","internalType":"contract IERC20"},{"name":"operatorRewards","type":"tuple[]","internalType":"struct IRewardsCoordinatorTypes.OperatorReward[]","components":[{"name":"operator","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}]},{"name":"startTimestamp","type":"uint32","internalType":"uint32"},{"name":"duration","type":"uint32","internalType":"uint32"},{"name":"description","type":"string","internalType":"string"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deregisterOperatorFromAVS","inputs":[{"name":"operator","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deregisterOperatorFromOperatorSets","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"operatorSetIds","type":"uint32[]","internalType":"uint32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getOperatorRestakedStrategies","inputs":[{"name":"operator","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"getRestakeableStrategies","inputs":[],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"registerOperatorToAVS","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"operatorSignature","type":"tuple","internalType":"struct ISignatureUtils.SignatureWithSaltAndExpiry","components":[{"name":"signature","type":"bytes","internalType":"bytes"},{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"expiry","type":"uint256","internalType":"uint256"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeAdmin","inputs":[{"name":"admin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeAppointee","inputs":[{"name":"appointee","type":"address","internalType":"address"},{"name":"target","type":"address","internalType":"address"},{"name":"selector","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removePendingAdmin","inputs":[{"name":"pendingAdmin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"renounceOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rewardsInitiator","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"setAppointee","inputs":[{"name":"appointee","type":"address","internalType":"address"},{"name":"target","type":"address","internalType":"address"},{"name":"selector","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setClaimerFor","inputs":[{"name":"claimer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setRewardsInitiator","inputs":[{"name":"newRewardsInitiator","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"updateAVSMetadataURI","inputs":[{"name":"_metadataURI","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"RewardsInitiatorUpdated","inputs":[{"name":"prevRewardsInitiator","type":"address","indexed":false,"internalType":"address"},{"name":"newRewardsInitiator","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"error","name":"DelayPeriodNotPassed","inputs":[]},{"type":"error","name":"OnlyRegistryCoordinator","inputs":[]},{"type":"error","name":"OnlyRewardsInitiator","inputs":[]},{"type":"error","name":"OnlyStakeRegistry","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"addPendingAdmin(address)":"279432eb","avsDirectory()":"6b3aa72e","createAVSRewardsSubmission(((address,uint96)[],address,uint256,uint32,uint32)[])":"fce36c7d","createOperatorDirectedAVSRewardsSubmission(((address,uint96)[],address,(address,uint256)[],uint32,uint32,string)[])":"a20b99bf","deregisterOperatorFromAVS(address)":"a364f4da","deregisterOperatorFromOperatorSets(address,uint32[])":"c1a8e2c5","getOperatorRestakedStrategies(address)":"33cfb7b7","getRestakeableStrategies()":"e481af9d","owner()":"8da5cb5b","registerOperatorToAVS(address,(bytes,bytes32,uint256))":"9926ee7d","removeAdmin(address)":"1785f53c","removeAppointee(address,address,bytes4)":"ba550880","removePendingAdmin(address)":"9da16d8e","renounceOwnership()":"715018a6","rewardsInitiator()":"fc299dee","setAppointee(address,address,bytes4)":"1fdb0cfd","setClaimerFor(address)":"a0169ddd","setRewardsInitiator(address)":"3bc28c8c","transferOwnership(address)":"f2fde38b","updateAVSMetadataURI(string)":"a98fb355"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DelayPeriodNotPassed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyRegistryCoordinator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyRewardsInitiator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyStakeRegistry\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"prevRewardsInitiator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newRewardsInitiator\",\"type\":\"address\"}],\"name\":\"RewardsInitiatorUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"addPendingAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"avsDirectory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.RewardsSubmission[]\",\"name\":\"rewardsSubmissions\",\"type\":\"tuple[]\"}],\"name\":\"createAVSRewardsSubmission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]\",\"name\":\"strategiesAndMultipliers\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.OperatorReward[]\",\"name\":\"operatorRewards\",\"type\":\"tuple[]\"},{\"internalType\":\"uint32\",\"name\":\"startTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"duration\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct IRewardsCoordinatorTypes.OperatorDirectedRewardsSubmission[]\",\"name\":\"operatorDirectedRewardsSubmissions\",\"type\":\"tuple[]\"}],\"name\":\"createOperatorDirectedAVSRewardsSubmission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"deregisterOperatorFromAVS\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint32[]\",\"name\":\"operatorSetIds\",\"type\":\"uint32[]\"}],\"name\":\"deregisterOperatorFromOperatorSets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getOperatorRestakedStrategies\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRestakeableStrategies\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureUtils.SignatureWithSaltAndExpiry\",\"name\":\"operatorSignature\",\"type\":\"tuple\"}],\"name\":\"registerOperatorToAVS\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"appointee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"removeAppointee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pendingAdmin\",\"type\":\"address\"}],\"name\":\"removePendingAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsInitiator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"appointee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"setAppointee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"}],\"name\":\"setClaimerFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRewardsInitiator\",\"type\":\"address\"}],\"name\":\"setRewardsInitiator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_metadataURI\",\"type\":\"string\"}],\"name\":\"updateAVSMetadataURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RewardsInitiatorUpdated(address,address)\":{\"params\":{\"newRewardsInitiator\":\"The new rewards initiator address.\",\"prevRewardsInitiator\":\"The previous rewards initiator address.\"}}},\"kind\":\"dev\",\"methods\":{\"addPendingAdmin(address)\":{\"details\":\"Only callable by the owner of the contract.\",\"params\":{\"admin\":\"The address of the admin to add.\"}},\"createAVSRewardsSubmission(((address,uint96)[],address,uint256,uint32,uint32)[])\":{\"details\":\"Only callable by the permissioned rewardsInitiator addressThe duration of the `rewardsSubmission` cannot exceed `MAX_REWARDS_DURATION`The tokens are sent to the `RewardsCoordinator` contractStrategies must be in ascending order of addresses to check for duplicatesThis function will revert if the `rewardsSubmission` is malformed, e.g. if the `strategies` and `weights` arrays are of non-equal lengthsThis function may fail to execute with a large number of submissions due to gas limits. Use a smaller array of submissions if necessary.\",\"params\":{\"rewardsSubmissions\":\"The rewards submissions being created\"}},\"createOperatorDirectedAVSRewardsSubmission(((address,uint96)[],address,(address,uint256)[],uint32,uint32,string)[])\":{\"details\":\"Only callable by the permissioned rewardsInitiator addressThe duration of the `rewardsSubmission` cannot exceed `MAX_REWARDS_DURATION`The tokens are sent to the `RewardsCoordinator` contractThis contract needs a token approval of sum of all `operatorRewards` in the `operatorDirectedRewardsSubmissions`, before calling this function.Strategies must be in ascending order of addresses to check for duplicatesOperators must be in ascending order of addresses to check for duplicates.This function will revert if the `operatorDirectedRewardsSubmissions` is malformed.This function may fail to execute with a large number of submissions due to gas limits. Use a smaller array of submissions if necessary.\",\"params\":{\"operatorDirectedRewardsSubmissions\":\"The operator-directed rewards submissions being created.\"}},\"deregisterOperatorFromAVS(address)\":{\"params\":{\"operator\":\"The address of the operator to deregister.\"}},\"deregisterOperatorFromOperatorSets(address,uint32[])\":{\"details\":\"Only callable by the RegistryCoordinator\",\"params\":{\"operator\":\"The address of the operator to deregister\",\"operatorSetIds\":\"The IDs of the operator sets to deregister from\"}},\"getOperatorRestakedStrategies(address)\":{\"details\":\"This function is intended to be called off-chainNo guarantee is made on whether the operator has shares for a strategy in a quorum or uniqueness      of each element in the returned array. The off-chain service should do that validation separately\",\"params\":{\"operator\":\"The address of the operator to get restaked strategies for\"}},\"getRestakeableStrategies()\":{\"details\":\"This function is intended to be called off-chainNo guarantee is made on uniqueness of each element in the returned array.      The off-chain service should do that validation separately\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"registerOperatorToAVS(address,(bytes,bytes32,uint256))\":{\"params\":{\"operator\":\"The address of the operator to register.\",\"operatorSignature\":\"The signature, salt, and expiry of the operator's signature.\"}},\"removeAdmin(address)\":{\"details\":\"Only callable by the owner of the contract.\",\"params\":{\"admin\":\"The address of the admin to remove.\"}},\"removeAppointee(address,address,bytes4)\":{\"details\":\"Only callable by the owner of the contract.\",\"params\":{\"appointee\":\"The address of the appointee to remove.\",\"selector\":\"The function selector to remove the appointee for.\",\"target\":\"The address of the target to remove the appointee for.\"}},\"removePendingAdmin(address)\":{\"details\":\"Only callable by the owner of the contract.\",\"params\":{\"pendingAdmin\":\"The address of the pending admin to remove.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setAppointee(address,address,bytes4)\":{\"details\":\"Only callable by the owner of the contract.\",\"params\":{\"appointee\":\"The address of the appointee to set.\",\"selector\":\"The function selector to set the appointee for.\",\"target\":\"The address of the target to set the appointee for.\"}},\"setClaimerFor(address)\":{\"details\":\"Only callable by the owner.\",\"params\":{\"claimer\":\"The address of the entity that can call `processClaim` on behalf of the earner\"}},\"setRewardsInitiator(address)\":{\"details\":\"only callable by the owner\",\"params\":{\"newRewardsInitiator\":\"The new rewards initiator address\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateAVSMetadataURI(string)\":{\"details\":\"only callable by the owner\",\"params\":{\"_metadataURI\":\"is the metadata URI for the AVS\"}}},\"title\":\"Minimal implementation of a ServiceManager-type contract. This contract can be inherited from or simply used as a point-of-reference.\",\"version\":1},\"userdoc\":{\"errors\":{\"DelayPeriodNotPassed()\":[{\"notice\":\"Thrown when a slashing proposal delay has not been met yet.\"}],\"OnlyRegistryCoordinator()\":[{\"notice\":\"Thrown when a function is called by an address that is not the RegistryCoordinator.\"}],\"OnlyRewardsInitiator()\":[{\"notice\":\"Thrown when a function is called by an address that is not the RewardsInitiator.\"}],\"OnlyStakeRegistry()\":[{\"notice\":\"Thrown when a function is called by an address that is not the StakeRegistry.\"}]},\"events\":{\"RewardsInitiatorUpdated(address,address)\":{\"notice\":\"Emitted when the rewards initiator address is updated.\"}},\"kind\":\"user\",\"methods\":{\"addPendingAdmin(address)\":{\"notice\":\"Calls `addPendingAdmin` on the `PermissionController` contract.\"},\"avsDirectory()\":{\"notice\":\"Returns the EigenLayer AVSDirectory contract.\"},\"constructor\":{\"notice\":\"Sets the (immutable) `_registryCoordinator` address\"},\"createAVSRewardsSubmission(((address,uint96)[],address,uint256,uint32,uint32)[])\":{\"notice\":\"Creates a new rewards submission to the EigenLayer RewardsCoordinator contract, to be split amongst the set of stakers delegated to operators who are registered to this `avs`\"},\"createOperatorDirectedAVSRewardsSubmission(((address,uint96)[],address,(address,uint256)[],uint32,uint32,string)[])\":{\"notice\":\"Creates a new operator-directed rewards submission, to be split amongst the operators and set of stakers delegated to operators who are registered to this `avs`.\"},\"deregisterOperatorFromAVS(address)\":{\"notice\":\"Forwards a call to EigenLayer's AVSDirectory contract to confirm operator deregistration from the AVS\"},\"deregisterOperatorFromOperatorSets(address,uint32[])\":{\"notice\":\"Deregisters an operator from specified operator sets\"},\"getOperatorRestakedStrategies(address)\":{\"notice\":\"Returns the list of strategies that the operator has potentially restaked on the AVS\"},\"getRestakeableStrategies()\":{\"notice\":\"Returns the list of strategies that the AVS supports for restaking\"},\"registerOperatorToAVS(address,(bytes,bytes32,uint256))\":{\"notice\":\"Forwards a call to EigenLayer's AVSDirectory contract to confirm operator registration with the AVS\"},\"removeAdmin(address)\":{\"notice\":\"Calls `removeAdmin` on the `PermissionController` contract.\"},\"removeAppointee(address,address,bytes4)\":{\"notice\":\"Calls `removeAppointee` on the `PermissionController` contract.\"},\"removePendingAdmin(address)\":{\"notice\":\"Calls `removePendingAdmin` on the `PermissionController` contract.\"},\"rewardsInitiator()\":{\"notice\":\"The address of the entity that can initiate rewards\"},\"setAppointee(address,address,bytes4)\":{\"notice\":\"Calls `setAppointee` on the `PermissionController` contract.\"},\"setClaimerFor(address)\":{\"notice\":\"Forwards a call to Eigenlayer's RewardsCoordinator contract to set the address of the entity that can call `processClaim` on behalf of this contract.\"},\"setRewardsInitiator(address)\":{\"notice\":\"Sets the rewards initiator address\"},\"updateAVSMetadataURI(string)\":{\"notice\":\"Updates the metadata URI for the AVS\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ServiceManagerBase.sol\":\"ServiceManagerBase\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/ds-test/src/\",\":eigenlayer-contracts/=lib/eigenlayer-contracts/\",\":erc4626-tests/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/contracts/\",\":zeus-templates/=lib/eigenlayer-contracts/lib/zeus-templates/src/\"]},\"sources\":{\"lib/eigenlayer-contracts/src/contracts/interfaces/IAVSDirectory.sol\":{\"keccak256\":\"0x569fe9a3c56b730d11bd359231c96f2f4e0b4eabd3d5a3b2bbba789a473e2bc8\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://94ed1d615914a886896cd694240c7bd87aa87396f81a85203db6b384b5a54e6d\",\"dweb:/ipfs/QmQYFc94Xsm9LsoVwtczVvwBWBo6njgdM9DwUHe4qTPR5L\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IAVSRegistrar.sol\":{\"keccak256\":\"0x3849ea6d0ec5bcc3315fb359dd98bb0d9bb9e2e5f4dd1c6be4753402af5909b3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1246544c6741420365a96dbe4ec13a57a14f3ffcad13edba69176a98826ce505\",\"dweb:/ipfs/QmRdt4FZHS3oXKun2mDpzGErfmnDNSnJm8WKctkjd2sbaW\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IAllocationManager.sol\":{\"keccak256\":\"0x68f1cc9fcb33237a49977fa1b16891d6fcbdc1421ccfbee77c219811bc9206e5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c8ddef2761c75bb1118f61aa3fb86009d29b3988842ad8c49cdee98a4c8bc7e9\",\"dweb:/ipfs/Qmcrm1QubPp8bUNpF8ERgEcxV4VS4e49hRf8hAE3wucYht\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0x95093989fb52a3544c2296c8da36223247cab1cf4e788af25f9b4ec482c4526f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f5e15fd4da8e17789a8cd2162d70b8a878d8e412442214a25eb01229f4635cbe\",\"dweb:/ipfs/QmRzPvMhmX9FBt1oLZCjNutGZpy4YRg9TU9nVgVMEqhKut\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72\",\"dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IPermissionController.sol\":{\"keccak256\":\"0xe9ec992f04d55c32e96b41767e901e83c6c2410c691e5fe73a43ba0f2a753f8b\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6a470a04c09d3471eefb3e7639591920ad23c1db775038277f432389cbc1f7b8\",\"dweb:/ipfs/QmRYhe8D32HarNkbNY4BtepWAGeawwn8h9WhW3A2NX8iX8\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IRewardsCoordinator.sol\":{\"keccak256\":\"0xd1b1aacd3f4fe705ab416a70a82ae38aad6fe403ec8b70e8d58e144848474ab2\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://23224dad9f296d8e213963de9dfeabdf16b9cf644b73679ed72a3ff534e1f088\",\"dweb:/ipfs/QmUQnNtm1ji6SqzVVzZgMqvrG6tKbxSs8DZwYXgbR6QwUR\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol\":{\"keccak256\":\"0x5164971b2648837bc100798df3633080b0f8076692a5c900f6b1aacc342241de\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2b1676f5d44cf9680c12e56b569ed876ca3038ee266c3a6c37dddf9cb2b3d87b\",\"dweb:/ipfs/QmVp4JbR9SYHDaBjfGfTh1gqoiKf2rhwV78kRPSHhjddcq\"]},\"lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x601384e7910d2edcbaf58e4480261d0c11996256e810736377f37844bea3cac3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://dcfec053867cd3a4454d7c9f07d8a7c74abbae12aed45524c8bf40e8cf8e57d4\",\"dweb:/ipfs/QmbXGprDnnsvDyMcEkfZPAb5QBnzbJdnRjutfRLuPeh8V8\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/OperatorSetLib.sol\":{\"keccak256\":\"0xac130991039e2a885fa0f820397e80354af115d9580be357ea0c76f30e59bcec\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4528c14d2b0bc84fe13996bdd299aa71235c49a3412c1073d73b5eef502305c5\",\"dweb:/ipfs/QmReiQ95MHLrj3tvP8xdSkq4UAkmQzH6KijZqX1Hzijy6S\"]},\"lib/eigenlayer-contracts/src/contracts/libraries/SlashingLib.sol\":{\"keccak256\":\"0xb5bfa03e58ee71e8672bf93c2c8f4067950f8fb61f4c5a699efbd00f96317401\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c7569fab9522bc239e3954b36f6000b7767a319ae05ad44831ebca51515103b5\",\"dweb:/ipfs/QmSnBpbagyoj3FRLDMvtoo7NiNNo6du2D5oiQZE4zeTJpZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol\":{\"keccak256\":\"0xd7ebe0f80affaa622b9efd95cc8db3e03e70d699176f7457b4a95e34a11f9834\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8cf00c5981b953e57af6f8d6dad38ff0c90c61f1f1b03042039a41797aa198b\",\"dweb:/ipfs/QmdngJRARxdVwxqG7vHDRf2QSBxK6294Ab16G6hsMoXqew\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"src/ServiceManagerBase.sol\":{\"keccak256\":\"0x510f9cb09d8297307f480490e21436a78b6c04740490f2e07891f645bc2db8f3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://14f57f4d53454aba62cbd4d014e249f72d656d0f612c9737a8633b3d97e4a543\",\"dweb:/ipfs/QmTVguhXkPdXBPhTN9ND7qieAP3LNnrmFkfuW2aQcU3LMh\"]},\"src/ServiceManagerBaseStorage.sol\":{\"keccak256\":\"0x846a5f1e6ae6b02de81e7b7543f464b88cd35c22dcc5b7bbb9ccb5934759611a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://67bfb2c78648befbcc34ebbbb9cac57f71fe899f6f48ca2d1905127b1cf25e89\",\"dweb:/ipfs/QmSGh7K3UBwF3YLusFUo1m4o6ZMrmvgS43WUGzKt8YtW6W\"]},\"src/interfaces/IBLSApkRegistry.sol\":{\"keccak256\":\"0x342339e2d04b7ce0a28a73d47e50842b2d14f6a26b460e8e5d37fcb474890a22\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://bca75a44514ec4c6c9470df2f70cd8e362a232e143a5dda99adf93abcd9f0b84\",\"dweb:/ipfs/QmW8NWKp9sgsBDkYfFsSsv9tbY6Bb6ewPsWDTEir1vq2P2\"]},\"src/interfaces/IIndexRegistry.sol\":{\"keccak256\":\"0x8a53d093c37a76dfb20a6d765c834cafadc0706ca997282191179ee1bdce6a68\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://87c14b3e34e9e8a13176a04d0d693996f9d8a44b274822670729161255b39f80\",\"dweb:/ipfs/QmbGB1HqQwAK9BgGVRGqLSxYYuQnWhgZqsZpqN5Bp3b1hq\"]},\"src/interfaces/IServiceManager.sol\":{\"keccak256\":\"0xc41a521c5d923f579189665c60b19a0fb07439d28d8c127a7fde3885b5346d40\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8a69bb052891f0c0703896dcf06e44bc588864f175c8f9f39c4ef66c3b3ce667\",\"dweb:/ipfs/QmPPbqHQZmeFqXcgZVL2YdRwA4oJ4f4sWQvvgxqLVmMxD5\"]},\"src/interfaces/IServiceManagerUI.sol\":{\"keccak256\":\"0xf09832ff3b09cc4ead864b743aa4799921b1135dd0e35d4c071ac380f8e10a54\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://df3c73bc054d7ce10d5bd526b156ba43810c25d8c8199498f99fe9f378b0c892\",\"dweb:/ipfs/Qmdiyi8BDYwF3GtQfGZaPMMhhig8Kbmxg5aK997XLhPX23\"]},\"src/interfaces/ISlashingRegistryCoordinator.sol\":{\"keccak256\":\"0x16e0c44b56e6435074ca849b77b7e67c237628d2fec216e0646319ddb78fe653\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://43d8907f9ca04344b2bf5213032e7136f499e204509bebed6589cf94edef224c\",\"dweb:/ipfs/QmaF5SCbG8rSMGdHf4mLLgZ6J7cBguKujb2TN3Fq98vh7B\"]},\"src/interfaces/ISocketRegistry.sol\":{\"keccak256\":\"0x5d4497f995bdc0f56d242b218065a9d0b9ab7f8b47421e66cb3ae37e25674d8f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://47cfc86fd6147928011e8ab8ca3689b3cee0b155a4b01700ac7e8146012d86da\",\"dweb:/ipfs/QmcqDwW5WHKWi5arVERE1j7RikN7GuQtmfX7fpSyRu5zBe\"]},\"src/interfaces/IStakeRegistry.sol\":{\"keccak256\":\"0x7d8239df5f3ea4b6919a1e1ee2a2b31615346c0d919521ca38f3958800c1dfd3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://94faa00a86a293cd0e6aa1565d3534580b964853674eaf79b1b1bbb407d6ed07\",\"dweb:/ipfs/QmUqhLCUKy6NttwXg9Jv83Yg7rpLEx1MCL3VUQP4TaVvoW\"]},\"src/libraries/BN254.sol\":{\"keccak256\":\"0x941414cfbfb510409428e51e197e5e28be3b45fb81440e183afa0caa1f077ec7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa245501f99b6f77564fe7e38f8130a0a6d589424bf413b2d1e46da8b5214982\",\"dweb:/ipfs/QmXCJx2GktmrbpYLnsAZ4KrResizL3JuhDjA3MNgito8AQ\"]},\"src/libraries/BitmapUtils.sol\":{\"keccak256\":\"0xfac31fd5a3ad9b6c1a659ed320e2171b7bec8a34cb602fb39576135574a4d6ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5bc75c2237e1e9c4e0c55069167207345bb28066c51174e1a5febb7beed888c\",\"dweb:/ipfs/QmWNUk7SYnAab7Eu6f7DBR2Cy2cAZPUbp5ZEATSsjjjwqP\"]},\"src/libraries/LibMergeSort.sol\":{\"keccak256\":\"0x09d158af4affe84dfd3f68612f7b71f3c1781b58d6d41f98ccc097065be61ec0\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1aca017e93a751c50fadffa68402c13efa8da5cac9ad7c171dd5defb4ce9dc2b\",\"dweb:/ipfs/QmXuAz8LXYkRPVd4m5Pjakf4t1fVdbT7e4pPwmusfTN2GB\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"DelayPeriodNotPassed"},{"inputs":[],"type":"error","name":"OnlyRegistryCoordinator"},{"inputs":[],"type":"error","name":"OnlyRewardsInitiator"},{"inputs":[],"type":"error","name":"OnlyStakeRegistry"},{"inputs":[{"internalType":"uint8","name":"version","type":"uint8","indexed":false}],"type":"event","name":"Initialized","anonymous":false},{"inputs":[{"internalType":"address","name":"previousOwner","type":"address","indexed":true},{"internalType":"address","name":"newOwner","type":"address","indexed":true}],"type":"event","name":"OwnershipTransferred","anonymous":false},{"inputs":[{"internalType":"address","name":"prevRewardsInitiator","type":"address","indexed":false},{"internalType":"address","name":"newRewardsInitiator","type":"address","indexed":false}],"type":"event","name":"RewardsInitiatorUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"addPendingAdmin"},{"inputs":[],"stateMutability":"view","type":"function","name":"avsDirectory","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"struct IRewardsCoordinatorTypes.RewardsSubmission[]","name":"rewardsSubmissions","type":"tuple[]","components":[{"internalType":"struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]","name":"strategiesAndMultipliers","type":"tuple[]","components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint32","name":"startTimestamp","type":"uint32"},{"internalType":"uint32","name":"duration","type":"uint32"}]}],"stateMutability":"nonpayable","type":"function","name":"createAVSRewardsSubmission"},{"inputs":[{"internalType":"struct IRewardsCoordinatorTypes.OperatorDirectedRewardsSubmission[]","name":"operatorDirectedRewardsSubmissions","type":"tuple[]","components":[{"internalType":"struct IRewardsCoordinatorTypes.StrategyAndMultiplier[]","name":"strategiesAndMultipliers","type":"tuple[]","components":[{"internalType":"contract IStrategy","name":"strategy","type":"address"},{"internalType":"uint96","name":"multiplier","type":"uint96"}]},{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"struct IRewardsCoordinatorTypes.OperatorReward[]","name":"operatorRewards","type":"tuple[]","components":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}]},{"internalType":"uint32","name":"startTimestamp","type":"uint32"},{"internalType":"uint32","name":"duration","type":"uint32"},{"internalType":"string","name":"description","type":"string"}]}],"stateMutability":"nonpayable","type":"function","name":"createOperatorDirectedAVSRewardsSubmission"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"deregisterOperatorFromAVS"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint32[]","name":"operatorSetIds","type":"uint32[]"}],"stateMutability":"nonpayable","type":"function","name":"deregisterOperatorFromOperatorSets"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function","name":"getOperatorRestakedStrategies","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getRestakeableStrategies","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"struct ISignatureUtils.SignatureWithSaltAndExpiry","name":"operatorSignature","type":"tuple","components":[{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256","name":"expiry","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"registerOperatorToAVS"},{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"removeAdmin"},{"inputs":[{"internalType":"address","name":"appointee","type":"address"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes4","name":"selector","type":"bytes4"}],"stateMutability":"nonpayable","type":"function","name":"removeAppointee"},{"inputs":[{"internalType":"address","name":"pendingAdmin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"removePendingAdmin"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"renounceOwnership"},{"inputs":[],"stateMutability":"view","type":"function","name":"rewardsInitiator","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"appointee","type":"address"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes4","name":"selector","type":"bytes4"}],"stateMutability":"nonpayable","type":"function","name":"setAppointee"},{"inputs":[{"internalType":"address","name":"claimer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setClaimerFor"},{"inputs":[{"internalType":"address","name":"newRewardsInitiator","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setRewardsInitiator"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferOwnership"},{"inputs":[{"internalType":"string","name":"_metadataURI","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"updateAVSMetadataURI"}],"devdoc":{"kind":"dev","methods":{"addPendingAdmin(address)":{"details":"Only callable by the owner of the contract.","params":{"admin":"The address of the admin to add."}},"createAVSRewardsSubmission(((address,uint96)[],address,uint256,uint32,uint32)[])":{"details":"Only callable by the permissioned rewardsInitiator addressThe duration of the `rewardsSubmission` cannot exceed `MAX_REWARDS_DURATION`The tokens are sent to the `RewardsCoordinator` contractStrategies must be in ascending order of addresses to check for duplicatesThis function will revert if the `rewardsSubmission` is malformed, e.g. if the `strategies` and `weights` arrays are of non-equal lengthsThis function may fail to execute with a large number of submissions due to gas limits. Use a smaller array of submissions if necessary.","params":{"rewardsSubmissions":"The rewards submissions being created"}},"createOperatorDirectedAVSRewardsSubmission(((address,uint96)[],address,(address,uint256)[],uint32,uint32,string)[])":{"details":"Only callable by the permissioned rewardsInitiator addressThe duration of the `rewardsSubmission` cannot exceed `MAX_REWARDS_DURATION`The tokens are sent to the `RewardsCoordinator` contractThis contract needs a token approval of sum of all `operatorRewards` in the `operatorDirectedRewardsSubmissions`, before calling this function.Strategies must be in ascending order of addresses to check for duplicatesOperators must be in ascending order of addresses to check for duplicates.This function will revert if the `operatorDirectedRewardsSubmissions` is malformed.This function may fail to execute with a large number of submissions due to gas limits. Use a smaller array of submissions if necessary.","params":{"operatorDirectedRewardsSubmissions":"The operator-directed rewards submissions being created."}},"deregisterOperatorFromAVS(address)":{"params":{"operator":"The address of the operator to deregister."}},"deregisterOperatorFromOperatorSets(address,uint32[])":{"details":"Only callable by the RegistryCoordinator","params":{"operator":"The address of the operator to deregister","operatorSetIds":"The IDs of the operator sets to deregister from"}},"getOperatorRestakedStrategies(address)":{"details":"This function is intended to be called off-chainNo guarantee is made on whether the operator has shares for a strategy in a quorum or uniqueness      of each element in the returned array. The off-chain service should do that validation separately","params":{"operator":"The address of the operator to get restaked strategies for"}},"getRestakeableStrategies()":{"details":"This function is intended to be called off-chainNo guarantee is made on uniqueness of each element in the returned array.      The off-chain service should do that validation separately"},"owner()":{"details":"Returns the address of the current owner."},"registerOperatorToAVS(address,(bytes,bytes32,uint256))":{"params":{"operator":"The address of the operator to register.","operatorSignature":"The signature, salt, and expiry of the operator's signature."}},"removeAdmin(address)":{"details":"Only callable by the owner of the contract.","params":{"admin":"The address of the admin to remove."}},"removeAppointee(address,address,bytes4)":{"details":"Only callable by the owner of the contract.","params":{"appointee":"The address of the appointee to remove.","selector":"The function selector to remove the appointee for.","target":"The address of the target to remove the appointee for."}},"removePendingAdmin(address)":{"details":"Only callable by the owner of the contract.","params":{"pendingAdmin":"The address of the pending admin to remove."}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"setAppointee(address,address,bytes4)":{"details":"Only callable by the owner of the contract.","params":{"appointee":"The address of the appointee to set.","selector":"The function selector to set the appointee for.","target":"The address of the target to set the appointee for."}},"setClaimerFor(address)":{"details":"Only callable by the owner.","params":{"claimer":"The address of the entity that can call `processClaim` on behalf of the earner"}},"setRewardsInitiator(address)":{"details":"only callable by the owner","params":{"newRewardsInitiator":"The new rewards initiator address"}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"updateAVSMetadataURI(string)":{"details":"only callable by the owner","params":{"_metadataURI":"is the metadata URI for the AVS"}}},"version":1},"userdoc":{"kind":"user","methods":{"addPendingAdmin(address)":{"notice":"Calls `addPendingAdmin` on the `PermissionController` contract."},"avsDirectory()":{"notice":"Returns the EigenLayer AVSDirectory contract."},"constructor":{"notice":"Sets the (immutable) `_registryCoordinator` address"},"createAVSRewardsSubmission(((address,uint96)[],address,uint256,uint32,uint32)[])":{"notice":"Creates a new rewards submission to the EigenLayer RewardsCoordinator contract, to be split amongst the set of stakers delegated to operators who are registered to this `avs`"},"createOperatorDirectedAVSRewardsSubmission(((address,uint96)[],address,(address,uint256)[],uint32,uint32,string)[])":{"notice":"Creates a new operator-directed rewards submission, to be split amongst the operators and set of stakers delegated to operators who are registered to this `avs`."},"deregisterOperatorFromAVS(address)":{"notice":"Forwards a call to EigenLayer's AVSDirectory contract to confirm operator deregistration from the AVS"},"deregisterOperatorFromOperatorSets(address,uint32[])":{"notice":"Deregisters an operator from specified operator sets"},"getOperatorRestakedStrategies(address)":{"notice":"Returns the list of strategies that the operator has potentially restaked on the AVS"},"getRestakeableStrategies()":{"notice":"Returns the list of strategies that the AVS supports for restaking"},"registerOperatorToAVS(address,(bytes,bytes32,uint256))":{"notice":"Forwards a call to EigenLayer's AVSDirectory contract to confirm operator registration with the AVS"},"removeAdmin(address)":{"notice":"Calls `removeAdmin` on the `PermissionController` contract."},"removeAppointee(address,address,bytes4)":{"notice":"Calls `removeAppointee` on the `PermissionController` contract."},"removePendingAdmin(address)":{"notice":"Calls `removePendingAdmin` on the `PermissionController` contract."},"rewardsInitiator()":{"notice":"The address of the entity that can initiate rewards"},"setAppointee(address,address,bytes4)":{"notice":"Calls `setAppointee` on the `PermissionController` contract."},"setClaimerFor(address)":{"notice":"Forwards a call to Eigenlayer's RewardsCoordinator contract to set the address of the entity that can call `processClaim` on behalf of this contract."},"setRewardsInitiator(address)":{"notice":"Sets the rewards initiator address"},"updateAVSMetadataURI(string)":{"notice":"Updates the metadata URI for the AVS"}},"version":1}},"settings":{"remappings":["@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/","@openzeppelin/=lib/openzeppelin-contracts/","ds-test/=lib/ds-test/src/","eigenlayer-contracts/=lib/eigenlayer-contracts/","erc4626-tests/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-upgradeable-v4.9.0/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts-v4.9.0/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/eigenlayer-contracts/lib/openzeppelin-contracts-v4.9.0/contracts/","zeus-templates/=lib/eigenlayer-contracts/lib/zeus-templates/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/ServiceManagerBase.sol":"ServiceManagerBase"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/eigenlayer-contracts/src/contracts/interfaces/IAVSDirectory.sol":{"keccak256":"0x569fe9a3c56b730d11bd359231c96f2f4e0b4eabd3d5a3b2bbba789a473e2bc8","urls":["bzz-raw://94ed1d615914a886896cd694240c7bd87aa87396f81a85203db6b384b5a54e6d","dweb:/ipfs/QmQYFc94Xsm9LsoVwtczVvwBWBo6njgdM9DwUHe4qTPR5L"],"license":"BUSL-1.1"},"lib/eigenlayer-contracts/src/contracts/interfaces/IAVSRegistrar.sol":{"keccak256":"0x3849ea6d0ec5bcc3315fb359dd98bb0d9bb9e2e5f4dd1c6be4753402af5909b3","urls":["bzz-raw://1246544c6741420365a96dbe4ec13a57a14f3ffcad13edba69176a98826ce505","dweb:/ipfs/QmRdt4FZHS3oXKun2mDpzGErfmnDNSnJm8WKctkjd2sbaW"],"license":"BUSL-1.1"},"lib/eigenlayer-contracts/src/contracts/interfaces/IAllocationManager.sol":{"keccak256":"0x68f1cc9fcb33237a49977fa1b16891d6fcbdc1421ccfbee77c219811bc9206e5","urls":["bzz-raw://c8ddef2761c75bb1118f61aa3fb86009d29b3988842ad8c49cdee98a4c8bc7e9","dweb:/ipfs/Qmcrm1QubPp8bUNpF8ERgEcxV4VS4e49hRf8hAE3wucYht"],"license":"BUSL-1.1"},"lib/eigenlayer-contracts/src/contracts/interfaces/IDelegationManager.sol":{"keccak256":"0x95093989fb52a3544c2296c8da36223247cab1cf4e788af25f9b4ec482c4526f","urls":["bzz-raw://f5e15fd4da8e17789a8cd2162d70b8a878d8e412442214a25eb01229f4635cbe","dweb:/ipfs/QmRzPvMhmX9FBt1oLZCjNutGZpy4YRg9TU9nVgVMEqhKut"],"license":"BUSL-1.1"},"lib/eigenlayer-contracts/src/contracts/interfaces/IPauserRegistry.sol":{"keccak256":"0x705c371129ac08b9b035c1c1a1572a5e3a61b48dda8b7d8d974a7bfb88ecb7fc","urls":["bzz-raw://bdb894c26fcf1b83024d006b0573663286e50d857c5dea89a9149552a971da72","dweb:/ipfs/QmdqWnSPmeF9mV96uWMSN8AhVi64U818GRwFEqr6dP3UMD"],"license":"BUSL-1.1"},"lib/eigenlayer-contracts/src/contracts/interfaces/IPermissionController.sol":{"keccak256":"0xe9ec992f04d55c32e96b41767e901e83c6c2410c691e5fe73a43ba0f2a753f8b","urls":["bzz-raw://6a470a04c09d3471eefb3e7639591920ad23c1db775038277f432389cbc1f7b8","dweb:/ipfs/QmRYhe8D32HarNkbNY4BtepWAGeawwn8h9WhW3A2NX8iX8"],"license":"BUSL-1.1"},"lib/eigenlayer-contracts/src/contracts/interfaces/IRewardsCoordinator.sol":{"keccak256":"0xd1b1aacd3f4fe705ab416a70a82ae38aad6fe403ec8b70e8d58e144848474ab2","urls":["bzz-raw://23224dad9f296d8e213963de9dfeabdf16b9cf644b73679ed72a3ff534e1f088","dweb:/ipfs/QmUQnNtm1ji6SqzVVzZgMqvrG6tKbxSs8DZwYXgbR6QwUR"],"license":"BUSL-1.1"},"lib/eigenlayer-contracts/src/contracts/interfaces/ISignatureUtils.sol":{"keccak256":"0x5164971b2648837bc100798df3633080b0f8076692a5c900f6b1aacc342241de","urls":["bzz-raw://2b1676f5d44cf9680c12e56b569ed876ca3038ee266c3a6c37dddf9cb2b3d87b","dweb:/ipfs/QmVp4JbR9SYHDaBjfGfTh1gqoiKf2rhwV78kRPSHhjddcq"],"license":"BUSL-1.1"},"lib/eigenlayer-contracts/src/contracts/interfaces/IStrategy.sol":{"keccak256":"0x601384e7910d2edcbaf58e4480261d0c11996256e810736377f37844bea3cac3","urls":["bzz-raw://dcfec053867cd3a4454d7c9f07d8a7c74abbae12aed45524c8bf40e8cf8e57d4","dweb:/ipfs/QmbXGprDnnsvDyMcEkfZPAb5QBnzbJdnRjutfRLuPeh8V8"],"license":"BUSL-1.1"},"lib/eigenlayer-contracts/src/contracts/libraries/OperatorSetLib.sol":{"keccak256":"0xac130991039e2a885fa0f820397e80354af115d9580be357ea0c76f30e59bcec","urls":["bzz-raw://4528c14d2b0bc84fe13996bdd299aa71235c49a3412c1073d73b5eef502305c5","dweb:/ipfs/QmReiQ95MHLrj3tvP8xdSkq4UAkmQzH6KijZqX1Hzijy6S"],"license":"BUSL-1.1"},"lib/eigenlayer-contracts/src/contracts/libraries/SlashingLib.sol":{"keccak256":"0xb5bfa03e58ee71e8672bf93c2c8f4067950f8fb61f4c5a699efbd00f96317401","urls":["bzz-raw://c7569fab9522bc239e3954b36f6000b7767a319ae05ad44831ebca51515103b5","dweb:/ipfs/QmSnBpbagyoj3FRLDMvtoo7NiNNo6du2D5oiQZE4zeTJpZ"],"license":"BUSL-1.1"},"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol":{"keccak256":"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888","urls":["bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a","dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol":{"keccak256":"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e","urls":["bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497","dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol":{"keccak256":"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3","urls":["bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4","dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol":{"keccak256":"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149","urls":["bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c","dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeCastUpgradeable.sol":{"keccak256":"0xd7ebe0f80affaa622b9efd95cc8db3e03e70d699176f7457b4a95e34a11f9834","urls":["bzz-raw://f8cf00c5981b953e57af6f8d6dad38ff0c90c61f1f1b03042039a41797aa198b","dweb:/ipfs/QmdngJRARxdVwxqG7vHDRf2QSBxK6294Ab16G6hsMoXqew"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b","urls":["bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34","dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"keccak256":"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329","urls":["bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95","dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol":{"keccak256":"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29","urls":["bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6","dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/Address.sol":{"keccak256":"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10","urls":["bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487","dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/utils/math/Math.sol":{"keccak256":"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0","urls":["bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929","dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC"],"license":"MIT"},"src/ServiceManagerBase.sol":{"keccak256":"0x510f9cb09d8297307f480490e21436a78b6c04740490f2e07891f645bc2db8f3","urls":["bzz-raw://14f57f4d53454aba62cbd4d014e249f72d656d0f612c9737a8633b3d97e4a543","dweb:/ipfs/QmTVguhXkPdXBPhTN9ND7qieAP3LNnrmFkfuW2aQcU3LMh"],"license":"BUSL-1.1"},"src/ServiceManagerBaseStorage.sol":{"keccak256":"0x846a5f1e6ae6b02de81e7b7543f464b88cd35c22dcc5b7bbb9ccb5934759611a","urls":["bzz-raw://67bfb2c78648befbcc34ebbbb9cac57f71fe899f6f48ca2d1905127b1cf25e89","dweb:/ipfs/QmSGh7K3UBwF3YLusFUo1m4o6ZMrmvgS43WUGzKt8YtW6W"],"license":"BUSL-1.1"},"src/interfaces/IBLSApkRegistry.sol":{"keccak256":"0x342339e2d04b7ce0a28a73d47e50842b2d14f6a26b460e8e5d37fcb474890a22","urls":["bzz-raw://bca75a44514ec4c6c9470df2f70cd8e362a232e143a5dda99adf93abcd9f0b84","dweb:/ipfs/QmW8NWKp9sgsBDkYfFsSsv9tbY6Bb6ewPsWDTEir1vq2P2"],"license":"BUSL-1.1"},"src/interfaces/IIndexRegistry.sol":{"keccak256":"0x8a53d093c37a76dfb20a6d765c834cafadc0706ca997282191179ee1bdce6a68","urls":["bzz-raw://87c14b3e34e9e8a13176a04d0d693996f9d8a44b274822670729161255b39f80","dweb:/ipfs/QmbGB1HqQwAK9BgGVRGqLSxYYuQnWhgZqsZpqN5Bp3b1hq"],"license":"BUSL-1.1"},"src/interfaces/IServiceManager.sol":{"keccak256":"0xc41a521c5d923f579189665c60b19a0fb07439d28d8c127a7fde3885b5346d40","urls":["bzz-raw://8a69bb052891f0c0703896dcf06e44bc588864f175c8f9f39c4ef66c3b3ce667","dweb:/ipfs/QmPPbqHQZmeFqXcgZVL2YdRwA4oJ4f4sWQvvgxqLVmMxD5"],"license":"BUSL-1.1"},"src/interfaces/IServiceManagerUI.sol":{"keccak256":"0xf09832ff3b09cc4ead864b743aa4799921b1135dd0e35d4c071ac380f8e10a54","urls":["bzz-raw://df3c73bc054d7ce10d5bd526b156ba43810c25d8c8199498f99fe9f378b0c892","dweb:/ipfs/Qmdiyi8BDYwF3GtQfGZaPMMhhig8Kbmxg5aK997XLhPX23"],"license":"BUSL-1.1"},"src/interfaces/ISlashingRegistryCoordinator.sol":{"keccak256":"0x16e0c44b56e6435074ca849b77b7e67c237628d2fec216e0646319ddb78fe653","urls":["bzz-raw://43d8907f9ca04344b2bf5213032e7136f499e204509bebed6589cf94edef224c","dweb:/ipfs/QmaF5SCbG8rSMGdHf4mLLgZ6J7cBguKujb2TN3Fq98vh7B"],"license":"BUSL-1.1"},"src/interfaces/ISocketRegistry.sol":{"keccak256":"0x5d4497f995bdc0f56d242b218065a9d0b9ab7f8b47421e66cb3ae37e25674d8f","urls":["bzz-raw://47cfc86fd6147928011e8ab8ca3689b3cee0b155a4b01700ac7e8146012d86da","dweb:/ipfs/QmcqDwW5WHKWi5arVERE1j7RikN7GuQtmfX7fpSyRu5zBe"],"license":"BUSL-1.1"},"src/interfaces/IStakeRegistry.sol":{"keccak256":"0x7d8239df5f3ea4b6919a1e1ee2a2b31615346c0d919521ca38f3958800c1dfd3","urls":["bzz-raw://94faa00a86a293cd0e6aa1565d3534580b964853674eaf79b1b1bbb407d6ed07","dweb:/ipfs/QmUqhLCUKy6NttwXg9Jv83Yg7rpLEx1MCL3VUQP4TaVvoW"],"license":"BUSL-1.1"},"src/libraries/BN254.sol":{"keccak256":"0x941414cfbfb510409428e51e197e5e28be3b45fb81440e183afa0caa1f077ec7","urls":["bzz-raw://aa245501f99b6f77564fe7e38f8130a0a6d589424bf413b2d1e46da8b5214982","dweb:/ipfs/QmXCJx2GktmrbpYLnsAZ4KrResizL3JuhDjA3MNgito8AQ"],"license":"MIT"},"src/libraries/BitmapUtils.sol":{"keccak256":"0xfac31fd5a3ad9b6c1a659ed320e2171b7bec8a34cb602fb39576135574a4d6ae","urls":["bzz-raw://c5bc75c2237e1e9c4e0c55069167207345bb28066c51174e1a5febb7beed888c","dweb:/ipfs/QmWNUk7SYnAab7Eu6f7DBR2Cy2cAZPUbp5ZEATSsjjjwqP"],"license":"MIT"},"src/libraries/LibMergeSort.sol":{"keccak256":"0x09d158af4affe84dfd3f68612f7b71f3c1781b58d6d41f98ccc097065be61ec0","urls":["bzz-raw://1aca017e93a751c50fadffa68402c13efa8da5cac9ad7c171dd5defb4ce9dc2b","dweb:/ipfs/QmXuAz8LXYkRPVd4m5Pjakf4t1fVdbT7e4pPwmusfTN2GB"],"license":"BUSL-1.1"}},"version":1},"id":129}